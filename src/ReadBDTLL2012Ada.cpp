// Include files 



// local
#include "ReadBDTLL2012Ada.h"

//-----------------------------------------------------------------------------
// Implementation file for class : ReadBDTLL2012Ada
//
// 2014-11-25 : Christian Voss
//-----------------------------------------------------------------------------
BDTLL2012AdaNode::~BDTLL2012AdaNode()
{
  if (fLeft  != NULL) delete fLeft;
  if (fRight != NULL) delete fRight;
} 
//_______________________________________________________________________
bool BDTLL2012AdaNode::GoesRight( const std::vector<double>& inputValues ) const
{
   // test event if it decends the tree at this node to the right
   bool result;
     result = (inputValues[fSelector] > fCutValue );
   if (fCutType == true) return result; //the cuts are selecting Signal ;
   else return !result;
} 
//_______________________________________________________________________
bool BDTLL2012AdaNode::GoesLeft( const std::vector<double>& inputValues ) const
{
   // test event if it decends the tree at this node to the left
   if (!this->GoesRight(inputValues)) return true;
   else return false;
}
//=============================================================================
// Standard constructor, initializes variables
//=============================================================================
ReadBDTLL2012Ada::ReadBDTLL2012Ada( std::vector<std::string>& theInputVars )  
  : IClassifierReader()
  , fClassName( "ReadBDTLL2012Ada" )
  , fNvars( 20 )
  , fIsNormalised( false )
{
  // the training input variables
  const char* inputVars[] = { 
    "log_pi_IP",
    "log_p_IP",
    "log_Lpi_IP",
    "log_Lp_IP",
    "log_BIP",
    "log_LIP",
    "log_BVtxchi2",
    "FitProb",
    "log_B_DauSumchi2",
    "log_B_FLBchi2",
    "log_Lambda_FDchi2",
    "B_PT",
    "B_Eta",
    "log_B_ctau",
    "log_L_ctau",
    "BWerner",
    "LWerner",
    "ppiDist",
    "LAngle",
    "Pointing"
  };
  
  // sanity checks
  if (theInputVars.size() <= 0) {
    std::cout << "Problem in class \"" << fClassName << "\": empty input vector" << std::endl;
    fStatusIsClean = false;
  }
  
  if (theInputVars.size() != fNvars) {
    std::cout << "Problem in class \"" << fClassName << "\": mismatch in number of input values: "
              << theInputVars.size() << " != " << fNvars << std::endl;
    fStatusIsClean = false;
  }
  
  // validate input variables
  for (size_t ivar = 0; ivar < theInputVars.size(); ivar++) {
    if (theInputVars[ivar] != inputVars[ivar]) {
      std::cout << "Problem in class \"" << fClassName << "\": mismatch in input variable names" << std::endl
                << " for variable [" << ivar << "]: " << theInputVars[ivar].c_str() << " != " << inputVars[ivar] << std::endl;
      fStatusIsClean = false;
    }
  }
  
  // initialize min and max vectors (for normalisation)
  fVmin[0] = 0;
  fVmax[0] = 0;
  fVmin[1] = 0;
  fVmax[1] = 0;
  fVmin[2] = 0;
  fVmax[2] = 0;
  fVmin[3] = 0;
  fVmax[3] = 0;
  fVmin[4] = 0;
  fVmax[4] = 0;
  fVmin[5] = 0;
  fVmax[5] = 0;
  fVmin[6] = 0;
  fVmax[6] = 0;
  fVmin[7] = 0;
  fVmax[7] = 0;
  fVmin[8] = 0;
  fVmax[8] = 0;
  fVmin[9] = 0;
  fVmax[9] = 0;
  fVmin[10] = 0;
  fVmax[10] = 0;
  fVmin[11] = 0;
  fVmax[11] = 0;
  fVmin[12] = 0;
  fVmax[12] = 0;
  fVmin[13] = 0;
  fVmax[13] = 0;
  fVmin[14] = 0;
  fVmax[14] = 0;
  fVmin[15] = 0;
  fVmax[15] = 0;
  fVmin[16] = 0;
  fVmax[16] = 0;
  fVmin[17] = 0;
  fVmax[17] = 0;
  fVmin[18] = 0;
  fVmax[18] = 0;
  fVmin[19] = 0;
  fVmax[19] = 0;
  
  // initialize input variable types
  fType[0] = 'F';
  fType[1] = 'F';
  fType[2] = 'F';
  fType[3] = 'F';
  fType[4] = 'F';
  fType[5] = 'F';
  fType[6] = 'F';
  fType[7] = 'F';
  fType[8] = 'F';
  fType[9] = 'F';
  fType[10] = 'F';
  fType[11] = 'F';
  fType[12] = 'F';
  fType[13] = 'F';
  fType[14] = 'F';
  fType[15] = 'F';
  fType[16] = 'F';
  fType[17] = 'F';
  fType[18] = 'F';
  fType[19] = 'F';
  
  // initialize constants
  Initialize();
}
//=============================================================================
// Destructor
//=============================================================================
ReadBDTLL2012Ada::~ReadBDTLL2012Ada() {
  Clear();
} 
//=============================================================================
double ReadBDTLL2012Ada::GetMvaValue__( const std::vector<double>& inputValues ) const
{
  double myMVA = 0;
   double norm  = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
     BDTLL2012AdaNode *current = fForest[itree];
     while (current->GetNodeType() == 0) { //intermediate node
       if (current->GoesRight(inputValues)) current=(BDTLL2012AdaNode*)current->GetRight();
       else current=(BDTLL2012AdaNode*)current->GetLeft();
     }
     myMVA += fBoostWeights[itree] *  current->GetNodeType();
     norm  += fBoostWeights[itree];
   }
   return myMVA /= norm;
};
//=============================================================================
void ReadBDTLL2012Ada::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
//=============================================================================
double ReadBDTLL2012Ada::GetMvaValue( const std::vector<double>& inputValues ) const
{
  // classifier response value
  double retval = 0;
  
  // classifier response, sanity check first
  if (!IsStatusClean()) {
    std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
              << " because status is dirty" << std::endl;
    retval = 0;
  }
  else {
    if (IsNormalised()) {
      // normalise variables
      std::vector<double> iV;
      iV.reserve(inputValues.size());
      int ivar = 0;
      for (std::vector<double>::const_iterator varIt = inputValues.begin();
           varIt != inputValues.end(); varIt++, ivar++) {
        iV.push_back(NormVariable( *varIt, fVmin[ivar], fVmax[ivar] ));
      }
      retval = GetMvaValue__( iV );
    }
    else {
      retval = GetMvaValue__( inputValues );
    }
  }
  
  return retval;
}
//______________________________________________________________________________________________
void ReadBDTLL2012Ada::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(1.08461660025467);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0434987, 1, 1, 0.891376,-99) , 
NN_LL(
0, 
0, 
-1, 0.147718, 1, -1, 0.0960344,-99) , 
19, 0.0887985, 1, 0, 0.507504,-99)    );
  // itree = 1
  fBoostWeights.push_back(0.86692);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0412301, 1, 1, 0.866253,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.397164,-99) , 
5, -0.949945, 0, 0, 0.75021,-99) , 
NN_LL(
0, 
0, 
-1, -2.09284, 0, -1, 0.0727499,-99) , 
19, 0.126222, 1, 0, 0.488088,-99)    );
  // itree = 2
  fBoostWeights.push_back(0.709563);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 5709.87, 0, 1, 0.867721,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.435121,-99) , 
8, 2.31535, 0, 0, 0.734869,-99) , 
NN_LL(
0, 
0, 
-1, 0.165777, 1, -1, 0.15073,-99) , 
19, 0.107895, 1, 0, 0.49602,-99)    );
  // itree = 3
  fBoostWeights.push_back(0.645628);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.160658, 0, 1, 0.839734,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.578364,-99) , 
NN_LL(
0, 
0, 
-1, 0.382304, 0, -1, 0.128495,-99) , 
13, -0.701357, 0, 0, 0.315528,-99) , 
11, 5706.18, 0, 0, 0.517571,-99)    );
  // itree = 4
  fBoostWeights.push_back(0.649817);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.193425, 0, 1, 0.826497,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.637459,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.344082,-99) , 
6, 1.537, 1, 0, 0.483567,-99) , 
NN_LL(
0, 
0, 
-1, 0.198858, 1, -1, 0.0976945,-99) , 
13, -0.759022, 0, 0, 0.307724,-99) , 
11, 6060.14, 0, 0, 0.491566,-99)    );
  // itree = 5
  fBoostWeights.push_back(0.533511);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0282661, 1, 1, 0.742591,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.687577,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.381798,-99) , 
2, 0.129582, 0, 0, 0.556028,-99) , 
NN_LL(
0, 
0, 
-1, 1.20389, 1, -1, 0.194825,-99) , 
4, -2.09173, 0, 0, 0.342312,-99) , 
19, 0.0544138, 1, 0, 0.500497,-99)    );
  // itree = 6
  fBoostWeights.push_back(0.594378);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.16986, 1, 1, 0.815767,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.581771,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.356126,-99) , 
11, 3262.85, 0, 0, 0.46071,-99) , 
11, 5402.07, 0, 0, 0.644978,-99) , 
NN_LL(
0, 
0, 
-1, 0.193257, 1, -1, 0.125643,-99) , 
19, 0.141004, 1, 0, 0.486683,-99)    );
  // itree = 7
  fBoostWeights.push_back(0.560555);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.838717,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.738958,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.443863,-99) , 
6, 1.71724, 1, 0, 0.600879,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.269869,-99) , 
4, -2.28683, 0, 0, 0.495488,-99) , 
19, 0.0326145, 1, 0, 0.596073,-99) , 
NN_LL(
0, 
0, 
-1, 0.0332091, 1, -1, 0.154251,-99) , 
5, -1.29852, 0, 0, 0.489211,-99)    );
  // itree = 8
  fBoostWeights.push_back(0.497271);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0381793, 1, 1, 0.696978,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.367429,-99) , 
10, 1.38411, 0, 0, 0.619509,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.277458,-99) , 
4, -2.59389, 0, 0, 0.564923,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.044662,-99) , 
19, 0.197548, 1, 0, 0.483765,-99)    );
  // itree = 9
  fBoostWeights.push_back(0.43646);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0190101, 1, 1, 0.691731,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.620925,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.396656,-99) , 
10, 1.95389, 0, 0, 0.511026,-99) , 
NN_LL(
0, 
0, 
-1, 0.204759, 0, -1, 0.177186,-99) , 
5, -0.997219, 0, 0, 0.350066,-99) , 
11, 5831.06, 0, 0, 0.480877,-99)    );
  // itree = 10
  fBoostWeights.push_back(0.449803);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.716551,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.636962,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.350512,-99) , 
13, -0.676709, 0, 0, 0.515069,-99) , 
NN_LL(
0, 
0, 
-1, 0.0434091, 1, -1, 0.287477,-99) , 
11, 2816.36, 0, 0, 0.439473,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.0665357,-99) , 
5, -1.411, 0, 0, 0.378917,-99) , 
11, 7345.96, 0, 0, 0.458672,-99)    );
  // itree = 11
  fBoostWeights.push_back(0.425964);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.782142,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0338329, 1, 1, 0.619265,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.38276,-99) , 
7, 0.0639385, 0, 0, 0.55181,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.272529,-99) , 
5, -1.3159, 0, 0, 0.50383,-99) , 
11, 7809.97, 0, 0, 0.571483,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.112521,-99) , 
19, 0.212717, 1, 0, 0.510823,-99)    );
  // itree = 12
  fBoostWeights.push_back(0.372769);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.831735,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.762918,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.497995,-99) , 
17, 0.0152888, 1, 0, 0.633094,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.364466,-99) , 
4, -2.19264, 0, 0, 0.528664,-99) , 
7, 0.57964, 0, 0, 0.592894,-99) , 
NN_LL(
0, 
0, 
-1, 0.740005, 0, -1, 0.320185,-99) , 
17, 0.033831, 1, 0, 0.470028,-99)    );
  // itree = 13
  fBoostWeights.push_back(0.415577);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.835834,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.686043,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.625667,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.372147,-99) , 
19, 0.0506541, 1, 0, 0.492751,-99) , 
15, 0.0100939, 0, 0, 0.546116,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.296413,-99) , 
5, -1.28966, 0, 0, 0.493711,-99) , 
11, 7811.45, 0, 0, 0.560097,-99) , 
NN_LL(
0, 
0, 
-1, -0.660047, 0, -1, 0.287058,-99) , 
6, 2.01677, 1, 0, 0.488325,-99)    );
  // itree = 14
  fBoostWeights.push_back(0.293547);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.513161, 0, 1, 0.664885,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.424991,-99) , 
17, 0.0387016, 1, 0, 0.567504,-99) , 
NN_LL(
0, 
0, 
-1, -2.0977, 0, -1, 0.323412,-99) , 
19, 0.143933, 1, 0, 0.495083,-99)    );
  // itree = 15
  fBoostWeights.push_back(0.32091);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.20827, 1, 1, 0.708755,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.409884,-99) , 
19, 0.141952, 1, 0, 0.628417,-99) , 
NN_LL(
0, 
0, 
-1, 0.00650175, 1, -1, 0.388054,-99) , 
4, -2.34025, 0, 0, 0.548073,-99)    );
  // itree = 16
  fBoostWeights.push_back(0.352422);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.35409, 0, 1, 0.711236,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.446895,-99) , 
11, 3733.79, 0, 0, 0.640787,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.56936,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.309242,-99) , 
7, 0.437816, 0, 0, 0.401707,-99) , 
4, -2.31143, 0, 0, 0.54825,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.298787,-99) , 
7, 0.0322474, 0, 0, 0.495904,-99)    );
  // itree = 17
  fBoostWeights.push_back(0.446625);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.531263, 1, 1, 0.79899,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.639801,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.403756,-99) , 
3, -0.260857, 1, 0, 0.545634,-99) , 
11, 4966.83, 0, 0, 0.66537,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.260768,-99) , 
10, 1.19503, 0, 0, 0.590479,-99) , 
NN_LL(
0, 
0, 
-1, 0.0338168, 1, -1, 0.299351,-99) , 
5, -1.25475, 0, 0, 0.527006,-99)    );
  // itree = 18
  fBoostWeights.push_back(0.303332);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.503761, 1, 1, 0.691371,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.493339,-99) , 
4, -2.44265, 0, 0, 0.642853,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.4329,-99) , 
14, 0.0733114, 0, 0, 0.595873,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.311743,-99) , 
19, 0.192319, 1, 0, 0.56185,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.267244,-99) , 
17, 0.0717501, 1, 0, 0.526736,-99)    );
  // itree = 19
  fBoostWeights.push_back(0.299897);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.717111,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.602395,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.379842,-99) , 
4, -2.27524, 0, 0, 0.515815,-99) , 
3, -0.305605, 0, 0, 0.588178,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.421844,-99) , 
14, 0.939039, 1, 0, 0.554096,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.353095,-99) , 
10, 1.18316, 0, 0, 0.522489,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.27144,-99) , 
5, -1.49272, 0, 0, 0.495959,-99)    );
  // itree = 20
  fBoostWeights.push_back(0.357561);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.714725,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.662502,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.409543,-99) , 
16, -2.49919, 1, 0, 0.551148,-99) , 
10, 1.95734, 1, 0, 0.618314,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.61609,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.312011,-99) , 
11, 4971.4, 0, 0, 0.421318,-99) , 
4, -2.28274, 0, 0, 0.545803,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.294992,-99) , 
2, -0.28235, 0, 0, 0.500279,-99)    );
  // itree = 21
  fBoostWeights.push_back(0.316936);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.278715, 0, 1, 0.687227,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.467758,-99) , 
17, 0.0332772, 1, 0, 0.59849,-99) , 
NN_LL(
0, 
0, 
-1, -1.968, 0, -1, 0.305058,-99) , 
15, 0.00646428, 1, 0, 0.478397,-99)    );
  // itree = 22
  fBoostWeights.push_back(0.31461);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.787449,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.723818,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.612364,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.454173,-99) , 
9, 1.56086, 0, 0, 0.519825,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.581688,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.370211,-99) , 
18, 1.43487, 1, 0, 0.462611,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.217929,-99) , 
18, 0.981754, 0, 0, 0.385579,-99) , 
0, -0.596509, 0, 0, 0.452856,-99) , 
7, 0.642594, 0, 0, 0.486749,-99) , 
10, 2.47574, 0, 0, 0.526907,-99)    );
  // itree = 23
  fBoostWeights.push_back(0.369932);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.771931,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.697867,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.632318,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.437027,-99) , 
0, -0.786324, 1, 0, 0.513704,-99) , 
0, -0.330054, 0, 0, 0.558235,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.310713,-99) , 
18, 0.819728, 0, 0, 0.507885,-99) , 
7, 0.578327, 0, 0, 0.54993,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.136307,-99) , 
19, 0.186531, 1, 0, 0.503787,-99)    );
  // itree = 24
  fBoostWeights.push_back(0.320939);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.781761,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.36769, 0, 1, 0.704288,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.471218,-99) , 
4, -2.03803, 1, 0, 0.624965,-99) , 
NN_LL(
0, 
0, 
-1, -2.25857, 0, -1, 0.414882,-99) , 
17, 0.0386939, 1, 0, 0.539041,-99) , 
NN_LL(
0, 
0, 
-1, -2.06792, 0, -1, 0.347772,-99) , 
16, -2.22311, 1, 0, 0.463169,-99) , 
3, -0.837934, 1, 0, 0.510789,-99)    );
  // itree = 25
  fBoostWeights.push_back(0.350482);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.74847,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.731425,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.663291,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.478688,-99) , 
2, 0.0717922, 0, 0, 0.580167,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.506804,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.274944,-99) , 
12, 3.23599, 1, 0, 0.378853,-99) , 
11, 4657.46, 0, 0, 0.480539,-99) , 
16, -1.92759, 0, 0, 0.544258,-99) , 
5, -0.51362, 0, 0, 0.593151,-99)    );
  // itree = 26
  fBoostWeights.push_back(0.319385);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0725679, 1, 1, 0.679793,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.615517,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.566629,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.340399,-99) , 
2, 0.269521, 0, 0, 0.426784,-99) , 
0, -0.563805, 0, 0, 0.492977,-99) , 
7, 0.257041, 0, 0, 0.566501,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.297683,-99) , 
18, 0.719376, 0, 0, 0.518947,-99)    );
  // itree = 27
  fBoostWeights.push_back(0.286095);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.696247,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.634066,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.444167,-99) , 
7, 0.320344, 0, 0, 0.502946,-99) , 
12, 3.30764, 1, 0, 0.561052,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.519774,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.18159,-99) , 
8, 1.98424, 1, 0, 0.357611,-99) , 
19, 0.140333, 1, 0, 0.508281,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.269928,-99) , 
4, -2.67664, 0, 0, 0.480784,-99)    );
  // itree = 28
  fBoostWeights.push_back(0.321012);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -2.29576, 1, 1, 0.684142,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.62734,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.560711,-99) , 
NN_LL(
0, 
0, 
-1, 0.193221, 0, -1, 0.281254,-99) , 
4, -2.00685, 0, 0, 0.407495,-99) , 
2, 0.429111, 0, 0, 0.475348,-99) , 
19, 0.0515775, 1, 0, 0.543546,-99)    );
  // itree = 29
  fBoostWeights.push_back(0.270485);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.738217,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.586494,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.530261,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.248046,-99) , 
12, 3.34525, 0, 0, 0.43902,-99) , 
0, -0.522105, 0, 0, 0.501943,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.268972,-99) , 
19, 0.169611, 1, 0, 0.462116,-99) , 
7, 0.644715, 0, 0, 0.493252,-99)    );
  // itree = 30
  fBoostWeights.push_back(0.310971);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.701252,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.687651,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.464917,-99) , 
18, 1.05985, 0, 0, 0.609308,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.57672,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.34832,-99) , 
18, 1.22254, 1, 0, 0.450901,-99) , 
17, 0.0289846, 0, 0, 0.541803,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.322749,-99) , 
0, -0.828469, 0, 0, 0.491943,-99) , 
11, 7807.66, 0, 0, 0.532294,-99)    );
  // itree = 31
  fBoostWeights.push_back(0.275435);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.786576,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.575385,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.442817,-99) , 
18, 0.846656, 1, 0, 0.493095,-99) , 
11, 6758.36, 0, 0, 0.581629,-99) , 
NN_LL(
0, 
0, 
-1, 0.134747, 1, -1, 0.400452,-99) , 
6, 1.53612, 1, 0, 0.493301,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.246946,-99) , 
4, -2.7114, 0, 0, 0.459983,-99)    );
  // itree = 32
  fBoostWeights.push_back(0.326522);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.769797,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.695339,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.465089,-99) , 
12, 3.91008, 1, 0, 0.6109,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.40196,-99) , 
15, 0.00585525, 1, 0, 0.547655,-99) , 
15, 0.016485, 0, 0, 0.592179,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.60007,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.359262,-99) , 
10, 2.02405, 0, 0, 0.460042,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.230713,-99) , 
4, -2.22828, 0, 0, 0.395069,-99) , 
6, 1.69679, 1, 0, 0.524657,-99)    );
  // itree = 33
  fBoostWeights.push_back(0.330902);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.823829,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.620321,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.367205,-99) , 
17, 0.0434492, 1, 0, 0.504589,-99) , 
11, 6197.65, 0, 0, 0.594814,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.644069,-99) , 
NN_LL(
0, 
0, 
-1, 1.32802, 0, -1, 0.419027,-99) , 
3, -0.689592, 1, 0, 0.489861,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.218182,-99) , 
0, -0.848392, 0, 0, 0.431171,-99) , 
10, 1.96305, 0, 0, 0.508066,-99)    );
  // itree = 34
  fBoostWeights.push_back(0.327576);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.744491,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.477588,-99) , 
5, -0.356514, 1, 0, 0.647342,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.578522,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.39895,-99) , 
12, 3.46553, 0, 0, 0.501575,-99) , 
0, -0.568602, 0, 0, 0.585532,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.376477,-99) , 
9, 1.05958, 0, 0, 0.545261,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.144857,-99) , 
18, 0.518673, 0, 0, 0.495293,-99)    );
  // itree = 35
  fBoostWeights.push_back(0.292655);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.7724,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 1.27071, 0, 1, 0.658947,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 1.65935, 1, 1, 0.599725,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.375614,-99) , 
1, -0.535818, 1, 0, 0.520317,-99) , 
10, 2.14238, 0, 0, 0.568236,-99) , 
9, 1.78842, 0, 0, 0.594779,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.37126,-99) , 
13, -0.928145, 0, 0, 0.557985,-99)    );
  // itree = 36
  fBoostWeights.push_back(0.299976);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.745607,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.648191,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.426142,-99) , 
9, 1.24268, 1, 0, 0.535852,-99) , 
8, 2.79784, 0, 0, 0.587541,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.406155,-99) , 
18, 0.81026, 0, 0, 0.551595,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.307533,-99) , 
19, 0.141211, 1, 0, 0.502805,-99)    );
  // itree = 37
  fBoostWeights.push_back(0.32511);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 3.51152, 0, 1, 0.722844,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.691519,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.56394,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.369232,-99) , 
11, 3788.49, 0, 0, 0.494885,-99) , 
0, -0.43247, 0, 0, 0.544925,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.254359,-99) , 
18, 0.736469, 0, 0, 0.490111,-99) , 
10, 1.66388, 1, 0, 0.556939,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.374517,-99) , 
16, -1.81025, 1, 0, 0.528055,-99)    );
  // itree = 38
  fBoostWeights.push_back(0.260662);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.12772, 1, 1, 0.632463,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.631103,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.473462,-99) , 
13, -0.505217, 1, 0, 0.557228,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.281525,-99) , 
19, 0.144403, 1, 0, 0.494773,-99) , 
16, -2.63738, 1, 0, 0.542022,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.320093,-99) , 
4, -2.6763, 0, 0, 0.513347,-99)    );
  // itree = 39
  fBoostWeights.push_back(0.2538);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.732863,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.577999,-99) , 
NN_LL(
0, 
0, 
-1, 4143.39, 0, -1, 0.419474,-99) , 
12, 3.81234, 0, 0, 0.4693,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.294902,-99) , 
19, 0.137748, 1, 0, 0.429432,-99) , 
9, 1.72767, 0, 0, 0.468076,-99)    );
  // itree = 40
  fBoostWeights.push_back(0.339806);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.766492,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.486838,-99) , 
17, 0.0853341, 1, 0, 0.655125,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.73195,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.651669,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.4284,-99) , 
11, 4213.45, 0, 0, 0.571973,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.301963,-99) , 
4, -2.25155, 0, 0, 0.486239,-99) , 
15, 0.00265584, 1, 0, 0.549941,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.359088,-99) , 
16, -2.7785, 0, 0, 0.509023,-99) , 
17, 0.0628612, 0, 0, 0.548393,-99)    );
  // itree = 41
  fBoostWeights.push_back(0.255838);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.661475,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.649436,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.410809,-99) , 
1, -0.462756, 1, 0, 0.553116,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.398804,-99) , 
16, -2.63972, 0, 0, 0.508689,-99) , 
12, 3.2023, 1, 0, 0.543567,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.503222,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.262542,-99) , 
8, 1.86998, 1, 0, 0.386057,-99) , 
9, 1.11729, 0, 0, 0.501431,-99)    );
  // itree = 42
  fBoostWeights.push_back(0.220815);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.585445,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.580711,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.458846,-99) , 
13, -0.322621, 1, 0, 0.527062,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.527126,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.359211,-99) , 
12, 3.50571, 1, 0, 0.442408,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.21677,-99) , 
1, -0.793567, 1, 0, 0.34628,-99) , 
13, -0.632252, 0, 0, 0.438163,-99) , 
11, 7811.45, 0, 0, 0.47117,-99)    );
  // itree = 43
  fBoostWeights.push_back(0.377705);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0330452, 1, 1, 0.660504,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.636203,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.31261,-99) , 
0, -0.557054, 0, 0, 0.468863,-99) , 
10, 1.95375, 0, 0, 0.55837,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.329049,-99) , 
11, 2472.17, 0, 0, 0.510114,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.217356,-99) , 
1, -1.02821, 0, 0, 0.468937,-99)    );
  // itree = 44
  fBoostWeights.push_back(0.370445);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.74682,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.61645,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.397667,-99) , 
4, -2.09685, 0, 0, 0.521763,-99) , 
19, 0.0589416, 1, 0, 0.612994,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.310542,-99) , 
18, 2.03023, 1, 0, 0.541292,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.292194,-99) , 
5, -1.25475, 0, 0, 0.501132,-99)    );
  // itree = 45
  fBoostWeights.push_back(0.278197);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.161191, 0, 1, 0.6384,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.412588,-99) , 
17, 0.037978, 1, 0, 0.541631,-99) , 
NN_LL(
0, 
0, 
-1, 1.38622, 1, -1, 0.318057,-99) , 
13, -0.776782, 0, 0, 0.47644,-99)    );
  // itree = 46
  fBoostWeights.push_back(0.290566);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 5711.31, 0, 1, 0.634945,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.600925,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.400946,-99) , 
8, 2.46459, 1, 0, 0.478658,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.326514,-99) , 
9, 1.10534, 0, 0, 0.444214,-99) , 
18, 1.4977, 0, 0, 0.519677,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.22234,-99) , 
16, -1.81025, 1, 0, 0.485767,-99)    );
  // itree = 47
  fBoostWeights.push_back(0.233503);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.681264,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.474957,-99) , 
15, 0.00770127, 0, 0, 0.568887,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.502887,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.325778,-99) , 
4, -2.13338, 1, 0, 0.402472,-99) , 
1, -0.49244, 1, 0, 0.503175,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.312963,-99) , 
5, -1.16762, 0, 0, 0.467021,-99)    );
  // itree = 48
  fBoostWeights.push_back(0.279817);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.768102,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.727992,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.68882,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.493812,-99) , 
11, 2773.66, 1, 0, 0.548311,-99) , 
4, -1.9096, 0, 0, 0.602049,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.38528,-99) , 
0, -0.397036, 1, 0, 0.546049,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.298788,-99) , 
4, -2.59262, 0, 0, 0.517181,-99) , 
19, 0.0181144, 1, 0, 0.543986,-99)    );
  // itree = 49
  fBoostWeights.push_back(0.281739);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.702938,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.620737,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.492735,-99) , 
4, -2.30878, 0, 0, 0.567423,-99) , 
10, 2.20907, 0, 0, 0.615177,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.45397,-99) , 
9, 1.71961, 1, 0, 0.581292,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.302792,-99) , 
15, 0.0128847, 1, 0, 0.545399,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.264731,-99) , 
11, 2551.27, 0, 0, 0.49496,-99)    );
  // itree = 50
  fBoostWeights.push_back(0.301977);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.809053,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.648928,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.631971,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.355665,-99) , 
15, 0.0127178, 0, 0, 0.468501,-99) , 
19, 0.0700744, 1, 0, 0.544548,-99) , 
11, 6840.21, 0, 0, 0.619425,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.454927,-99) , 
6, 2.0049, 1, 0, 0.579023,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.392848,-99) , 
17, 0.0677022, 1, 0, 0.547481,-99)    );
  // itree = 51
  fBoostWeights.push_back(0.245723);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0422525, 1, 1, 0.582279,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.64222,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.322967,-99) , 
14, 0.673205, 0, 0, 0.444596,-99) , 
19, 0.108125, 1, 0, 0.531939,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.32998,-99) , 
3, 0.00812281, 1, 0, 0.502757,-99)    );
  // itree = 52
  fBoostWeights.push_back(0.275234);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.742521,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.450291,-99) , 
16, -2.25677, 1, 0, 0.643628,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.583138,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.407326,-99) , 
10, 1.91861, 1, 0, 0.491333,-99) , 
4, -2.15488, 1, 0, 0.565431,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.353416,-99) , 
13, -0.870482, 0, 0, 0.526803,-99)    );
  // itree = 53
  fBoostWeights.push_back(0.265509);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.804881,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.643054,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.606253,-99) , 
NN_LL(
0, 
0, 
-1, 0.120576, 1, -1, 0.409192,-99) , 
13, -0.973814, 1, 0, 0.451313,-99) , 
19, 0.0367476, 1, 0, 0.496838,-99) , 
6, 0.71167, 1, 0, 0.533946,-99)    );
  // itree = 54
  fBoostWeights.push_back(0.296134);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.718659,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.645646,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.381949,-99) , 
7, 0.193425, 0, 0, 0.507881,-99) , 
4, -1.99723, 0, 0, 0.580992,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.590293,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.372303,-99) , 
4, -2.18146, 0, 0, 0.513977,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.330813,-99) , 
6, 1.24301, 0, 0, 0.450697,-99) , 
11, 4652.54, 0, 0, 0.51602,-99)    );
  // itree = 55
  fBoostWeights.push_back(0.278648);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 2.0319, 0, 1, 0.686445,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.40024, 1, 1, 0.59244,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.404461,-99) , 
17, 0.028714, 0, 0, 0.49504,-99) , 
NN_LL(
0, 
0, 
-1, -0.898021, 0, -1, 0.342105,-99) , 
12, 3.46745, 0, 0, 0.432101,-99) , 
3, -0.673299, 1, 0, 0.491738,-99)    );
  // itree = 56
  fBoostWeights.push_back(0.240855);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -1.99056, 1, 1, 0.646181,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.443118,-99) , 
13, -0.767497, 0, 0, 0.595786,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.436897,-99) , 
12, 4.06094, 1, 0, 0.563602,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.326338,-99) , 
19, 0.188169, 1, 0, 0.53883,-99)    );
  // itree = 57
  fBoostWeights.push_back(0.238456);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.717941,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.541371,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.430887,-99) , 
12, 3.54865, 1, 0, 0.485401,-99) , 
17, 0.0189595, 1, 0, 0.571348,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.401136,-99) , 
10, 1.44184, 0, 0, 0.529351,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.358372,-99) , 
19, 0.143721, 1, 0, 0.49752,-99)    );
  // itree = 58
  fBoostWeights.push_back(0.268219);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.561479, 0, 1, 0.68362,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.737159,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.484336,-99) , 
12, 3.60896, 0, 0, 0.636868,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.462312,-99) , 
10, 1.65935, 1, 0, 0.567607,-99) , 
10, 2.14238, 0, 0, 0.612116,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.388293,-99) , 
5, -1.22296, 0, 0, 0.572177,-99)    );
  // itree = 59
  fBoostWeights.push_back(0.264745);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.0800851, 1, 1, 0.627162,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.62627,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.609422,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.398828,-99) , 
1, -0.572791, 1, 0, 0.509582,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.285514,-99) , 
6, 2.01352, 1, 0, 0.454407,-99) , 
12, 3.96521, 0, 0, 0.503513,-99) , 
3, -0.241373, 0, 0, 0.548171,-99)    );
  // itree = 60
  fBoostWeights.push_back(0.310236);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.783739,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.652661,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.626771,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.619918,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.396613,-99) , 
11, 4990.5, 1, 0, 0.524412,-99) , 
NN_LL(
0, 
0, 
-1, -2.57827, 1, -1, 0.350407,-99) , 
11, 3355.36, 0, 0, 0.446087,-99) , 
16, -2.03139, 0, 0, 0.502672,-99) , 
11, 7252.39, 0, 0, 0.537239,-99) , 
6, 0.71167, 1, 0, 0.563937,-99)    );
  // itree = 61
  fBoostWeights.push_back(0.290108);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.686679,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.626804,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.565743,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.329852,-99) , 
9, 1.3811, 0, 0, 0.43594,-99) , 
18, 1.00137, 1, 0, 0.492049,-99) , 
17, 0.0271752, 0, 0, 0.53644,-99) , 
NN_LL(
0, 
0, 
-1, 0.00654834, 1, -1, 0.354156,-99) , 
17, 0.0382992, 1, 0, 0.471361,-99)    );
  // itree = 62
  fBoostWeights.push_back(0.358976);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.719543,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.405257,-99) , 
19, 0.0884316, 1, 0, 0.591112,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.692936,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.395633,-99) , 
18, 1.29663, 0, 0, 0.567007,-99) , 
NN_LL(
0, 
0, 
-1, 1.3069, 1, -1, 0.323786,-99) , 
2, 0.117686, 0, 0, 0.438206,-99) , 
7, 0.192743, 0, 0, 0.501021,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.28646,-99) , 
4, -2.67266, 0, 0, 0.478488,-99)    );
  // itree = 63
  fBoostWeights.push_back(0.291451);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.724736,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 3922.41, 1, 1, 0.634349,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.597051,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.381864,-99) , 
2, 0.0865187, 1, 0, 0.483004,-99) , 
12, 3.48163, 1, 0, 0.561354,-99) , 
15, 0.00262772, 1, 0, 0.608389,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.438163,-99) , 
0, -0.913753, 0, 0, 0.573771,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.304714,-99) , 
11, 2549.12, 0, 0, 0.536726,-99)    );
  // itree = 64
  fBoostWeights.push_back(0.306416);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 3.85234, 1, 1, 0.636574,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.466334,-99) , 
15, 0.0064205, 1, 0, 0.582298,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.781879,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.392443,-99) , 
6, 2.40461, 0, 0, 0.553988,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.286187,-99) , 
17, 0.0241984, 0, 0, 0.447772,-99) , 
7, 0.161019, 0, 0, 0.514978,-99)    );
  // itree = 65
  fBoostWeights.push_back(0.267069);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 3.88637, 1, 1, 0.654619,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.613327,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.576553,-99) , 
NN_LL(
0, 
0, 
-1, 0.00784555, 0, -1, 0.352003,-99) , 
10, 1.64061, 1, 0, 0.423939,-99) , 
3, -0.123197, 0, 0, 0.475883,-99) , 
11, 6701.57, 0, 0, 0.522667,-99)    );
  // itree = 66
  fBoostWeights.push_back(0.327939);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 3.42662, 0, 1, 0.704634,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 1.5967, 0, 1, 0.686617,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.564791,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.379138,-99) , 
12, 3.46478, 1, 0, 0.453668,-99) , 
19, 0.063711, 1, 0, 0.556472,-99) , 
15, 0.0154426, 0, 0, 0.593307,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.322992,-99) , 
18, 2.07337, 1, 0, 0.542808,-99)    );
  // itree = 67
  fBoostWeights.push_back(0.315846);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.71661,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.648239,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.605548,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.35915,-99) , 
5, -1.21036, 1, 0, 0.470866,-99) , 
5, -0.783569, 0, 0, 0.54026,-99) , 
4, -1.96604, 0, 0, 0.590511,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.353291,-99) , 
17, 0.0673101, 1, 0, 0.54973,-99) , 
NN_LL(
0, 
0, 
-1, -0.321327, 1, -1, 0.356299,-99) , 
2, -0.132329, 0, 0, 0.504456,-99)    );
  // itree = 68
  fBoostWeights.push_back(0.28795);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.709595,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.606264,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.557634,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.349248,-99) , 
8, 2.24511, 1, 0, 0.468879,-99) , 
12, 3.74784, 0, 0, 0.527042,-99) , 
13, -0.487818, 0, 0, 0.580319,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.364273,-99) , 
11, 2366.29, 0, 0, 0.54575,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.326994,-99) , 
10, 1.18705, 0, 0, 0.507849,-99)    );
  // itree = 69
  fBoostWeights.push_back(0.339614);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.805128,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.713308,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.494014,-99) , 
9, 1.05155, 0, 0, 0.626127,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.444934,-99) , 
5, -0.749957, 1, 0, 0.551137,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.308881,-99) , 
4, -2.34955, 0, 0, 0.487648,-99) , 
8, 2.84216, 0, 0, 0.543643,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.303116,-99) , 
18, 0.719177, 0, 0, 0.496983,-99)    );
  // itree = 70
  fBoostWeights.push_back(0.278035);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.657898, 1, 1, 0.622449,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.546006,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.34607,-99) , 
17, 0.0241168, 1, 0, 0.438044,-99) , 
13, -0.680775, 0, 0, 0.525221,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.318741,-99) , 
5, -0.3259, 1, 0, 0.483442,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.315599,-99) , 
4, -2.59389, 0, 0, 0.45774,-99)    );
  // itree = 71
  fBoostWeights.push_back(0.32282);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -2.24116, 0, 1, 0.620528,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.607299,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.652366,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.308024,-99) , 
11, 4223.36, 0, 0, 0.496301,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.262806,-99) , 
16, -2.14533, 1, 0, 0.389067,-99) , 
4, -1.94483, 0, 0, 0.455406,-99) , 
17, 0.048151, 0, 0, 0.507825,-99)    );
  // itree = 72
  fBoostWeights.push_back(0.335213);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.690085,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.678032,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.400937,-99) , 
17, 0.0526216, 1, 0, 0.559126,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.366405,-99) , 
17, 0.0242018, 0, 0, 0.479986,-99) , 
7, 0.416833, 0, 0, 0.532468,-99) , 
NN_LL(
0, 
0, 
-1, 0.29013, 1, -1, 0.381348,-99) , 
2, 0.355443, 1, 0, 0.478426,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.160959,-99) , 
1, -1.09621, 0, 0, 0.444421,-99)    );
  // itree = 73
  fBoostWeights.push_back(0.300089);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.725127,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -1.14197, 1, 1, 0.707865,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.559246,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.315518,-99) , 
8, 2.11379, 0, 0, 0.472129,-99) , 
0, -0.746448, 1, 0, 0.568833,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.540377,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.301402,-99) , 
18, 1.22085, 0, 0, 0.434703,-99) , 
12, 3.42257, 0, 0, 0.521512,-99) , 
8, 3.05985, 0, 0, 0.548003,-99)    );
  // itree = 74
  fBoostWeights.push_back(0.253568);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.654372,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.426504, 1, 1, 0.605073,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.444911,-99) , 
10, 2.35679, 1, 0, 0.553012,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.348005,-99) , 
2, -0.107004, 0, 0, 0.501393,-99) , 
7, 0.48354, 0, 0, 0.532789,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.306177,-99) , 
5, -1.40823, 0, 0, 0.506322,-99)    );
  // itree = 75
  fBoostWeights.push_back(0.297266);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 3.67086, 0, 1, 0.63683,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.681845,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.516034,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.263619,-99) , 
17, 0.043521, 1, 0, 0.423708,-99) , 
14, 0.729245, 0, 0, 0.511271,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.281824,-99) , 
4, -2.44675, 0, 0, 0.451441,-99) , 
11, 5704.25, 0, 0, 0.527666,-99)    );
  // itree = 76
  fBoostWeights.push_back(0.218083);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.00385002, 0, 1, 0.666289,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.495063,-99) , 
7, 0.0943625, 0, 0, 0.591236,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.405085,-99) , 
6, 1.01504, 0, 0, 0.53171,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.327679,-99) , 
19, 0.169611, 1, 0, 0.49993,-99)    );
  // itree = 77
  fBoostWeights.push_back(0.233612);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.692058,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.499917,-99) , 
19, 0.0807324, 1, 0, 0.58455,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.608682,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.41313,-99) , 
0, -0.7733, 1, 0, 0.536028,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.518569,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.294974,-99) , 
9, 1.62465, 0, 0, 0.360924,-99) , 
9, 1.23374, 1, 0, 0.438955,-99) , 
10, 2.25662, 0, 0, 0.483512,-99)    );
  // itree = 78
  fBoostWeights.push_back(0.281598);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.57193, 0, 1, 0.713723,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.60852,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.431265,-99) , 
15, 0.0106131, 0, 0, 0.498837,-99) , 
11, 4425.93, 0, 0, 0.59638,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.368736,-99) , 
5, -1.30102, 0, 0, 0.554835,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.378466,-99) , 
13, -0.269865, 1, 0, 0.522397,-99)    );
  // itree = 79
  fBoostWeights.push_back(0.259401);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.625534,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.471313,-99) , 
8, 2.06759, 0, 0, 0.57215,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.373687,-99) , 
8, 2.83626, 1, 0, 0.510169,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.271515,-99) , 
19, 0.141953, 1, 0, 0.464351,-99)    );
  // itree = 80
  fBoostWeights.push_back(0.264155);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.731405,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, -2.26896, 0, 1, 0.642791,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.462029,-99) , 
2, 0.209777, 0, 0, 0.574851,-99) , 
3, -0.702352, 1, 0, 0.609907,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.589062,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.344694,-99) , 
4, -2.15943, 1, 0, 0.454396,-99) , 
12, 3.76136, 1, 0, 0.551322,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.373254,-99) , 
0, -0.897541, 0, 0, 0.518756,-99)    );
  // itree = 81
  fBoostWeights.push_back(0.219255);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.334858, 0, 1, 0.616646,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.443896,-99) , 
7, 0.0960011, 0, 0, 0.546854,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.39713,-99) , 
14, 0.884624, 1, 0, 0.514375,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.311189,-99) , 
13, -0.903338, 0, 0, 0.485504,-99)    );
  // itree = 82
  fBoostWeights.push_back(0.259264);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.76305,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 3.68804, 0, 1, 0.577447,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.416864,-99) , 
8, 2.46735, 1, 0, 0.532527,-99) , 
9, 1.58616, 0, 0, 0.5764,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.575464,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.274815,-99) , 
12, 3.28492, 1, 0, 0.423523,-99) , 
11, 3602.91, 0, 0, 0.523843,-99)    );
  // itree = 83
  fBoostWeights.push_back(0.326754);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.730093,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.639561,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.60609,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.330764,-99) , 
9, 1.1409, 1, 0, 0.454115,-99) , 
19, 0.0671785, 1, 0, 0.535556,-99) , 
18, 1.89533, 0, 0, 0.57939,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.389806,-99) , 
10, 1.33599, 0, 0, 0.535333,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.264036,-99) , 
5, -1.45781, 0, 0, 0.507477,-99)    );
  // itree = 84
  fBoostWeights.push_back(0.205141);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.633352,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.571689,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.505809,-99) , 
NN_LL(
0, 
0, 
-1, 1.20655, 0, -1, 0.326848,-99) , 
11, 5398.94, 0, 0, 0.402234,-99) , 
8, 2.79461, 0, 0, 0.442043,-99) , 
18, 0.679061, 1, 0, 0.471124,-99)    );
  // itree = 85
  fBoostWeights.push_back(0.284679);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.682462,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.670884,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.702709,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.453928,-99) , 
1, -0.680435, 1, 0, 0.5752,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.545863,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.322244,-99) , 
11, 4087.58, 1, 0, 0.427331,-99) , 
16, -2.30017, 1, 0, 0.498099,-99) , 
11, 6845.77, 0, 0, 0.531615,-99) , 
18, 1.8273, 0, 0, 0.564015,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.519718,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.245874,-99) , 
3, -0.348279, 0, 0, 0.386662,-99) , 
16, -2.67853, 0, 0, 0.515349,-99)    );
  // itree = 86
  fBoostWeights.push_back(0.243308);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.752514,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.463438,-99) , 
12, 3.52831, 0, 0, 0.586175,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.591381,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.534412,-99) , 
NN_LL(
0, 
0, 
-1, 3913.81, 1, -1, 0.336311,-99) , 
7, 0.0644816, 1, 0, 0.400842,-99) , 
11, 8324.35, 0, 0, 0.436535,-99) , 
10, 2.27459, 0, 0, 0.477651,-99)    );
  // itree = 87
  fBoostWeights.push_back(0.244509);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.558464, 0, 1, 0.610397,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.664274,-99) , 
NN_LL(
0, 
0, 
-1, 3.5151, 0, -1, 0.420467,-99) , 
11, 2882.08, 1, 0, 0.499079,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.331395,-99) , 
9, 1.24058, 1, 0, 0.442317,-99) , 
19, 0.0683433, 1, 0, 0.51864,-99)    );
  // itree = 88
  fBoostWeights.push_back(0.239517);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.718433,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.490936,-99) , 
4, -2.08063, 1, 0, 0.608309,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.424482,-99) , 
2, 0.445755, 1, 0, 0.539035,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.391649,-99) , 
2, -0.199322, 0, 0, 0.501308,-99) , 
NN_LL(
0, 
0, 
-1, 0.319527, 0, -1, 0.342735,-99) , 
5, -1.08488, 0, 0, 0.459296,-99)    );
  // itree = 89
  fBoostWeights.push_back(0.279166);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.705591,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.186813, 1, 1, 0.621154,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.418936,-99) , 
13, -0.953277, 0, 0, 0.557471,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.358968,-99) , 
13, -0.655347, 1, 0, 0.483176,-99) , 
8, 2.92103, 0, 0, 0.524482,-99) , 
NN_LL(
0, 
0, 
-1, 0.42507, 0, -1, 0.364977,-99) , 
6, 2.01568, 1, 0, 0.480773,-99)    );
  // itree = 90
  fBoostWeights.push_back(0.240333);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.684612,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.552988,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.404517,-99) , 
18, 1.74775, 1, 0, 0.494587,-99) , 
5, -0.48295, 0, 0, 0.565659,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.605981,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.418014,-99) , 
4, -2.17788, 0, 0, 0.509162,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.331774,-99) , 
1, -0.486269, 1, 0, 0.435664,-99) , 
18, 1.20916, 0, 0, 0.50836,-99)    );
  // itree = 91
  fBoostWeights.push_back(0.223529);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.655114,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.595058,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.587495,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.522787,-99) , 
NN_LL(
0, 
0, 
-1, -0.801667, 0, -1, 0.364578,-99) , 
16, -2.72202, 1, 0, 0.409867,-99) , 
3, -0.672385, 1, 0, 0.4395,-99) , 
0, -0.265, 0, 0, 0.470697,-99) , 
5, -1.30989, 1, 0, 0.505426,-99)    );
  // itree = 92
  fBoostWeights.push_back(0.273519);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.709926,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.456848,-99) , 
11, 8012.46, 1, 0, 0.614827,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.534719,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.331902,-99) , 
4, -2.07487, 0, 0, 0.450451,-99) , 
15, 0.00511699, 1, 0, 0.535238,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.534733,-99) , 
NN_LL(
0, 
0, 
-1, -2.20702, 1, -1, 0.285333,-99) , 
12, 3.13419, 1, 0, 0.364196,-99) , 
11, 3451.32, 0, 0, 0.473183,-99)    );
  // itree = 93
  fBoostWeights.push_back(0.263039);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.617763,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.394392,-99) , 
5, -0.319162, 1, 0, 0.545231,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.573256,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.356973,-99) , 
7, 0.0939518, 0, 0, 0.48207,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.279613,-99) , 
4, -2.4514, 0, 0, 0.413342,-99) , 
13, -0.609815, 0, 0, 0.477713,-99)    );
  // itree = 94
  fBoostWeights.push_back(0.217264);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.685319,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.631177,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.468706,-99) , 
17, 0.0269452, 0, 0, 0.561805,-99) , 
15, 0.00646856, 0, 0, 0.600154,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.520754,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.341809,-99) , 
11, 5313.1, 0, 0, 0.435294,-99) , 
5, -0.966705, 0, 0, 0.540608,-99)    );
  // itree = 95
  fBoostWeights.push_back(0.273386);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.749998,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.636165,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.423224,-99) , 
19, 0.0849047, 0, 0, 0.519424,-99) , 
9, 1.58221, 0, 0, 0.562256,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.391603,-99) , 
12, 3.95012, 1, 0, 0.512139,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.315115,-99) , 
19, 0.162017, 1, 0, 0.482372,-99)    );
  // itree = 96
  fBoostWeights.push_back(0.244651);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.647774,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 3.73182, 1, 1, 0.614821,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.518869,-99) , 
NN_LL(
0, 
0, 
-1, 0.0338227, 1, -1, 0.323676,-99) , 
12, 3.62209, 0, 0, 0.417813,-99) , 
19, 0.049475, 1, 0, 0.487655,-99) , 
2, 0.533424, 0, 0, 0.518045,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.345796,-99) , 
11, 2362.02, 0, 0, 0.490881,-99)    );
  // itree = 97
  fBoostWeights.push_back(0.237858);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.745088,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.671249,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.498808,-99) , 
14, 0.545813, 0, 0, 0.579879,-99) , 
19, 0.0730234, 1, 0, 0.631074,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.444133,-99) , 
4, -2.35831, 0, 0, 0.580149,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.376493,-99) , 
3, -0.0363411, 1, 0, 0.540203,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.365884,-99) , 
16, -1.8939, 1, 0, 0.513785,-99)    );
  // itree = 98
  fBoostWeights.push_back(0.227883);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.70515,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.641712,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.532243,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.412295,-99) , 
6, 1.5985, 1, 0, 0.469032,-99) , 
19, 0.126772, 0, 0, 0.507281,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.271766,-99) , 
19, 0.170934, 1, 0, 0.476401,-99) , 
7, 0.57964, 0, 0, 0.504854,-99)    );
  // itree = 99
  fBoostWeights.push_back(0.207583);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.657903,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.472639,-99) , 
4, -2.24603, 1, 0, 0.550709,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.417417,-99) , 
7, 0.353428, 1, 0, 0.506233,-99) , 
NN_LL(
0, 
0, 
-1, 2.04286, 1, -1, 0.331957,-99) , 
15, 0.00906822, 1, 0, 0.46575,-99)    );
  // itree = 100
  fBoostWeights.push_back(0.291205);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.647712,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.676739,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.548126,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.34668,-99) , 
18, 1.27023, 1, 0, 0.440067,-99) , 
19, 0.0700794, 1, 0, 0.552605,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.523354,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.37763,-99) , 
2, -0.172235, 0, 0, 0.451252,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.220261,-99) , 
3, -0.348773, 1, 0, 0.374888,-99) , 
16, -2.28894, 1, 0, 0.478148,-99) , 
4, -1.83608, 0, 0, 0.518364,-99)    );
  // itree = 101
  fBoostWeights.push_back(0.214477);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.257035, 1, 1, 0.622985,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.560841,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.503776,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.285775,-99) , 
6, 1.93608, 0, 0, 0.385621,-99) , 
7, 0.289827, 0, 0, 0.460555,-99) , 
5, -0.863602, 0, 0, 0.54521,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.410069,-99) , 
14, 0.000206547, 0, 0, 0.522172,-99)    );
  // itree = 102
  fBoostWeights.push_back(0.211895);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.661846,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.567969,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.407916,-99) , 
12, 3.47689, 0, 0, 0.505995,-99) , 
10, 2.29811, 0, 0, 0.538721,-99) , 
NN_LL(
0, 
0, 
-1, 0.224223, 1, -1, 0.375235,-99) , 
19, 0.107895, 1, 0, 0.487366,-99)    );
  // itree = 103
  fBoostWeights.push_back(0.333905);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.666986,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.421488, 0, 1, 0.630996,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.527004,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.224038,-99) , 
9, 1.00128, 0, 0, 0.41781,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.184743,-99) , 
8, 2.2404, 1, 0, 0.345281,-99) , 
0, -0.588481, 0, 0, 0.465841,-99) , 
4, -1.94221, 0, 0, 0.526024,-99)    );
  // itree = 104
  fBoostWeights.push_back(0.291515);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.718657,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.706674,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.386834,-99) , 
18, 1.33992, 0, 0, 0.56575,-99) , 
NN_LL(
0, 
0, 
-1, 2.30909, 0, -1, 0.388105,-99) , 
10, 1.71167, 1, 0, 0.452291,-99) , 
11, 8859.37, 0, 0, 0.484322,-99)    );
  // itree = 105
  fBoostWeights.push_back(0.238249);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.719719,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.489172,-99) , 
16, -2.57482, 1, 0, 0.602672,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.413981,-99) , 
3, -0.431767, 0, 0, 0.521736,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.532678,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.398735,-99) , 
17, 0.0129523, 1, 0, 0.466585,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.268606,-99) , 
17, 0.0287053, 1, 0, 0.37856,-99) , 
18, 1.21105, 0, 0, 0.46482,-99)    );
  // itree = 106
  fBoostWeights.push_back(0.285454);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.598132,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.718504,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.553514,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.412919,-99) , 
17, 0.0338672, 1, 0, 0.488431,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.204847,-99) , 
8, 1.92394, 0, 0, 0.422193,-99) , 
1, -0.916862, 1, 0, 0.478769,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.293884,-99) , 
1, -1.03859, 0, 0, 0.443623,-99) , 
1, -0.409232, 0, 0, 0.482754,-99)    );
  // itree = 107
  fBoostWeights.push_back(0.274888);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.705399,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.61164,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.53462,-99) , 
NN_LL(
0, 
0, 
-1, 0.233914, 0, -1, 0.295679,-99) , 
13, -0.718985, 0, 0, 0.418094,-99) , 
4, -1.99846, 0, 0, 0.491861,-99) , 
10, 1.55833, 1, 0, 0.529235,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.348426,-99) , 
10, 1.19643, 0, 0, 0.501988,-99)    );
  // itree = 108
  fBoostWeights.push_back(0.255755);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.11073, 1, 1, 0.614574,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.54846,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.330943,-99) , 
4, -2.23365, 0, 0, 0.447084,-99) , 
13, -0.769878, 0, 0, 0.556967,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.517634,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.300234,-99) , 
18, 1.07917, 1, 0, 0.361727,-99) , 
17, 0.0434742, 1, 0, 0.483288,-99)    );
  // itree = 109
  fBoostWeights.push_back(0.283904);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0308495, 1, 1, 0.645141,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.45039,-99) , 
1, -0.753052, 1, 0, 0.58204,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.686062,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.410555,-99) , 
1, -0.409845, 0, 0, 0.514528,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.287594,-99) , 
0, -0.687782, 0, 0, 0.461219,-99) , 
8, 2.29895, 1, 0, 0.519993,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.299781,-99) , 
17, 0.086943, 1, 0, 0.495889,-99)    );
  // itree = 110
  fBoostWeights.push_back(0.234787);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.603701,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.619082,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.426756,-99) , 
3, -0.299753, 1, 0, 0.547842,-99) , 
NN_LL(
0, 
0, 
-1, 3.76136, 1, -1, 0.402881,-99) , 
8, 2.67607, 1, 0, 0.484089,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.285899,-99) , 
8, 1.93189, 0, 0, 0.453903,-99) , 
13, -0.952317, 1, 0, 0.47615,-99)    );
  // itree = 111
  fBoostWeights.push_back(0.245045);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.00518078, 1, 1, 0.577113,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.420101,-99) , 
11, 3449.01, 0, 0, 0.517688,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.319032,-99) , 
4, -2.47547, 0, 0, 0.48267,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.263074,-99) , 
13, -0.918956, 0, 0, 0.445446,-99)    );
  // itree = 112
  fBoostWeights.push_back(0.224802);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.644985,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.431369,-99) , 
19, 0.151822, 1, 0, 0.594044,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.426726,-99) , 
9, 1.50847, 1, 0, 0.547795,-99) , 
NN_LL(
0, 
0, 
-1, 3.30294, 0, -1, 0.39269,-99) , 
18, 1.02043, 0, 0, 0.499956,-99)    );
  // itree = 113
  fBoostWeights.push_back(0.259604);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.64232,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.553144,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.393196,-99) , 
2, 0.0674856, 1, 0, 0.475119,-99) , 
3, -0.246204, 0, 0, 0.534731,-99) , 
NN_LL(
0, 
0, 
-1, 1.91974, 1, -1, 0.322489,-99) , 
15, 0.007745, 1, 0, 0.464158,-99)    );
  // itree = 114
  fBoostWeights.push_back(0.264796);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.803078, 1, 1, 0.666456,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.489415,-99) , 
17, 0.0240407, 0, 0, 0.605054,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.389495,-99) , 
5, -1.27302, 0, 0, 0.554657,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.38779,-99) , 
14, 0.702148, 1, 0, 0.511767,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.279122,-99) , 
3, 0.00177158, 1, 0, 0.474649,-99)    );
  // itree = 115
  fBoostWeights.push_back(0.238763);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.13841, 1, 1, 0.657223,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.586488,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.425843,-99) , 
12, 3.46475, 1, 0, 0.488798,-99) , 
2, 0.168184, 1, 0, 0.560995,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.36443,-99) , 
5, -1.30877, 0, 0, 0.530868,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.378697,-99) , 
16, -1.88577, 1, 0, 0.498776,-99)    );
  // itree = 116
  fBoostWeights.push_back(0.25868);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.749175,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0904292, 0, 1, 0.657597,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.481703,-99) , 
8, 2.12998, 1, 0, 0.574701,-99) , 
9, 1.52641, 0, 0, 0.612752,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.595188,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.334044,-99) , 
2, 0.0800738, 0, 0, 0.477334,-99) , 
7, 0.096378, 0, 0, 0.568029,-99)    );
  // itree = 117
  fBoostWeights.push_back(0.281317);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.628409, 1, 1, 0.646039,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.580081,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.649361,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.435845,-99) , 
10, 1.71092, 1, 0, 0.518408,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.232465,-99) , 
12, 3.45001, 0, 0, 0.414548,-99) , 
5, -0.555644, 0, 0, 0.468451,-99) , 
6, 1.04817, 1, 0, 0.520835,-99)    );
  // itree = 118
  fBoostWeights.push_back(0.286371);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.715394,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.490592,-99) , 
0, -0.525754, 0, 0, 0.604455,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.658149,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.406811,-99) , 
17, 0.0290158, 1, 0, 0.533574,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.279774,-99) , 
0, -0.641995, 1, 0, 0.436708,-99) , 
19, 0.0887334, 1, 0, 0.536467,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.323949,-99) , 
1, -1.03291, 0, 0, 0.506049,-99)    );
  // itree = 119
  fBoostWeights.push_back(0.242729);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.41727, 0, 1, 0.642595,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.545609,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.305306,-99) , 
1, -0.87979, 1, 0, 0.425057,-99) , 
19, 0.136326, 1, 0, 0.580748,-99) , 
NN_LL(
0, 
0, 
-1, 0.290153, 1, -1, 0.427364,-99) , 
13, -0.416073, 1, 0, 0.53918,-99)    );
  // itree = 120
  fBoostWeights.push_back(0.263244);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.665751,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.690527,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.478965,-99) , 
13, -0.692042, 0, 0, 0.601408,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.402643,-99) , 
16, -2.54727, 0, 0, 0.530573,-99) , 
10, 2.24805, 0, 0, 0.570539,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.379931,-99) , 
6, 0.751753, 0, 0, 0.54274,-99) , 
NN_LL(
0, 
0, 
-1, 1.44315, 0, -1, 0.362843,-99) , 
6, 1.97981, 1, 0, 0.50451,-99)    );
  // itree = 121
  fBoostWeights.push_back(0.305327);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.752616,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.715833,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.494957,-99) , 
10, 2.33907, 1, 0, 0.632387,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.432895,-99) , 
14, 0.448679, 0, 0, 0.56495,-99) , 
10, 1.51137, 1, 0, 0.606578,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.37338,-99) , 
17, 0.0579638, 1, 0, 0.553685,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.313694,-99) , 
18, 2.02834, 1, 0, 0.511495,-99)    );
  // itree = 122
  fBoostWeights.push_back(0.222771);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.83195, 1, 1, 0.650672,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.478099,-99) , 
19, 0.107895, 1, 0, 0.603227,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.40146,-99) , 
1, -1.02711, 0, 0, 0.568833,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.544349,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.360868,-99) , 
17, 0.0480931, 0, 0, 0.431343,-99) , 
11, 3084.13, 0, 0, 0.528557,-99)    );
  // itree = 123
  fBoostWeights.push_back(0.260751);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.778633,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.703569,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.425425,-99) , 
17, 0.0287078, 1, 0, 0.550073,-99) , 
3, -0.258427, 1, 0, 0.638593,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.457537,-99) , 
3, -0.482907, 0, 0, 0.585648,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.573493,-99) , 
NN_LL(
0, 
0, 
-1, 1.43327, 1, -1, 0.371975,-99) , 
11, 5396.44, 0, 0, 0.463596,-99) , 
10, 1.85068, 0, 0, 0.532581,-99)    );
  // itree = 124
  fBoostWeights.push_back(0.255148);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.369853, 0, 1, 0.685351,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.478837,-99) , 
18, 1.4358, 1, 0, 0.592145,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.554406,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.247916,-99) , 
18, 1.32867, 0, 0, 0.437158,-99) , 
10, 1.95843, 0, 0, 0.528303,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.358979,-99) , 
0, -0.39039, 1, 0, 0.483032,-99)    );
  // itree = 125
  fBoostWeights.push_back(0.278076);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.685364,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.673687,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.447022,-99) , 
13, -0.569671, 1, 0, 0.57732,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.380385,-99) , 
4, -2.49655, 0, 0, 0.535752,-99) , 
18, 1.72726, 0, 0, 0.580304,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.397381,-99) , 
19, 0.157146, 1, 0, 0.555543,-99)    );
  // itree = 126
  fBoostWeights.push_back(0.254628);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.692906,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.798913, 1, 1, 0.633895,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.409133,-99) , 
11, 3050.49, 0, 0, 0.572167,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.423807,-99) , 
16, -1.90885, 1, 0, 0.532868,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.361253,-99) , 
17, 0.0626996, 1, 0, 0.504772,-99) , 
10, 2.44298, 0, 0, 0.528786,-99)    );
  // itree = 127
  fBoostWeights.push_back(0.230234);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 2.55469, 0, 1, 0.602744,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.640826,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.459113,-99) , 
2, 0.116209, 1, 0, 0.553839,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.308088,-99) , 
12, 3.46553, 0, 0, 0.468028,-99) , 
5, -0.906607, 0, 0, 0.546317,-99)    );
  // itree = 128
  fBoostWeights.push_back(0.269617);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.63654,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.673516,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.572815,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.382366,-99) , 
3, -0.447296, 0, 0, 0.480888,-99) , 
4, -2.14078, 1, 0, 0.536231,-99) , 
NN_LL(
0, 
0, 
-1, -0.79959, 1, -1, 0.384811,-99) , 
4, -2.29821, 0, 0, 0.476028,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.29564,-99) , 
10, 1.23561, 0, 0, 0.446477,-99) , 
0, -0.265, 0, 0, 0.474312,-99)    );
  // itree = 129
  fBoostWeights.push_back(0.228107);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 2789.82, 1, 1, 0.648696,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.61647,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.415327,-99) , 
8, 1.92246, 1, 0, 0.493689,-99) , 
12, 3.52746, 1, 0, 0.573835,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.541263,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.378374,-99) , 
17, 0.0285309, 1, 0, 0.445323,-99) , 
1, -0.553115, 1, 0, 0.531282,-99)    );
  // itree = 130
  fBoostWeights.push_back(0.228343);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0787925, 1, 1, 0.639033,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.619813,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.557337,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.367403,-99) , 
11, 6376.62, 1, 0, 0.484042,-99) , 
5, -0.927836, 1, 0, 0.532666,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.373355,-99) , 
19, 0.130055, 1, 0, 0.502037,-99) , 
17, 0.0579784, 0, 0, 0.534827,-99)    );
  // itree = 131
  fBoostWeights.push_back(0.214065);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.712008,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.481797,-99) , 
4, -2.13808, 1, 0, 0.609089,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.668973,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.463532,-99) , 
11, 2546.55, 1, 0, 0.540575,-99) , 
NN_LL(
0, 
0, 
-1, 1.02701, 1, -1, 0.395859,-99) , 
17, 0.0334918, 0, 0, 0.465825,-99) , 
19, 0.0527839, 1, 0, 0.513615,-99)    );
  // itree = 132
  fBoostWeights.push_back(0.301289);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.714064,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.448157,-99) , 
4, -2.28851, 0, 0, 0.624586,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.526001,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.330099,-99) , 
18, 1.60774, 1, 0, 0.433588,-99) , 
9, 1.38797, 1, 0, 0.55126,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.549792,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.294277,-99) , 
12, 3.37627, 0, 0, 0.437452,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.231329,-99) , 
8, 2.08337, 0, 0, 0.377436,-99) , 
11, 4101.84, 0, 0, 0.476597,-99)    );
  // itree = 133
  fBoostWeights.push_back(0.274856);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.712275,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.667852,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.581399,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.410924,-99) , 
4, -2.14849, 1, 0, 0.502056,-99) , 
15, 0.00369341, 0, 0, 0.555881,-99) , 
1, -0.770602, 1, 0, 0.604481,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.402217,-99) , 
15, 0.0103299, 1, 0, 0.563815,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.365326,-99) , 
8, 1.80748, 0, 0, 0.536039,-99)    );
  // itree = 134
  fBoostWeights.push_back(0.277666);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.765311,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.488971,-99) , 
7, 0.160163, 0, 0, 0.632538,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.672466,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.602935,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.400682,-99) , 
11, 5337.69, 0, 0, 0.480165,-99) , 
8, 3.19058, 0, 0, 0.513838,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.285303,-99) , 
15, 0.00714389, 1, 0, 0.468864,-99) , 
15, 0.0116255, 0, 0, 0.503951,-99)    );
  // itree = 135
  fBoostWeights.push_back(0.212659);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 3.78196, 1, 1, 0.655371,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.458537,-99) , 
12, 3.49446, 0, 0, 0.580798,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.574289,-99) , 
NN_LL(
0, 
0, 
-1, 1.52969, 0, -1, 0.387204,-99) , 
10, 2.29552, 0, 0, 0.457447,-99) , 
3, -0.456543, 1, 0, 0.514484,-99)    );
  // itree = 136
  fBoostWeights.push_back(0.266566);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.716327,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.669226,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.592207,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.387144,-99) , 
10, 2.30491, 0, 0, 0.474727,-99) , 
19, 0.189114, 0, 0, 0.515059,-99) , 
16, -2.11202, 0, 0, 0.551121,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.515776,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.261404,-99) , 
9, 1.29335, 0, 0, 0.395321,-99) , 
2, 0.0230064, 0, 0, 0.494891,-99)    );
  // itree = 137
  fBoostWeights.push_back(0.256179);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.663738,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.6924,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.437959,-99) , 
4, -1.91407, 1, 0, 0.54528,-99) , 
0, -0.752791, 1, 0, 0.586481,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.556729,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.352781,-99) , 
15, 0.00647987, 1, 0, 0.502705,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.249277,-99) , 
10, 1.34987, 0, 0, 0.446621,-99) , 
4, -2.10242, 0, 0, 0.512436,-99)    );
  // itree = 138
  fBoostWeights.push_back(0.25407);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.682489,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.698699,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.496754,-99) , 
3, -0.577458, 1, 0, 0.564031,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.357127,-99) , 
6, 2.0234, 1, 0, 0.505701,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.287178,-99) , 
4, -2.43183, 0, 0, 0.472891,-99) , 
19, 0.0363715, 1, 0, 0.519166,-99)    );
  // itree = 139
  fBoostWeights.push_back(0.252103);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.694263,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.687406,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.466595,-99) , 
18, 1.38442, 1, 0, 0.547133,-99) , 
12, 3.31264, 1, 0, 0.591074,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.420206,-99) , 
6, 2.31499, 1, 0, 0.55989,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.386294,-99) , 
18, 0.767049, 0, 0, 0.526148,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.303052,-99) , 
4, -2.70364, 0, 0, 0.499363,-99)    );
  // itree = 140
  fBoostWeights.push_back(0.28095);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.717785,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.632376,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.437683,-99) , 
11, 4667.42, 1, 0, 0.547472,-99) , 
6, 2.14009, 0, 0, 0.58095,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.607142,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.304107,-99) , 
1, -0.817282, 1, 0, 0.445535,-99) , 
0, -0.805926, 0, 0, 0.540769,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.334251,-99) , 
17, 0.0771538, 1, 0, 0.518914,-99)    );
  // itree = 141
  fBoostWeights.push_back(0.301897);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.736786,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.224914, 1, 1, 0.646333,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.418249,-99) , 
11, 3825.91, 0, 0, 0.563415,-99) , 
12, 3.25722, 1, 0, 0.617886,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.516814,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.358198,-99) , 
7, 0.128265, 0, 0, 0.432989,-99) , 
14, 0.25593, 0, 0, 0.562839,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.266413,-99) , 
4, -2.6763, 0, 0, 0.531114,-99)    );
  // itree = 142
  fBoostWeights.push_back(0.246361);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.654526,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.66848,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.637717,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.398683,-99) , 
14, 0.472493, 0, 0, 0.541165,-99) , 
NN_LL(
0, 
0, 
-1, 3.76132, 1, -1, 0.39858,-99) , 
5, -1.07597, 1, 0, 0.447605,-99) , 
9, 1.71382, 0, 0, 0.472362,-99) , 
17, 0.0773664, 0, 0, 0.49674,-99)    );
  // itree = 143
  fBoostWeights.push_back(0.284683);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.654538,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.713546,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.604878,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.391402,-99) , 
2, 0.1474, 0, 0, 0.48897,-99) , 
0, -0.556933, 0, 0, 0.57599,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.395678,-99) , 
12, 3.84409, 1, 0, 0.521442,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.36773,-99) , 
2, 0.436893, 1, 0, 0.483845,-99) , 
18, 1.88927, 0, 0, 0.520336,-99)    );
  // itree = 144
  fBoostWeights.push_back(0.27722);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.670632,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0337926, 0, 1, 0.586118,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.390073,-99) , 
0, -0.364434, 1, 0, 0.523144,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.238201,-99) , 
15, 0.0103686, 1, 0, 0.473367,-99) , 
4, -1.86603, 0, 0, 0.523377,-99)    );
  // itree = 145
  fBoostWeights.push_back(0.250351);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.00168559, 0, 1, 0.659987,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.585074,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.524396,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.347273,-99) , 
17, 0.0256965, 0, 0, 0.428902,-99) , 
11, 4405.56, 0, 0, 0.506093,-99) , 
19, 0.0541563, 1, 0, 0.55808,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.345334,-99) , 
17, 0.0531359, 1, 0, 0.509848,-99)    );
  // itree = 146
  fBoostWeights.push_back(0.222707);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.57803, 0, 1, 0.655477,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.642563,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.47585,-99) , 
17, 0.0290182, 1, 0, 0.546426,-99) , 
NN_LL(
0, 
0, 
-1, 0.0621931, 1, -1, 0.426725,-99) , 
16, -2.30222, 1, 0, 0.494566,-99) , 
7, 0.322364, 0, 0, 0.543347,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.299532,-99) , 
5, -1.47669, 0, 0, 0.517123,-99)    );
  // itree = 147
  fBoostWeights.push_back(0.230321);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.7295,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.578438,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.584243,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.555512,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.395579,-99) , 
10, 1.61341, 1, 0, 0.467173,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.275399,-99) , 
8, 1.907, 0, 0, 0.422657,-99) , 
2, 0.434695, 0, 0, 0.457478,-99) , 
7, 0.386431, 0, 0, 0.492611,-99) , 
19, 0.0179902, 1, 0, 0.516763,-99)    );
  // itree = 148
  fBoostWeights.push_back(0.247224);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.654989,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.656015,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.43065,-99) , 
11, 4474.03, 0, 0, 0.55942,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.525289,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.348394,-99) , 
12, 3.55217, 1, 0, 0.417612,-99) , 
18, 1.10776, 1, 0, 0.472754,-99) , 
4, -1.94787, 0, 0, 0.521873,-99)    );
  // itree = 149
  fBoostWeights.push_back(0.214797);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.655553,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0337832, 0, 1, 0.569736,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.361302,-99) , 
5, -0.312317, 1, 0, 0.512061,-99) , 
NN_LL(
0, 
0, 
-1, -2.29852, 0, -1, 0.386867,-99) , 
18, 1.21818, 0, 0, 0.471833,-99) , 
3, -0.738877, 1, 0, 0.500349,-99)    );
  // itree = 150
  fBoostWeights.push_back(0.258179);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.569703, 1, 1, 0.651114,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.444807,-99) , 
0, -0.832967, 0, 0, 0.581122,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.521737,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.310132,-99) , 
7, 0.192479, 1, 0, 0.422045,-99) , 
5, -0.906607, 1, 0, 0.488011,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.243613,-99) , 
4, -2.67307, 0, 0, 0.458247,-99)    );
  // itree = 151
  fBoostWeights.push_back(0.224273);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 1.41666, 0, 1, 0.593897,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.656633,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.491012,-99) , 
13, -0.947542, 1, 0, 0.569327,-99) , 
NN_LL(
0, 
0, 
-1, 1.6778, 1, -1, 0.354841,-99) , 
8, 1.95896, 1, 0, 0.431341,-99) , 
0, -0.572617, 0, 0, 0.497307,-99)    );
  // itree = 152
  fBoostWeights.push_back(0.207782);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.597792,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.615046,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.452543,-99) , 
14, 0.675962, 0, 0, 0.533796,-99) , 
NN_LL(
0, 
0, 
-1, -1.2418, 0, -1, 0.380615,-99) , 
11, 3618.81, 1, 0, 0.444108,-99) , 
19, 0.0363715, 1, 0, 0.474855,-99)    );
  // itree = 153
  fBoostWeights.push_back(0.277382);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.8971, 1, 1, 0.639767,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.623952,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.401746,-99) , 
11, 4098.54, 0, 0, 0.517207,-99) , 
8, 2.54907, 0, 0, 0.565263,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.373578,-99) , 
1, -0.916705, 0, 0, 0.52143,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.29496,-99) , 
14, 1.00256, 1, 0, 0.488851,-99)    );
  // itree = 154
  fBoostWeights.push_back(0.238673);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.36587, 1, 1, 0.616237,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.424328,-99) , 
8, 2.46994, 1, 0, 0.568143,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.522728,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.35562,-99) , 
9, 1.56681, 0, 0, 0.421809,-99) , 
15, 0.00389405, 0, 0, 0.508293,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.252197,-99) , 
5, -1.45544, 0, 0, 0.481783,-99)    );
  // itree = 155
  fBoostWeights.push_back(0.232577);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.00706889, 1, 1, 0.636424,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.474433,-99) , 
9, 1.5165, 1, 0, 0.585855,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.414544,-99) , 
19, 0.160156, 1, 0, 0.55745,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.36928,-99) , 
11, 2366.92, 0, 0, 0.528913,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.294636,-99) , 
4, -2.67664, 0, 0, 0.505046,-99)    );
  // itree = 156
  fBoostWeights.push_back(0.262355);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.669214,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.601666,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.418697,-99) , 
1, -0.525401, 0, 0, 0.522822,-99) , 
1, -0.81136, 1, 0, 0.584982,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.652106,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.484767,-99) , 
3, -0.239979, 0, 0, 0.546796,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.35572,-99) , 
1, -0.883657, 0, 0, 0.496871,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.266317,-99) , 
16, -1.92713, 1, 0, 0.42766,-99) , 
6, 1.36139, 1, 0, 0.498022,-99)    );
  // itree = 157
  fBoostWeights.push_back(0.227462);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.478807, 0, 1, 0.588996,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.534966,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.315254,-99) , 
6, 1.41894, 1, 0, 0.440907,-99) , 
19, 0.0874935, 1, 0, 0.524939,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.520339,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.352711,-99) , 
7, 0.125203, 0, 0, 0.438074,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.268102,-99) , 
17, 0.056592, 0, 0, 0.372235,-99) , 
17, 0.03866, 1, 0, 0.465121,-99)    );
  // itree = 158
  fBoostWeights.push_back(0.284429);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.649329,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.547461,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.430447,-99) , 
0, -0.34899, 1, 0, 0.493074,-99) , 
7, 0.128501, 1, 0, 0.559989,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.328756,-99) , 
8, 2.18976, 0, 0, 0.504418,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.589511,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.413022,-99) , 
6, 1.40631, 0, 0, 0.509936,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.295816,-99) , 
2, -0.169179, 0, 0, 0.4432,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.207152,-99) , 
14, 0.82755, 1, 0, 0.385061,-99) , 
0, -0.674997, 0, 0, 0.449116,-99)    );
  // itree = 159
  fBoostWeights.push_back(0.292191);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.741521,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.594831,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.615755,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.394201,-99) , 
12, 3.52871, 0, 0, 0.510096,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.332972,-99) , 
11, 2840.88, 0, 0, 0.453725,-99) , 
4, -2.09097, 0, 0, 0.52051,-99) , 
11, 6697.79, 0, 0, 0.570187,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.356486,-99) , 
10, 1.29525, 0, 0, 0.524829,-99)    );
  // itree = 160
  fBoostWeights.push_back(0.248356);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.732066, 0, 1, 0.628589,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.558719,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.457812,-99) , 
13, -0.627203, 0, 0, 0.510623,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.309684,-99) , 
19, 0.124478, 1, 0, 0.456708,-99) , 
18, 1.38807, 0, 0, 0.534937,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.303351,-99) , 
18, 2.03132, 1, 0, 0.496173,-99)    );
  // itree = 161
  fBoostWeights.push_back(0.207105);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.666356,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.487718,-99) , 
18, 1.25292, 1, 0, 0.575468,-99) , 
NN_LL(
0, 
0, 
-1, -1.15668, 0, -1, 0.431293,-99) , 
11, 3600.83, 1, 0, 0.480482,-99) , 
NN_LL(
0, 
0, 
-1, -0.351366, 0, -1, 0.350478,-99) , 
1, -0.533833, 1, 0, 0.433521,-99)    );
  // itree = 162
  fBoostWeights.push_back(0.243509);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.966395, 0, 1, 0.659209,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.459347,-99) , 
2, 0.288093, 1, 0, 0.586894,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.603598,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.565448,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.342646,-99) , 
8, 2.40536, 1, 0, 0.446246,-99) , 
5, -0.62448, 0, 0, 0.518128,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.355776,-99) , 
4, -1.94038, 1, 0, 0.462898,-99) , 
1, -0.777531, 1, 0, 0.511072,-99)    );
  // itree = 163
  fBoostWeights.push_back(0.248082);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.0999496, 1, 1, 0.646274,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.631335,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.460504,-99) , 
18, 1.48979, 1, 0, 0.542367,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.299375,-99) , 
14, 0.541586, 1, 0, 0.4799,-99) , 
10, 2.15446, 0, 0, 0.53673,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.508503,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.258534,-99) , 
7, 0.224225, 0, 0, 0.398314,-99) , 
5, -1.2049, 0, 0, 0.503968,-99)    );
  // itree = 164
  fBoostWeights.push_back(0.246755);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0285963, 0, 1, 0.632752,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.453618,-99) , 
3, -0.523476, 0, 0, 0.584048,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.612871,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.405854,-99) , 
15, 0.00778412, 1, 0, 0.52694,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.307458,-99) , 
18, 1.04713, 1, 0, 0.453374,-99) , 
18, 1.29473, 0, 0, 0.523417,-99)    );
  // itree = 165
  fBoostWeights.push_back(0.26413);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.709447,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.616535,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.364318,-99) , 
7, 0.288669, 1, 0, 0.518921,-99) , 
17, 0.0379882, 0, 0, 0.597287,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.547592,-99) , 
NN_LL(
0, 
0, 
-1, -2.57891, 1, -1, 0.366733,-99) , 
10, 1.66556, 1, 0, 0.431805,-99) , 
1, -0.608802, 0, 0, 0.50958,-99)    );
  // itree = 166
  fBoostWeights.push_back(0.270758);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.732425,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.731952,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.494025,-99) , 
16, -2.25488, 1, 0, 0.610746,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.547403,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.346358,-99) , 
18, 1.02614, 0, 0, 0.465848,-99) , 
13, -0.659713, 0, 0, 0.538025,-99) , 
17, 0.0628751, 0, 0, 0.574733,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.346966,-99) , 
11, 2549.12, 0, 0, 0.53638,-99)    );
  // itree = 167
  fBoostWeights.push_back(0.213766);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 1.91495, 0, 1, 0.632606,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.543142,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.539907,-99) , 
NN_LL(
0, 
0, 
-1, -2.36025, 0, -1, 0.377178,-99) , 
8, 2.29304, 0, 0, 0.459826,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.268401,-99) , 
2, 0.351144, 1, 0, 0.416243,-99) , 
2, 0.499646, 0, 0, 0.447839,-99) , 
11, 6685.01, 0, 0, 0.490203,-99)    );
  // itree = 168
  fBoostWeights.push_back(0.315354);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 3.65118, 0, 1, 0.638974,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.435956,-99) , 
5, -1.02373, 0, 0, 0.584589,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.353791,-99) , 
1, -0.279523, 1, 0, 0.534785,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.317676,-99) , 
19, 0.143721, 1, 0, 0.503409,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.220352,-99) , 
1, -1.05862, 0, 0, 0.465663,-99)    );
  // itree = 169
  fBoostWeights.push_back(0.285121);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.668683,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.68134,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.577822,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.366346,-99) , 
12, 3.69372, 0, 0, 0.482333,-99) , 
11, 3219.12, 1, 0, 0.544142,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.562559,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.312822,-99) , 
11, 3469.51, 0, 0, 0.439522,-99) , 
3, -0.439165, 1, 0, 0.489503,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.299853,-99) , 
2, -0.361896, 0, 0, 0.465629,-99) , 
19, 0.018852, 1, 0, 0.488836,-99)    );
  // itree = 170
  fBoostWeights.push_back(0.197324);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.608514,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.62153,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.483965,-99) , 
16, -2.25973, 0, 0, 0.554497,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.40832,-99) , 
3, -0.397493, 1, 0, 0.492122,-99) , 
NN_LL(
0, 
0, 
-1, 1.53181, 0, -1, 0.37788,-99) , 
4, -2.21719, 0, 0, 0.449126,-99) , 
7, 0.57964, 0, 0, 0.47314,-99)    );
  // itree = 171
  fBoostWeights.push_back(0.249588);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.682677,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.56053,-99) , 
NN_LL(
0, 
0, 
-1, -1.05422, 0, -1, 0.374418,-99) , 
10, 2.37396, 0, 0, 0.417301,-99) , 
11, 7809.97, 0, 0, 0.460272,-99)    );
  // itree = 172
  fBoostWeights.push_back(0.296229);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 1.61562, 0, 1, 0.619425,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.702169,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.455469,-99) , 
14, 0.568792, 1, 0, 0.556504,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.382295,-99) , 
2, 0.0577588, 0, 0, 0.487235,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.286395,-99) , 
0, -0.875031, 0, 0, 0.448697,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.287187,-99) , 
17, 0.0145141, 0, 0, 0.406929,-99) , 
15, 0.00262053, 1, 0, 0.463576,-99)    );
  // itree = 173
  fBoostWeights.push_back(0.238464);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.756491,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.663902,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.489296,-99) , 
15, 0.0118637, 0, 0, 0.564253,-99) , 
19, 0.0731227, 1, 0, 0.616919,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.431188,-99) , 
10, 1.34033, 0, 0, 0.576742,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.508507,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.235348,-99) , 
14, 0.637363, 1, 0, 0.380659,-99) , 
4, -2.43183, 0, 0, 0.53001,-99)    );
  // itree = 174
  fBoostWeights.push_back(0.286045);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.71334,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.587738,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.474991,-99) , 
10, 2.28109, 0, 0, 0.5283,-99) , 
10, 1.91541, 1, 0, 0.604763,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.612225,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.446646,-99) , 
2, 0.159247, 1, 0, 0.530976,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.250363,-99) , 
8, 2.06499, 1, 0, 0.413961,-99) , 
13, -0.69425, 0, 0, 0.521625,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.336818,-99) , 
10, 1.17007, 0, 0, 0.490375,-99)    );
  // itree = 175
  fBoostWeights.push_back(0.245879);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.85022, 0, 1, 0.715159,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.421127,-99) , 
5, -1.27772, 0, 0, 0.624266,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.615398,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.427126,-99) , 
17, 0.0187846, 1, 0, 0.490277,-99) , 
13, -0.705023, 1, 0, 0.548855,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.405904,-99) , 
14, 0.969212, 1, 0, 0.529382,-99)    );
  // itree = 176
  fBoostWeights.push_back(0.257539);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.277386, 0, 1, 0.677001,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.0476, 0, 1, 0.637266,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.458132,-99) , 
9, 1.38147, 1, 0, 0.572668,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.411641,-99) , 
6, 0.888818, 0, 0, 0.53658,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.358679,-99) , 
16, -2.17087, 1, 0, 0.506053,-99) , 
10, 1.49047, 1, 0, 0.55285,-99)    );
  // itree = 177
  fBoostWeights.push_back(0.267855);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.654711,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.634488,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.421213,-99) , 
1, -0.658177, 0, 0, 0.528961,-99) , 
17, 0.0363833, 1, 0, 0.588027,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.402761,-99) , 
17, 0.0145133, 0, 0, 0.547279,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.543164,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.33799,-99) , 
0, -0.279747, 0, 0, 0.430745,-99) , 
9, 1.47737, 1, 0, 0.507727,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.267362,-99) , 
9, 1.00192, 0, 0, 0.480016,-99)    );
  // itree = 178
  fBoostWeights.push_back(0.28856);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.723511,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.659055,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.44698,-99) , 
13, -0.558222, 0, 0, 0.548038,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.626365,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.382745,-99) , 
11, 4320.52, 1, 0, 0.499207,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.299994,-99) , 
1, -0.486269, 1, 0, 0.421983,-99) , 
18, 1.31172, 0, 0, 0.490525,-99) , 
17, 0.0772847, 0, 0, 0.525643,-99)    );
  // itree = 179
  fBoostWeights.push_back(0.22702);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.647745,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 1.2866, 1, 1, 0.589764,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.394046,-99) , 
4, -2.08031, 1, 0, 0.50497,-99) , 
3, -0.525913, 1, 0, 0.549689,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.500239,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.358305,-99) , 
18, 1.43015, 1, 0, 0.424288,-99) , 
6, 2.0133, 1, 0, 0.518173,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.323678,-99) , 
4, -2.73042, 0, 0, 0.496519,-99)    );
  // itree = 180
  fBoostWeights.push_back(0.286216);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.741967,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.643905,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.465687,-99) , 
4, -2.27323, 0, 0, 0.587158,-99) , 
8, 2.79725, 0, 0, 0.627476,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.570499,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.324914,-99) , 
0, -0.794621, 1, 0, 0.438736,-99) , 
5, -1.08488, 0, 0, 0.579668,-99)    );
  // itree = 181
  fBoostWeights.push_back(0.250087);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.617085,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.682227,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.563566,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.346566,-99) , 
0, -0.72473, 0, 0, 0.473378,-99) , 
11, 5101.54, 0, 0, 0.547565,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.519856,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.324558,-99) , 
14, 0.442665, 0, 0, 0.418273,-99) , 
18, 1.61351, 1, 0, 0.487256,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.324765,-99) , 
18, 0.718674, 0, 0, 0.466338,-99) , 
17, 0.00967837, 1, 0, 0.496517,-99)    );
  // itree = 182
  fBoostWeights.push_back(0.214137);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.617391,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.445053,-99) , 
5, -0.500668, 1, 0, 0.558178,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.543594,-99) , 
NN_LL(
0, 
0, 
-1, 1.80793, 1, -1, 0.347059,-99) , 
13, -0.894509, 1, 0, 0.413252,-99) , 
19, 0.0859147, 1, 0, 0.48976,-99)    );
  // itree = 183
  fBoostWeights.push_back(0.301168);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.626728,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.70124,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.461061,-99) , 
7, 0.189994, 0, 0, 0.608007,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.387543,-99) , 
14, 0.804895, 1, 0, 0.546887,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.366916,-99) , 
17, 0.0158785, 0, 0, 0.489597,-99) , 
5, -0.539867, 0, 0, 0.52921,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.21996,-99) , 
17, 0.0822015, 1, 0, 0.496358,-99)    );
  // itree = 184
  fBoostWeights.push_back(0.214145);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.693734,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.464819,-99) , 
12, 3.69316, 1, 0, 0.620349,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.604912,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.370621,-99) , 
8, 2.04577, 1, 0, 0.500406,-99) , 
0, -0.690328, 0, 0, 0.564154,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.503803,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.357896,-99) , 
19, 0.0843861, 1, 0, 0.451023,-99) , 
2, 0.0384342, 0, 0, 0.527494,-99)    );
  // itree = 185
  fBoostWeights.push_back(0.201147);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 3.69474, 1, 1, 0.66175,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.474684,-99) , 
12, 3.46326, 0, 0, 0.583872,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.468313,-99) , 
13, -0.541943, 1, 0, 0.54128,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.361171,-99) , 
17, 0.0725423, 1, 0, 0.518889,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.325916,-99) , 
3, -0.0127544, 1, 0, 0.48899,-99)    );
  // itree = 186
  fBoostWeights.push_back(0.231443);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 2.83939, 0, 1, 0.620657,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.45735,-99) , 
3, -0.505217, 0, 0, 0.573403,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.360617,-99) , 
5, -1.25237, 0, 0, 0.531569,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.528511,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.300757,-99) , 
7, 0.00689646, 1, 0, 0.387222,-99) , 
6, 1.98175, 1, 0, 0.493238,-99)    );
  // itree = 187
  fBoostWeights.push_back(0.199953);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.646563,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.61944,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.430428,-99) , 
7, 0.451307, 0, 0, 0.477734,-99) , 
15, 0.00499573, 0, 0, 0.529477,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.501634,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.313528,-99) , 
15, 0.0129466, 0, 0, 0.408996,-99) , 
15, 0.007745, 1, 0, 0.487934,-99)    );
  // itree = 188
  fBoostWeights.push_back(0.267221);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.742489,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.466068,-99) , 
3, -0.210937, 0, 0, 0.563457,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.64026,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.414349,-99) , 
12, 3.61026, 0, 0, 0.531566,-99) , 
NN_LL(
0, 
0, 
-1, -0.769142, 1, -1, 0.323556,-99) , 
3, -0.38, 1, 0, 0.435947,-99) , 
0, -0.506851, 0, 0, 0.479955,-99)    );
  // itree = 189
  fBoostWeights.push_back(0.263122);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.678749,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 1.99782, 0, 1, 0.634398,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.633182,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.471346,-99) , 
3, -0.464399, 1, 0, 0.538708,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.35376,-99) , 
7, 0.145075, 1, 0, 0.474328,-99) , 
7, 0.322027, 0, 0, 0.536178,-99) , 
12, 3.19354, 1, 0, 0.570533,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.367704,-99) , 
1, -1.03641, 0, 0, 0.546435,-99)    );
  // itree = 190
  fBoostWeights.push_back(0.237954);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.669315,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.49661,-99) , 
13, -0.48642, 1, 0, 0.609466,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.620962,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.396379,-99) , 
2, 0.246273, 0, 0, 0.474594,-99) , 
12, 3.62724, 1, 0, 0.54856,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.339146,-99) , 
19, 0.161731, 1, 0, 0.523692,-99)    );
  // itree = 191
  fBoostWeights.push_back(0.255643);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.962789, 0, 1, 0.621606,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.610855,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.454494,-99) , 
15, 0.0104676, 0, 0, 0.525536,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.309626,-99) , 
1, -0.728059, 1, 0, 0.46385,-99) , 
8, 2.29352, 0, 0, 0.545863,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.304484,-99) , 
3, 0.0168885, 1, 0, 0.515883,-99)    );
  // itree = 192
  fBoostWeights.push_back(0.239352);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.736658,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.603785,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.44656,-99) , 
12, 3.60111, 1, 0, 0.52069,-99) , 
17, 0.0144085, 1, 0, 0.573159,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.572234,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.401936,-99) , 
10, 2.04542, 0, 0, 0.488061,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.287579,-99) , 
4, -2.42656, 0, 0, 0.434815,-99) , 
9, 1.30415, 0, 0, 0.501167,-99)    );
  // itree = 193
  fBoostWeights.push_back(0.225259);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.699162,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0910186, 1, 1, 0.597957,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.466665,-99) , 
2, -0.122746, 0, 0, 0.563345,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.347567,-99) , 
4, -2.47547, 0, 0, 0.53053,-99) , 
7, 0.39477, 0, 0, 0.55948,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.385903,-99) , 
7, 0.61248, 1, 0, 0.535519,-99)    );
  // itree = 194
  fBoostWeights.push_back(0.23805);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.58031, 1, 1, 0.630984,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.444284,-99) , 
7, 0.451304, 1, 0, 0.585998,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.412714,-99) , 
18, 0.939643, 0, 0, 0.549754,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.340904,-99) , 
19, 0.139736, 1, 0, 0.512008,-99)    );
  // itree = 195
  fBoostWeights.push_back(0.258751);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.666851,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.566999,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.447696,-99) , 
18, 1.51867, 0, 0, 0.50755,-99) , 
6, 1.06237, 1, 0, 0.563331,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.565976,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.244205,-99) , 
13, -0.803875, 1, 0, 0.390537,-99) , 
19, 0.0882813, 1, 0, 0.493133,-99)    );
  // itree = 196
  fBoostWeights.push_back(0.303019);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.063856, 0, 1, 0.710269,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.659566,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.477472,-99) , 
2, 0.19443, 0, 0, 0.55251,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.345836,-99) , 
8, 2.06368, 0, 0, 0.485695,-99) , 
11, 5708.46, 0, 0, 0.566133,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.331302,-99) , 
2, 0.513947, 1, 0, 0.519113,-99)    );
  // itree = 197
  fBoostWeights.push_back(0.249566);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.16278, 1, 1, 0.631156,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.648396,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.426523,-99) , 
17, 0.0193663, 1, 0, 0.494794,-99) , 
2, 0.093235, 1, 0, 0.553435,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.290031,-99) , 
19, 0.179547, 1, 0, 0.524475,-99)    );
  // itree = 198
  fBoostWeights.push_back(0.264733);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.697392,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.657056,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.434384,-99) , 
0, -0.816108, 1, 0, 0.537324,-99) , 
19, 0.0850143, 1, 0, 0.611431,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.508813,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.310785,-99) , 
19, 0.0646608, 1, 0, 0.412662,-99) , 
7, 0.354961, 1, 0, 0.533584,-99) , 
NN_LL(
0, 
0, 
-1, 0.0290158, 0, -1, 0.367874,-99) , 
6, 2.01126, 1, 0, 0.497936,-99)    );
  // itree = 199
  fBoostWeights.push_back(0.266943);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0241743, 1, 1, 0.621373,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.519722,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.359902,-99) , 
1, -0.668619, 0, 0, 0.438469,-99) , 
19, 0.10657, 1, 0, 0.55881,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.358641,-99) , 
1, -0.959045, 0, 0, 0.515034,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.287815,-99) , 
10, 1.19728, 0, 0, 0.478923,-99)    );
  // itree = 200
  fBoostWeights.push_back(0.252515);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 6105.98, 0, 1, 0.656622,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.470328,-99) , 
10, 1.38316, 0, 0, 0.604916,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.555876,-99) , 
NN_LL(
0, 
0, 
-1, 3.46625, 0, -1, 0.342733,-99) , 
4, -1.99723, 0, 0, 0.408235,-99) , 
18, 1.31328, 0, 0, 0.511016,-99)    );
  // itree = 201
  fBoostWeights.push_back(0.182541);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.602053,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.55571,-99) , 
NN_LL(
0, 
0, 
-1, 2.05668, 1, -1, 0.420417,-99) , 
19, 0.107001, 1, 0, 0.504303,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.362789,-99) , 
0, -0.507278, 1, 0, 0.461678,-99) , 
1, -0.371315, 0, 0, 0.495037,-99)    );
  // itree = 202
  fBoostWeights.push_back(0.269901);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.753968,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.656658,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.468316,-99) , 
8, 2.01992, 1, 0, 0.587988,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.534899,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.333046,-99) , 
17, 0.0384695, 1, 0, 0.434186,-99) , 
1, -0.772792, 1, 0, 0.512746,-99) , 
19, 0.0352459, 1, 0, 0.549771,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.354245,-99) , 
16, -1.88774, 1, 0, 0.515133,-99)    );
  // itree = 203
  fBoostWeights.push_back(0.223766);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.629921,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.667377,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.465815,-99) , 
16, -2.51334, 1, 0, 0.543,-99) , 
NN_LL(
0, 
0, 
-1, 0.693355, 0, -1, 0.384819,-99) , 
11, 5461.56, 0, 0, 0.447101,-99) , 
10, 1.38316, 1, 0, 0.493103,-99)    );
  // itree = 204
  fBoostWeights.push_back(0.245486);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.540525, 0, 1, 0.636264,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.578058,-99) , 
NN_LL(
0, 
0, 
-1, 0.504762, 0, -1, 0.408368,-99) , 
7, 0.449571, 0, 0, 0.451831,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.274644,-99) , 
19, 0.125808, 1, 0, 0.41649,-99) , 
18, 0.794534, 1, 0, 0.467508,-99)    );
  // itree = 205
  fBoostWeights.push_back(0.292846);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.6625,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.656958,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.40916,-99) , 
4, -2.20752, 0, 0, 0.555482,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.380448,-99) , 
10, 2.05668, 0, 0, 0.468085,-99) , 
3, -0.628394, 1, 0, 0.511051,-99) , 
NN_LL(
0, 
0, 
-1, -0.881038, 1, -1, 0.332044,-99) , 
9, 1.12381, 0, 0, 0.46331,-99)    );
  // itree = 206
  fBoostWeights.push_back(0.26145);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.754797,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.397779, 0, 1, 0.58498,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.366614,-99) , 
4, -2.43648, 0, 0, 0.533232,-99) , 
11, 6373.06, 0, 0, 0.591131,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.42426,-99) , 
16, -1.82398, 1, 0, 0.556431,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.353094,-99) , 
18, 0.728954, 0, 0, 0.529544,-99)    );
  // itree = 207
  fBoostWeights.push_back(0.18553);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.657901, 0, 1, 0.611834,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.463845,-99) , 
18, 1.66936, 1, 0, 0.555891,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.345311,-99) , 
19, 0.169611, 1, 0, 0.530874,-99)    );
  // itree = 208
  fBoostWeights.push_back(0.304408);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.722515,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.705736,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.47842,-99) , 
18, 1.4977, 0, 0, 0.596433,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.619012,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.437457,-99) , 
11, 3982.73, 0, 0, 0.531675,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.315965,-99) , 
7, 0.192681, 1, 0, 0.43004,-99) , 
1, -0.727467, 1, 0, 0.499946,-99) , 
4, -2.51103, 1, 0, 0.524415,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.268672,-99) , 
4, -2.72786, 0, 0, 0.498175,-99)    );
  // itree = 209
  fBoostWeights.push_back(0.272856);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.293719, 0, 1, 0.69021,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.714246,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.489275,-99) , 
6, 1.2497, 0, 0, 0.591662,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.368931,-99) , 
4, -2.43312, 0, 0, 0.54536,-99) , 
NN_LL(
0, 
0, 
-1, 3.5044, 0, -1, 0.369691,-99) , 
6, 1.70138, 1, 0, 0.484619,-99) , 
19, 0.0363005, 1, 0, 0.531158,-99)    );
  // itree = 210
  fBoostWeights.push_back(0.221638);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.686884,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.678716,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.479369,-99) , 
2, -0.0690497, 0, 0, 0.597091,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.587376,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.505358,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.275825,-99) , 
12, 3.62374, 0, 0, 0.419639,-99) , 
12, 3.27868, 1, 0, 0.472351,-99) , 
3, -0.473302, 1, 0, 0.519606,-99) , 
7, 0.642562, 0, 0, 0.54148,-99)    );
  // itree = 211
  fBoostWeights.push_back(0.253243);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 3.71104, 0, 1, 0.688073,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.498798,-99) , 
7, 0.0642692, 0, 0, 0.622119,-99) , 
NN_LL(
0, 
0, 
-1, 1.37051, 0, -1, 0.428429,-99) , 
11, 3449.01, 0, 0, 0.560186,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.362344,-99) , 
3, -0.0843377, 1, 0, 0.516052,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.290526,-99) , 
5, -1.39379, 0, 0, 0.491358,-99)    );
  // itree = 212
  fBoostWeights.push_back(0.249672);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.784707, 1, 1, 0.651683,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.619375,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.439912,-99) , 
3, -0.66446, 1, 0, 0.499903,-99) , 
2, 0.135368, 0, 0, 0.579229,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.391315,-99) , 
4, -2.46867, 0, 0, 0.541636,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.33939,-99) , 
17, 0.0676963, 1, 0, 0.511783,-99)    );
  // itree = 213
  fBoostWeights.push_back(0.257644);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.128522, 0, 1, 0.639931,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.419677,-99) , 
13, -0.78696, 0, 0, 0.604209,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.536535,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.235061,-99) , 
1, -0.765155, 1, 0, 0.431094,-99) , 
8, 2.05576, 0, 0, 0.551461,-99)    );
  // itree = 214
  fBoostWeights.push_back(0.276717);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 3611.22, 0, 1, 0.638315,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.464491,-99) , 
2, 0.492828, 1, 0, 0.601977,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.722808,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.423233,-99) , 
8, 2.05319, 1, 0, 0.557569,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.327864,-99) , 
17, 0.056674, 0, 0, 0.481198,-99) , 
17, 0.0386882, 1, 0, 0.552764,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.353193,-99) , 
16, -1.93418, 1, 0, 0.505375,-99)    );
  // itree = 215
  fBoostWeights.push_back(0.251547);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.674357,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.634488,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.577349,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.374334,-99) , 
4, -2.30942, 1, 0, 0.469959,-99) , 
2, 0.0322234, 1, 0, 0.54719,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.397112,-99) , 
6, 2.01546, 1, 0, 0.51061,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.376702,-99) , 
16, -2.68554, 0, 0, 0.47976,-99) , 
10, 2.47062, 0, 0, 0.50305,-99)    );
  // itree = 216
  fBoostWeights.push_back(0.272376);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.650805,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.635389,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.591402,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.524215,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.31801,-99) , 
13, -0.807558, 0, 0, 0.436073,-99) , 
10, 1.58878, 1, 0, 0.481323,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.298496,-99) , 
17, 0.0144949, 0, 0, 0.432394,-99) , 
5, -0.574798, 0, 0, 0.492549,-99) , 
4, -1.89997, 0, 0, 0.53997,-99)    );
  // itree = 217
  fBoostWeights.push_back(0.35599);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.786794,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.755321,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.401644,-99) , 
8, 2.16219, 1, 0, 0.559964,-99) , 
5, -0.682958, 0, 0, 0.640013,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.783169,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.484408,-99) , 
2, 0.0560826, 1, 0, 0.639886,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.470823,-99) , 
2, -0.184747, 0, 0, 0.564637,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.311801,-99) , 
8, 2.01594, 0, 0, 0.497434,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.245798,-99) , 
2, 0.254927, 1, 0, 0.44657,-99) , 
14, 0.669464, 0, 0, 0.51498,-99)    );
  // itree = 218
  fBoostWeights.push_back(0.24052);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.66772,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.648716,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.413407,-99) , 
2, 0.162723, 1, 0, 0.536456,-99) , 
19, 0.107001, 1, 0, 0.613254,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.423688,-99) , 
12, 4.09612, 1, 0, 0.574195,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.426819,-99) , 
12, 3.23553, 0, 0, 0.541016,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.388653,-99) , 
7, 0.547439, 1, 0, 0.514011,-99)    );
  // itree = 219
  fBoostWeights.push_back(0.243234);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.574675, 1, 1, 0.656498,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.461172,-99) , 
2, -0.0813128, 0, 0, 0.584126,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.274473, 1, 1, 0.575693,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.375621,-99) , 
10, 1.77045, 0, 0, 0.505517,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.327448,-99) , 
4, -2.04676, 1, 0, 0.434055,-99) , 
11, 4652.54, 0, 0, 0.503655,-99)    );
  // itree = 220
  fBoostWeights.push_back(0.184617);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 2.92406, 1, 1, 0.623052,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.477156,-99) , 
12, 3.52963, 0, 0, 0.557449,-99) , 
NN_LL(
0, 
0, 
-1, 0.128528, 0, -1, 0.374518,-99) , 
19, 0.107, 1, 0, 0.506291,-99)    );
  // itree = 221
  fBoostWeights.push_back(0.283516);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 2.19108, 0, 1, 0.643003,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.439415,-99) , 
19, 0.0257551, 0, 0, 0.602358,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.406458,-99) , 
19, 0.130358, 1, 0, 0.561882,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.209525,-99) , 
18, 0.619723, 0, 0, 0.524016,-99)    );
  // itree = 222
  fBoostWeights.push_back(0.215957);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0115994, 0, 1, 0.60242,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.671092,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.450803,-99) , 
10, 2.13305, 1, 0, 0.536941,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.359606,-99) , 
2, 0.0259756, 0, 0, 0.473667,-99) , 
7, 0.128526, 0, 0, 0.551933,-99)    );
  // itree = 223
  fBoostWeights.push_back(0.233973);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.193215, 1, 1, 0.616221,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.606616,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.508469,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.339934,-99) , 
8, 2.35926, 1, 0, 0.431763,-99) , 
13, -0.411206, 0, 0, 0.486323,-99) , 
12, 3.21515, 1, 0, 0.526819,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.270985,-99) , 
9, 1.02879, 0, 0, 0.490156,-99)    );
  // itree = 224
  fBoostWeights.push_back(0.229834);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.672308,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.644509,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.426802,-99) , 
4, -2.25431, 0, 0, 0.569691,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.430357,-99) , 
12, 3.54968, 1, 0, 0.513203,-99) , 
11, 6759.89, 0, 0, 0.54468,-99) , 
NN_LL(
0, 
0, 
-1, 0.257625, 0, -1, 0.389965,-99) , 
9, 1.09984, 0, 0, 0.503908,-99)    );
  // itree = 225
  fBoostWeights.push_back(0.232837);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -1.93027, 1, 1, 0.614319,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.616294,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.39248,-99) , 
1, -0.681724, 0, 0, 0.499614,-99) , 
10, 1.89908, 1, 0, 0.561198,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.402106,-99) , 
11, 2272.91, 0, 0, 0.532939,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.362694,-99) , 
17, 0.00966508, 0, 0, 0.50795,-99)    );
  // itree = 226
  fBoostWeights.push_back(0.281748);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.620189,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.705228,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.433509,-99) , 
9, 1.08411, 0, 0, 0.552582,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.276183,-99) , 
8, 2.38654, 1, 0, 0.461268,-99) , 
5, -0.849279, 0, 0, 0.517511,-99) , 
NN_LL(
0, 
0, 
-1, -0.535728, 1, -1, 0.381059,-99) , 
18, 1.72726, 1, 0, 0.47561,-99)    );
  // itree = 227
  fBoostWeights.push_back(0.2936);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.534391, 0, 1, 0.659935,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.605321,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.562062,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.334249,-99) , 
0, -0.616422, 1, 0, 0.45887,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.286507,-99) , 
11, 3855.15, 1, 0, 0.403067,-99) , 
11, 6071.35, 0, 0, 0.441974,-99) , 
12, 3.88899, 0, 0, 0.505573,-99)    );
  // itree = 228
  fBoostWeights.push_back(0.297853);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.758473,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.616792,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.371846,-99) , 
16, -2.4169, 0, 0, 0.496333,-99) , 
12, 3.85234, 0, 0, 0.592263,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.61976,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.439288,-99) , 
10, 1.99304, 0, 0, 0.530992,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.341178,-99) , 
18, 1.41533, 1, 0, 0.433889,-99) , 
17, 0.0241807, 1, 0, 0.498821,-99)    );
  // itree = 229
  fBoostWeights.push_back(0.268551);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.733238,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.65006,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.323987,-99) , 
4, -2.20976, 0, 0, 0.515499,-99) , 
18, 1.28369, 1, 0, 0.581525,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.524276,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.352379,-99) , 
19, 0.0773049, 1, 0, 0.4473,-99) , 
3, -0.295947, 1, 0, 0.524859,-99) , 
NN_LL(
0, 
0, 
-1, 0.0335318, 1, -1, 0.394841,-99) , 
18, 0.909428, 0, 0, 0.494175,-99)    );
  // itree = 230
  fBoostWeights.push_back(0.241095);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.685236,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.646892,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.494652,-99) , 
10, 2.16065, 0, 0, 0.545423,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.363716,-99) , 
3, -0.0900489, 1, 0, 0.505476,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.248861,-99) , 
0, -0.926575, 0, 0, 0.469551,-99) , 
1, -0.931532, 1, 0, 0.502898,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.322372,-99) , 
1, -1.06323, 0, 0, 0.480725,-99)    );
  // itree = 231
  fBoostWeights.push_back(0.266044);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.719816,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.468973,-99) , 
19, 0.081855, 1, 0, 0.621187,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.662996,-99) , 
NN_LL(
0, 
0, 
-1, 2.05954, 1, -1, 0.424948,-99) , 
18, 0.922498, 1, 0, 0.487392,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.338461,-99) , 
12, 3.75311, 1, 0, 0.433919,-99) , 
7, 0.289173, 0, 0, 0.502764,-99)    );
  // itree = 232
  fBoostWeights.push_back(0.247167);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.232787, 0, 1, 0.680417,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.638871,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.457619,-99) , 
4, -2.02048, 1, 0, 0.575691,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.408392,-99) , 
19, 0.097456, 1, 0, 0.5387,-99) , 
13, -0.764886, 1, 0, 0.575764,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.386698,-99) , 
0, -0.92439, 0, 0, 0.544551,-99)    );
  // itree = 233
  fBoostWeights.push_back(0.260332);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.621704,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.720622,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.430445,-99) , 
0, -0.597639, 0, 0, 0.579851,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.562182,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.397246,-99) , 
16, -2.33083, 1, 0, 0.489103,-99) , 
NN_LL(
0, 
0, 
-1, 3.28722, 1, -1, 0.33932,-99) , 
11, 3640.76, 0, 0, 0.416059,-99) , 
14, 0.321076, 1, 0, 0.470841,-99) , 
18, 1.9985, 0, 0, 0.502012,-99)    );
  // itree = 234
  fBoostWeights.push_back(0.205504);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -2.21756, 0, 1, 0.58836,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.667045,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.472202,-99) , 
1, -0.899665, 1, 0, 0.562968,-99) , 
NN_LL(
0, 
0, 
-1, 2.0885, 1, -1, 0.369332,-99) , 
0, -0.746122, 1, 0, 0.462218,-99) , 
19, 0.0711794, 1, 0, 0.520415,-99)    );
  // itree = 235
  fBoostWeights.push_back(0.264299);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.748811,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.490296,-99) , 
0, -0.657052, 1, 0, 0.613987,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.686942,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.536074,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.344643,-99) , 
18, 1.34569, 1, 0, 0.443142,-99) , 
1, -0.404778, 0, 0, 0.501604,-99) , 
4, -2.03981, 0, 0, 0.551199,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.298174,-99) , 
1, -1.06528, 0, 0, 0.522149,-99)    );
  // itree = 236
  fBoostWeights.push_back(0.237663);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.652845,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.25412, 0, 1, 0.580131,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.399192,-99) , 
0, -0.52902, 0, 0, 0.48192,-99) , 
15, 0.00808325, 0, 0, 0.524546,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.310682,-99) , 
19, 0.160023, 1, 0, 0.498781,-99)    );
  // itree = 237
  fBoostWeights.push_back(0.291867);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.321289, 1, 1, 0.665714,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.708007,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.518746,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.289259,-99) , 
15, 0.00925593, 1, 0, 0.435086,-99) , 
13, -0.97743, 1, 0, 0.520178,-99) , 
5, -0.909574, 0, 0, 0.593249,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.375464,-99) , 
10, 1.18603, 0, 0, 0.552724,-99)    );
  // itree = 238
  fBoostWeights.push_back(0.268043);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 3603.51, 0, 1, 0.639304,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.625125,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.509544,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.290711,-99) , 
16, -2.35167, 1, 0, 0.386752,-99) , 
6, 2.56375, 0, 0, 0.45243,-99) , 
7, 0.193423, 0, 0, 0.545363,-99)    );
  // itree = 239
  fBoostWeights.push_back(0.238291);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -2.32613, 1, 1, 0.587822,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.643044,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.428778,-99) , 
11, 2937.28, 1, 0, 0.535519,-99) , 
NN_LL(
0, 
0, 
-1, 3022.81, 0, -1, 0.34194,-99) , 
16, -2.33986, 0, 0, 0.413496,-99) , 
11, 4654.54, 0, 0, 0.488996,-99)    );
  // itree = 240
  fBoostWeights.push_back(0.218966);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.651909,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.549798,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.38268,-99) , 
19, 0.0760295, 1, 0, 0.491721,-99) , 
10, 2.15446, 0, 0, 0.539242,-99) , 
NN_LL(
0, 
0, 
-1, 3.45675, 0, -1, 0.362639,-99) , 
5, -1.04016, 0, 0, 0.490842,-99)    );
  // itree = 241
  fBoostWeights.push_back(0.238517);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.691032,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.63367,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.453879,-99) , 
4, -2.07677, 0, 0, 0.530105,-99) , 
18, 1.72477, 0, 0, 0.589453,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.549587,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.571866,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.319419,-99) , 
6, 0.940227, 1, 0, 0.405419,-99) , 
6, 1.65392, 0, 0, 0.455142,-99) , 
0, -0.623744, 1, 0, 0.522088,-99)    );
  // itree = 242
  fBoostWeights.push_back(0.318258);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.626208,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.569957,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.518316,-99) , 
NN_LL(
0, 
0, 
-1, -0.952398, 1, -1, 0.281448,-99) , 
17, 0.0592729, 0, 0, 0.347735,-99) , 
9, 1.30898, 0, 0, 0.428651,-99) , 
17, 0.0096518, 1, 0, 0.471686,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.272789,-99) , 
13, -0.316075, 1, 0, 0.419996,-99)    );
  // itree = 243
  fBoostWeights.push_back(0.313219);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.650905,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.454905,-99) , 
7, 0.0921183, 0, 0, 0.5943,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.368535,-99) , 
9, 1.35018, 1, 0, 0.530859,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.305999,-99) , 
4, -2.41294, 0, 0, 0.479142,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.320153,-99) , 
0, -0.34359, 1, 0, 0.431674,-99)    );
  // itree = 244
  fBoostWeights.push_back(0.246719);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.556309,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.62502,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.426346,-99) , 
18, 1.1372, 1, 0, 0.503202,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.309389,-99) , 
4, -2.44068, 0, 0, 0.454035,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.312386,-99) , 
1, -0.468095, 1, 0, 0.407788,-99) , 
14, 0.835567, 0, 0, 0.442784,-99)    );
  // itree = 245
  fBoostWeights.push_back(0.173304);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -2.15747, 1, 1, 0.55988,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.569697,-99) , 
NN_LL(
0, 
0, 
-1, 1.10292, 1, -1, 0.362544,-99) , 
19, 0.149595, 0, 0, 0.432923,-99) , 
13, -0.66781, 0, 0, 0.499573,-99)    );
  // itree = 246
  fBoostWeights.push_back(0.303139);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.38325, 1, 1, 0.601929,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.633314,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.408562,-99) , 
9, 1.01351, 0, 0, 0.560856,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.30932,-99) , 
9, 1.22287, 1, 0, 0.463392,-99) , 
0, -0.525754, 0, 0, 0.5098,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.237737,-99) , 
18, 0.626824, 0, 0, 0.478434,-99)    );
  // itree = 247
  fBoostWeights.push_back(0.248593);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.624054,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.676462,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.445543,-99) , 
8, 1.93567, 1, 0, 0.538368,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.409749,-99) , 
10, 2.11521, 1, 0, 0.487403,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.314197,-99) , 
17, 0.0574615, 1, 0, 0.453866,-99) , 
0, -0.567631, 0, 0, 0.495155,-99) , 
NN_LL(
0, 
0, 
-1, 2.00048, 1, -1, 0.366753,-99) , 
0, -0.402049, 1, 0, 0.459232,-99)    );
  // itree = 248
  fBoostWeights.push_back(0.247614);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.673654,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.707256,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.465553,-99) , 
2, 0.242476, 1, 0, 0.580232,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.515261,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.357783,-99) , 
14, 0.479912, 0, 0, 0.43218,-99) , 
0, -0.70725, 1, 0, 0.48407,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.309127,-99) , 
8, 1.83634, 0, 0, 0.455028,-99) , 
11, 7807.66, 0, 0, 0.493201,-99)    );
  // itree = 249
  fBoostWeights.push_back(0.298255);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.74495,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 2.68467, 0, 1, 0.601007,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.598482,-99) , 
NN_LL(
0, 
0, 
-1, -0.756872, 0, -1, 0.331335,-99) , 
12, 3.82191, 0, 0, 0.392888,-99) , 
5, -0.790802, 0, 0, 0.485429,-99) , 
11, 8320.71, 0, 0, 0.519755,-99)    );
  // itree = 250
  fBoostWeights.push_back(0.196396);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.662852,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.469652,-99) , 
17, 0.0241757, 0, 0, 0.588401,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.54535,-99) , 
NN_LL(
0, 
0, 
-1, 0.107648, 1, -1, 0.387942,-99) , 
12, 3.72096, 0, 0, 0.447519,-99) , 
14, 0.324462, 1, 0, 0.504733,-99)    );
  // itree = 251
  fBoostWeights.push_back(0.24257);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.206039, 0, 1, 0.623064,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.352389,-99) , 
5, -1.27102, 0, 0, 0.564274,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.577973,-99) , 
NN_LL(
0, 
0, 
-1, -0.770485, 1, -1, 0.365483,-99) , 
8, 2.59744, 0, 0, 0.464552,-99) , 
3, -0.391069, 1, 0, 0.517791,-99)    );
  // itree = 252
  fBoostWeights.push_back(0.280663);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.79942, 1, 1, 0.657641,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.422134,-99) , 
17, 0.0335148, 1, 0, 0.575079,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.645997,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.396602,-99) , 
19, 0.0449374, 1, 0, 0.470223,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.295232,-99) , 
10, 1.27793, 0, 0, 0.421904,-99) , 
5, -1.04663, 1, 0, 0.474751,-99)    );
  // itree = 253
  fBoostWeights.push_back(0.234215);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.649219,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.109333, 1, 1, 0.622701,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.542605,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.361635,-99) , 
10, 1.66311, 1, 0, 0.464407,-99) , 
14, 0.41674, 0, 0, 0.541493,-99) , 
NN_LL(
0, 
0, 
-1, -0.586289, 0, -1, 0.391296,-99) , 
4, -2.30942, 0, 0, 0.492641,-99) , 
1, -0.951546, 1, 0, 0.528784,-99)    );
  // itree = 254
  fBoostWeights.push_back(0.220506);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.694493, 0, 1, 0.619784,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.606301,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.381549,-99) , 
17, 0.0286663, 1, 0, 0.468483,-99) , 
2, 0.400878, 1, 0, 0.539371,-99) , 
NN_LL(
0, 
0, 
-1, -0.76227, 1, -1, 0.401791,-99) , 
14, 0.421818, 0, 0, 0.478868,-99)    );
  // itree = 255
  fBoostWeights.push_back(0.252313);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.583597,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.577929,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.392627,-99) , 
10, 1.8488, 0, 0, 0.498707,-99) , 
NN_LL(
0, 
0, 
-1, 1.01654, 0, -1, 0.354764,-99) , 
17, 0.0288503, 1, 0, 0.424276,-99) , 
18, 1.72726, 0, 0, 0.467288,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.277643,-99) , 
6, 2.44433, 1, 0, 0.443398,-99)    );
  // itree = 256
  fBoostWeights.push_back(0.232866);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.676217,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.448991,-99) , 
7, 0.0963464, 0, 0, 0.573893,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.607777,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.475743,-99) , 
8, 2.33477, 0, 0, 0.547078,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.540707,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.392041,-99) , 
4, -2.14535, 1, 0, 0.456759,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.273995,-99) , 
15, 0.00519586, 0, 0, 0.381183,-99) , 
10, 1.81774, 1, 0, 0.445916,-99) , 
18, 1.72289, 0, 0, 0.482325,-99)    );
  // itree = 257
  fBoostWeights.push_back(0.239315);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.748658,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.523945, 0, 1, 0.603709,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.602231,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.456407,-99) , 
0, -0.808923, 0, 0, 0.529597,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.37979,-99) , 
13, -0.757739, 1, 0, 0.451345,-99) , 
19, 0.0721886, 1, 0, 0.528435,-99) , 
3, -0.819779, 1, 0, 0.553293,-99)    );
  // itree = 258
  fBoostWeights.push_back(0.270261);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.345864, 1, 1, 0.635118,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.433162,-99) , 
2, -0.0765467, 0, 0, 0.576388,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.684763,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.557073,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.354413,-99) , 
12, 3.54925, 1, 0, 0.451418,-99) , 
17, 0.0144631, 1, 0, 0.502641,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.292539,-99) , 
5, -1.04381, 0, 0, 0.449369,-99) , 
1, -0.7898, 1, 0, 0.500077,-99)    );
  // itree = 259
  fBoostWeights.push_back(0.259136);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.157793, 0, 1, 0.633881,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.40748,-99) , 
17, 0.0193675, 0, 0, 0.542668,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.572238,-99) , 
NN_LL(
0, 
0, 
-1, 0.334356, 0, -1, 0.373286,-99) , 
17, 0.0334887, 0, 0, 0.461921,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.30965,-99) , 
1, -0.52685, 1, 0, 0.409142,-99) , 
2, 0.0223756, 1, 0, 0.461626,-99)    );
  // itree = 260
  fBoostWeights.push_back(0.254251);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.127087, 0, 1, 0.660666,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.629193,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.421579,-99) , 
3, -0.248578, 1, 0, 0.54676,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.321656,-99) , 
8, 2.10306, 0, 0, 0.479192,-99) , 
11, 4657, 0, 0, 0.556663,-99) , 
NN_LL(
0, 
0, 
-1, -2.26107, 0, -1, 0.41347,-99) , 
10, 1.58359, 0, 0, 0.509641,-99)    );
  // itree = 261
  fBoostWeights.push_back(0.272576);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.647721,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.441901,-99) , 
12, 3.64953, 0, 0, 0.547657,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.64871,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.438735,-99) , 
7, 0.0831943, 0, 0, 0.54071,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.373222,-99) , 
7, 0.322366, 1, 0, 0.474712,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.324505,-99) , 
9, 1.07569, 0, 0, 0.440257,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.3215,-99) , 
16, -2.17701, 1, 0, 0.403521,-99) , 
3, -0.618006, 1, 0, 0.440757,-99)    );
  // itree = 262
  fBoostWeights.push_back(0.275506);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.432468, 1, 1, 0.633077,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.663211,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.409886,-99) , 
19, 0.0648784, 1, 0, 0.550056,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.356138,-99) , 
17, 0.0434241, 1, 0, 0.48307,-99) , 
4, -2.02603, 0, 0, 0.539697,-99)    );
  // itree = 263
  fBoostWeights.push_back(0.276467);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.638282,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.452165,-99) , 
7, 0.160657, 0, 0, 0.559524,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.615888,-99) , 
NN_LL(
0, 
0, 
-1, 2.0988, 1, -1, 0.322827,-99) , 
5, -0.44508, 0, 0, 0.40469,-99) , 
1, -0.75633, 1, 0, 0.469769,-99)    );
  // itree = 264
  fBoostWeights.push_back(0.268835);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.686486,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.667193,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.45039,-99) , 
14, 0.722156, 0, 0, 0.532686,-99) , 
2, -0.0520696, 1, 0, 0.587273,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.572534,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.385579,-99) , 
18, 0.93391, 0, 0, 0.480469,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.306925,-99) , 
16, -2.21631, 1, 0, 0.403152,-99) , 
5, -0.93702, 0, 0, 0.513431,-99)    );
  // itree = 265
  fBoostWeights.push_back(0.273435);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.811881,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.643374,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.444628,-99) , 
19, 0.0891838, 1, 0, 0.556474,-99) , 
6, 2.02923, 0, 0, 0.637937,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, -2.45475, 1, 1, 0.570768,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.35617,-99) , 
2, 0.309487, 0, 0, 0.478322,-99) , 
3, -0.370715, 1, 0, 0.564571,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.506124,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.301681,-99) , 
13, -0.972727, 1, 0, 0.391068,-99) , 
1, -0.929156, 0, 0, 0.523445,-99)    );
  // itree = 266
  fBoostWeights.push_back(0.241707);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.678487,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.462687,-99) , 
12, 3.64844, 1, 0, 0.595828,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.602084,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.570405,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.395134,-99) , 
6, 1.94158, 1, 0, 0.502669,-99) , 
NN_LL(
0, 
0, 
-1, 1.17446, 1, -1, 0.332008,-99) , 
4, -2.10242, 0, 0, 0.431495,-99) , 
7, 0.51407, 0, 0, 0.466783,-99) , 
0, -0.459716, 0, 0, 0.511983,-99)    );
  // itree = 267
  fBoostWeights.push_back(0.230868);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.641474,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.700388,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.498117,-99) , 
9, 1.15036, 0, 0, 0.610397,-99) , 
NN_LL(
0, 
0, 
-1, -0.83995, 0, -1, 0.416831,-99) , 
7, 0.125604, 0, 0, 0.493583,-99) , 
NN_LL(
0, 
0, 
-1, 1.89937, 1, -1, 0.350571,-99) , 
7, 0.35423, 1, 0, 0.456454,-99) , 
2, 0.626992, 0, 0, 0.482369,-99)    );
  // itree = 268
  fBoostWeights.push_back(0.209565);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.20877, 0, 1, 0.582866,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.561945,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.302286,-99) , 
1, -0.943645, 1, 0, 0.427415,-99) , 
9, 1.12505, 0, 0, 0.522007,-99) , 
NN_LL(
0, 
0, 
-1, 2.063, 1, -1, 0.394923,-99) , 
9, 1.42127, 1, 0, 0.474939,-99)    );
  // itree = 269
  fBoostWeights.push_back(0.245385);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.107158, 0, 1, 0.600041,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.638832,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.450303,-99) , 
4, -2.18702, 0, 0, 0.55856,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.397665,-99) , 
14, 0.642862, 1, 0, 0.508908,-99) , 
18, 1.4112, 0, 0, 0.547999,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.383792,-99) , 
8, 1.93573, 0, 0, 0.519356,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.255451,-99) , 
13, -0.937543, 0, 0, 0.487894,-99)    );
  // itree = 270
  fBoostWeights.push_back(0.230712);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.68205,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.460448,-99) , 
3, -0.326287, 1, 0, 0.588829,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.652588,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.432151,-99) , 
12, 3.34496, 0, 0, 0.519774,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.388272,-99) , 
12, 3.64236, 1, 0, 0.470546,-99) , 
19, 0.0691611, 1, 0, 0.527039,-99)    );
  // itree = 271
  fBoostWeights.push_back(0.181905);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -2.19293, 1, 1, 0.591883,-99) , 
NN_LL(
0, 
0, 
-1, 2.16267, 0, -1, 0.413759,-99) , 
11, 3449.01, 0, 0, 0.531251,-99)    );
  // itree = 272
  fBoostWeights.push_back(0.256268);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 3.58885, 1, 1, 0.625025,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.644947,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.54525,-99) , 
NN_LL(
0, 
0, 
-1, -0.638449, 1, -1, 0.356128,-99) , 
8, 2.66057, 0, 0, 0.412951,-99) , 
0, -0.835128, 1, 0, 0.48228,-99) , 
10, 1.81774, 1, 0, 0.523623,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.36835,-99) , 
2, -0.278046, 0, 0, 0.493271,-99)    );
  // itree = 273
  fBoostWeights.push_back(0.220959);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.657248,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.574135,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.536372,-99) , 
NN_LL(
0, 
0, 
-1, 1.55033, 0, -1, 0.348676,-99) , 
6, 1.04366, 1, 0, 0.419477,-99) , 
4, -2.04708, 0, 0, 0.483745,-99) , 
17, 0.0531339, 0, 0, 0.52739,-99) , 
NN_LL(
0, 
0, 
-1, 1.24055, 1, -1, 0.393911,-99) , 
1, -0.444986, 1, 0, 0.487403,-99)    );
  // itree = 274
  fBoostWeights.push_back(0.214905);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.780026,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.538552, 0, 1, 0.563788,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.601375,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.430616,-99) , 
15, 0.0122881, 0, 0, 0.522138,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.333226,-99) , 
14, 0.77186, 1, 0, 0.46485,-99) , 
15, 0.00695897, 1, 0, 0.521213,-99) , 
19, 0.0181087, 1, 0, 0.549978,-99)    );
  // itree = 275
  fBoostWeights.push_back(0.215814);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.0956278, 0, 1, 0.649837,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.596267,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.440064,-99) , 
15, 0.00515283, 0, 0, 0.522143,-99) , 
14, 0.421818, 1, 0, 0.582133,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.419088,-99) , 
18, 1.99015, 1, 0, 0.550664,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.393579,-99) , 
9, 1.03964, 0, 0, 0.52814,-99)    );
  // itree = 276
  fBoostWeights.push_back(0.250944);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.726279,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.793921, 1, 1, 0.654094,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.436836,-99) , 
7, 0.224516, 1, 0, 0.563749,-99) , 
13, -0.433071, 0, 0, 0.604566,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.463383,-99) , 
4, -1.90172, 1, 0, 0.570476,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.333108,-99) , 
15, 0.0167561, 1, 0, 0.546673,-99)    );
  // itree = 277
  fBoostWeights.push_back(0.239451);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.192209, 0, 1, 0.67612,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.48648,-99) , 
1, -0.915225, 0, 0, 0.609617,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.433029,-99) , 
11, 2932.45, 0, 0, 0.572246,-99) , 
NN_LL(
0, 
0, 
-1, -0.505677, 0, -1, 0.424133,-99) , 
0, -0.487333, 1, 0, 0.528915,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.316104,-99) , 
10, 1.27795, 0, 0, 0.481879,-99)    );
  // itree = 278
  fBoostWeights.push_back(0.248358);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.269658, 1, 1, 0.643511,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.597527,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.416431,-99) , 
17, 0.0334374, 1, 0, 0.514719,-99) , 
5, -0.602001, 0, 0, 0.581703,-99) , 
NN_LL(
0, 
0, 
-1, 0.0105038, 0, -1, 0.369849,-99) , 
13, -0.769878, 0, 0, 0.522175,-99)    );
  // itree = 279
  fBoostWeights.push_back(0.223626);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.747536,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.673199,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.46315,-99) , 
13, -0.569477, 0, 0, 0.569894,-99) , 
1, -0.833106, 1, 0, 0.654297,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.488103,-99) , 
2, 0.467977, 1, 0, 0.609132,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.420365,-99) , 
16, -1.98201, 1, 0, 0.57015,-99) , 
NN_LL(
0, 
0, 
-1, 1.9743, 0, -1, 0.413982,-99) , 
17, 0.0478495, 1, 0, 0.526901,-99)    );
  // itree = 280
  fBoostWeights.push_back(0.296707);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0920176, 1, 1, 0.666991,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.677071,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.629518,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.538391,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.382587,-99) , 
12, 3.56982, 1, 0, 0.445109,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.280476,-99) , 
7, 0.174499, 0, 0, 0.391275,-99) , 
8, 3.04566, 0, 0, 0.442752,-99) , 
6, 2.45561, 0, 0, 0.478324,-99) , 
10, 2.27021, 0, 0, 0.524719,-99)    );
  // itree = 281
  fBoostWeights.push_back(0.301335);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.751602,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.674652,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.4417,-99) , 
14, 0.537032, 1, 0, 0.580853,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.530301,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.299216,-99) , 
6, 1.39947, 1, 0, 0.418009,-99) , 
11, 4361.88, 0, 0, 0.497694,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.290388,-99) , 
1, -1.03877, 0, 0, 0.468312,-99) , 
19, 0.0181087, 1, 0, 0.500059,-99)    );
  // itree = 282
  fBoostWeights.push_back(0.278172);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.772409,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.8339, 1, 1, 0.632613,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.471115,-99) , 
1, -0.545333, 1, 0, 0.583831,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.564642,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.343726,-99) , 
16, -2.08596, 0, 0, 0.459808,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.224399,-99) , 
0, -0.856794, 0, 0, 0.41034,-99) , 
2, 0.111397, 0, 0, 0.499997,-99) , 
19, 0.0186304, 1, 0, 0.525307,-99)    );
  // itree = 283
  fBoostWeights.push_back(0.219198);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 1.96997, 0, 1, 0.604242,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.637703,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.49983,-99) , 
4, -2.04424, 0, 0, 0.575673,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.37807,-99) , 
2, 0.349527, 1, 0, 0.517241,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.319438,-99) , 
8, 2.47089, 1, 0, 0.469595,-99) , 
15, 0.00519896, 1, 0, 0.535909,-99)    );
  // itree = 284
  fBoostWeights.push_back(0.27329);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 3647.5, 1, 1, 0.647116,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.471744,-99) , 
3, -0.570113, 0, 0, 0.594511,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.56028,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.301527,-99) , 
8, 2.8927, 0, 0, 0.418726,-99) , 
0, -0.494625, 1, 0, 0.527206,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.30771,-99) , 
17, 0.00969528, 0, 0, 0.488728,-99)    );
  // itree = 285
  fBoostWeights.push_back(0.289259);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.690937,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.62405,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.537603,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.298714,-99) , 
10, 2.11224, 0, 0, 0.445775,-99) , 
10, 1.68487, 1, 0, 0.521622,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.320213,-99) , 
12, 3.43523, 0, 0, 0.483535,-99) , 
12, 3.19354, 1, 0, 0.533971,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.354776,-99) , 
4, -2.56893, 0, 0, 0.508958,-99)    );
  // itree = 286
  fBoostWeights.push_back(0.264219);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.40162, 1, 1, 0.699983,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.605593,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.584648,-99) , 
NN_LL(
0, 
0, 
-1, 0.0318017, 1, -1, 0.386294,-99) , 
18, 0.920079, 1, 0, 0.435076,-99) , 
6, 1.02326, 1, 0, 0.48441,-99) , 
17, 0.0580262, 0, 0, 0.536953,-99)    );
  // itree = 287
  fBoostWeights.push_back(0.232027);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.616281,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.491075,-99) , 
16, -2.25488, 0, 0, 0.555636,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.519336,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.219121,-99) , 
11, 5312.38, 0, 0, 0.379892,-99) , 
13, -0.68007, 0, 0, 0.486601,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.30131,-99) , 
10, 2.37261, 1, 0, 0.451745,-99)    );
  // itree = 288
  fBoostWeights.push_back(0.244836);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.609343,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.663589,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.450565,-99) , 
0, -0.561479, 0, 0, 0.542804,-99) , 
NN_LL(
0, 
0, 
-1, 4104.31, 0, -1, 0.399578,-99) , 
3, -0.220681, 0, 0, 0.453914,-99) , 
3, -0.607278, 1, 0, 0.489138,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.249404,-99) , 
5, -1.36117, 0, 0, 0.460032,-99)    );
  // itree = 289
  fBoostWeights.push_back(0.236988);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.697392,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.554717,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.392312,-99) , 
17, 0.0337802, 1, 0, 0.490013,-99) , 
13, -0.488244, 0, 0, 0.569384,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.40456,-99) , 
12, 3.96028, 1, 0, 0.517544,-99) , 
NN_LL(
0, 
0, 
-1, 0.103287, 1, -1, 0.379257,-99) , 
18, 1.18334, 0, 0, 0.468378,-99)    );
  // itree = 290
  fBoostWeights.push_back(0.22293);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.695573,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.477805,-99) , 
3, -0.391069, 0, 0, 0.588057,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.39711,-99) , 
19, 0.115851, 1, 0, 0.535254,-99) , 
NN_LL(
0, 
0, 
-1, 1.23958, 0, -1, 0.387615,-99) , 
17, 0.0434919, 1, 0, 0.479855,-99)    );
  // itree = 291
  fBoostWeights.push_back(0.220913);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.00387937, 0, 1, 0.62158,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.611737,-99) , 
NN_LL(
0, 
0, 
-1, 0.215861, 1, -1, 0.401943,-99) , 
18, 1.25205, 0, 0, 0.510358,-99) , 
17, 0.0241897, 1, 0, 0.562266,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.410849,-99) , 
16, -1.88903, 1, 0, 0.535949,-99)    );
  // itree = 292
  fBoostWeights.push_back(0.264446);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.700809, 0, 1, 0.702395,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.643789,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.471518,-99) , 
4, -2.15937, 0, 0, 0.558456,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.376143,-99) , 
10, 2.16706, 1, 0, 0.499348,-99) , 
17, 0.019355, 1, 0, 0.568345,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.516039,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.26693,-99) , 
18, 1.41904, 1, 0, 0.400238,-99) , 
11, 3226.62, 0, 0, 0.52164,-99)    );
  // itree = 293
  fBoostWeights.push_back(0.272593);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.72498,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.702504,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.494675,-99) , 
4, -2.14753, 1, 0, 0.610665,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.562636,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.335327,-99) , 
3, -0.609286, 1, 0, 0.450797,-99) , 
3, -0.427975, 0, 0, 0.534539,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.348842,-99) , 
11, 2446.84, 0, 0, 0.502945,-99) , 
11, 8859.37, 0, 0, 0.529623,-99)    );
  // itree = 294
  fBoostWeights.push_back(0.176943);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 1.55674, 1, 1, 0.597488,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.522675,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.342175,-99) , 
5, -0.906607, 0, 0, 0.449622,-99) , 
16, -2.37593, 1, 0, 0.524502,-99)    );
  // itree = 295
  fBoostWeights.push_back(0.224165);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.648414,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.649866,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.468884,-99) , 
18, 1.33866, 0, 0, 0.57474,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.512568,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.396934,-99) , 
5, -0.457463, 0, 0, 0.442741,-99) , 
9, 1.36044, 1, 0, 0.502423,-99) , 
10, 2.24478, 0, 0, 0.543614,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.325889,-99) , 
13, -0.9203, 0, 0, 0.515969,-99)    );
  // itree = 296
  fBoostWeights.push_back(0.227024);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.657787, 0, 1, 0.619486,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.427933,-99) , 
7, 0.425963, 1, 0, 0.557696,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.357487,-99) , 
7, 0.0644155, 0, 0, 0.509613,-99) , 
NN_LL(
0, 
0, 
-1, 0.0809573, 1, -1, 0.39163,-99) , 
17, 0.0193664, 0, 0, 0.467518,-99)    );
  // itree = 297
  fBoostWeights.push_back(0.204227);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.635391,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.576834,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.415097,-99) , 
3, -0.314764, 1, 0, 0.491282,-99) , 
5, -0.897916, 1, 0, 0.539633,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.502289,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.290135,-99) , 
4, -1.968, 0, 0, 0.398693,-99) , 
19, 0.106565, 1, 0, 0.494092,-99)    );
  // itree = 298
  fBoostWeights.push_back(0.213878);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.25631, 1, 1, 0.611903,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.467306,-99) , 
8, 2.08153, 0, 0, 0.563851,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.3401,-99) , 
19, 0.162512, 1, 0, 0.535378,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.34003,-99) , 
9, 1.67549, 1, 0, 0.504391,-99)    );
  // itree = 299
  fBoostWeights.push_back(0.327914);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.790592,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.656256,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.458998,-99) , 
4, -2.25501, 0, 0, 0.580418,-99) , 
5, -0.830977, 0, 0, 0.657024,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.531013,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.412126,-99) , 
7, 0.0476468, 0, 0, 0.462142,-99) , 
6, 1.69298, 1, 0, 0.587772,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.328989,-99) , 
3, -0.0351741, 1, 0, 0.542284,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.270263,-99) , 
10, 1.17112, 0, 0, 0.493892,-99)    );
  // itree = 300
  fBoostWeights.push_back(0.236597);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 3899.97, 1, 1, 0.625755,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.743267, 0, 1, 0.626443,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.418955,-99) , 
17, 0.038462, 1, 0, 0.557448,-99) , 
NN_LL(
0, 
0, 
-1, -0.013552, 1, -1, 0.387317,-99) , 
18, 1.53166, 1, 0, 0.492738,-99) , 
14, 0.752515, 0, 0, 0.533736,-99)    );
  // itree = 301
  fBoostWeights.push_back(0.259909);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.696115,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.690644,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.543742,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.47704,-99) , 
0, -0.687954, 1, 0, 0.510187,-99) , 
7, 0.321298, 0, 0, 0.572922,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.588321,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.380945,-99) , 
11, 3620.79, 0, 0, 0.484742,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.333908,-99) , 
16, -2.42226, 1, 0, 0.407509,-99) , 
3, -0.483203, 1, 0, 0.479682,-99) , 
0, -0.215397, 0, 0, 0.51233,-99)    );
  // itree = 302
  fBoostWeights.push_back(0.312841);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.738585,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.633673,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.619348,-99) , 
NN_LL(
0, 
0, 
-1, 0.177215, 1, -1, 0.349175,-99) , 
10, 2.29871, 0, 0, 0.439046,-99) , 
11, 5706.74, 0, 0, 0.508861,-99) , 
13, -0.318763, 0, 0, 0.545528,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.35914,-99) , 
10, 1.27444, 0, 0, 0.509991,-99)    );
  // itree = 303
  fBoostWeights.push_back(0.207977);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.69807,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0078029, 0, 1, 0.558104,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.368145,-99) , 
7, 0.335412, 1, 0, 0.517459,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.345451,-99) , 
9, 1.11376, 0, 0, 0.481217,-99) , 
7, 0.61248, 0, 0, 0.504755,-99)    );
  // itree = 304
  fBoostWeights.push_back(0.239923);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.735129,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.603395,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.439729,-99) , 
10, 2.005, 0, 0, 0.538061,-99) , 
19, 0.0428331, 1, 0, 0.582168,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.43446,-99) , 
6, 2.29285, 1, 0, 0.55133,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.3857,-99) , 
2, -0.357827, 0, 0, 0.523613,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.327898,-99) , 
5, -1.31823, 0, 0, 0.497294,-99)    );
  // itree = 305
  fBoostWeights.push_back(0.248435);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.505007, 0, 1, 0.617163,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.445542,-99) , 
17, 0.0241984, 0, 0, 0.556197,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.523792,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.421928,-99) , 
14, 0.402665, 0, 0, 0.476704,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.259638,-99) , 
4, -2.25857, 0, 0, 0.388618,-99) , 
18, 1.20402, 0, 0, 0.487115,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.282565,-99) , 
0, -1.00971, 0, 0, 0.46139,-99)    );
  // itree = 306
  fBoostWeights.push_back(0.249544);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.674372,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.671962,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.432902,-99) , 
13, -0.806452, 1, 0, 0.511747,-99) , 
16, -2.15299, 0, 0, 0.583366,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.566264,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.342362,-99) , 
16, -2.15666, 1, 0, 0.473488,-99) , 
4, -2.25431, 0, 0, 0.544078,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.382819,-99) , 
16, -2.84943, 0, 0, 0.52027,-99)    );
  // itree = 307
  fBoostWeights.push_back(0.241247);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.682424,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.566207,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.569769,-99) , 
NN_LL(
0, 
0, 
-1, 3462.13, 0, -1, 0.379076,-99) , 
1, -0.680015, 1, 0, 0.456679,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.341525,-99) , 
1, -0.878817, 0, 0, 0.421718,-99) , 
8, 2.79461, 0, 0, 0.454518,-99) , 
12, 4.16081, 0, 0, 0.491034,-99)    );
  // itree = 308
  fBoostWeights.push_back(0.194792);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 3.51247, 1, 1, 0.58648,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.655452,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.469584,-99) , 
3, -0.516967, 1, 0, 0.556194,-99) , 
NN_LL(
0, 
0, 
-1, -2.05517, 0, -1, 0.377135,-99) , 
7, 0.192786, 0, 0, 0.465737,-99) , 
13, -0.586562, 0, 0, 0.526309,-99)    );
  // itree = 309
  fBoostWeights.push_back(0.235103);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.690799,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.209889, 0, 1, 0.573924,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.557164,-99) , 
NN_LL(
0, 
0, 
-1, 3.52084, 1, -1, 0.366483,-99) , 
17, 0.062576, 0, 0, 0.410806,-99) , 
0, -0.574916, 0, 0, 0.482543,-99) , 
3, -0.740902, 1, 0, 0.509105,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.335718,-99) , 
18, 0.619024, 0, 0, 0.489718,-99)    );
  // itree = 310
  fBoostWeights.push_back(0.29497);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.669234,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.576513,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.443481,-99) , 
18, 1.32842, 0, 0, 0.510929,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.300346,-99) , 
18, 1.05574, 0, 0, 0.422523,-99) , 
11, 5459.36, 0, 0, 0.515119,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.507899,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.235381,-99) , 
10, 1.71925, 1, 0, 0.358061,-99) , 
18, 1.70714, 1, 0, 0.457343,-99)    );
  // itree = 311
  fBoostWeights.push_back(0.214541);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.617236,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.630627,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.487307,-99) , 
10, 2.15603, 0, 0, 0.538506,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.576439,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.407396,-99) , 
12, 3.54525, 1, 0, 0.500794,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.284304,-99) , 
0, -0.606994, 1, 0, 0.414997,-99) , 
19, 0.0720693, 1, 0, 0.466422,-99) , 
2, -0.207972, 1, 0, 0.501087,-99)    );
  // itree = 312
  fBoostWeights.push_back(0.241865);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 2.07612, 1, 1, 0.584612,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.609559,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.405141,-99) , 
11, 3825.91, 0, 0, 0.493888,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.311126,-99) , 
18, 0.949255, 0, 0, 0.455228,-99) , 
16, -2.35562, 0, 0, 0.505442,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.335889,-99) , 
16, -1.88577, 1, 0, 0.468893,-99)    );
  // itree = 313
  fBoostWeights.push_back(0.287227);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.7033, 0, 1, 0.684174,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.454168,-99) , 
2, 0.397498, 1, 0, 0.607887,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.582244,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.551127,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.430072,-99) , 
17, 0.0291042, 0, 0, 0.489973,-99) , 
NN_LL(
0, 
0, 
-1, -0.756612, 0, -1, 0.223745,-99) , 
1, -0.782781, 1, 0, 0.35809,-99) , 
13, -0.447353, 0, 0, 0.428788,-99) , 
6, 1.2272, 1, 0, 0.490101,-99)    );
  // itree = 314
  fBoostWeights.push_back(0.314184);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.625456,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.377617,-99) , 
15, 0.0119389, 1, 0, 0.54828,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.561232,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.260741,-99) , 
4, -2.2248, 1, 0, 0.388528,-99) , 
15, 0.00520886, 0, 0, 0.470546,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.298941,-99) , 
17, 0.0676963, 1, 0, 0.444853,-99)    );
  // itree = 315
  fBoostWeights.push_back(0.274282);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.105332, 1, 1, 0.64316,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.565382,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.356081,-99) , 
1, -0.930551, 1, 0, 0.448666,-99) , 
9, 1.15208, 0, 0, 0.555877,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.368079,-99) , 
0, -0.350324, 1, 0, 0.516998,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.347384,-99) , 
14, -0.0886394, 0, 0, 0.481038,-99)    );
  // itree = 316
  fBoostWeights.push_back(0.212957);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 1.12242, 0, 1, 0.621679,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.652938,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.627547,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.45118,-99) , 
7, 0.225661, 0, 0, 0.531238,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.402347,-99) , 
12, 3.53257, 0, 0, 0.473152,-99) , 
11, 8861.59, 0, 0, 0.497166,-99) , 
15, 0.0103354, 0, 0, 0.530336,-99)    );
  // itree = 317
  fBoostWeights.push_back(0.250326);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.699039,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.444871,-99) , 
2, 0.310114, 1, 0, 0.593273,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.598934,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.435872,-99) , 
0, -0.495768, 0, 0, 0.511906,-99) , 
NN_LL(
0, 
0, 
-1, 2.23202, 1, -1, 0.339449,-99) , 
5, -0.916311, 0, 0, 0.440431,-99) , 
6, 1.18682, 1, 0, 0.49436,-99)    );
  // itree = 318
  fBoostWeights.push_back(0.209166);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.607858,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.692667,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.45883,-99) , 
1, -0.476003, 1, 0, 0.530786,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.511116,-99) , 
NN_LL(
0, 
0, 
-1, -0.430564, 0, -1, 0.33528,-99) , 
18, 1.76706, 0, 0, 0.391523,-99) , 
1, -0.644325, 0, 0, 0.460375,-99) , 
12, 4.05889, 0, 0, 0.490791,-99)    );
  // itree = 319
  fBoostWeights.push_back(0.224109);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0285918, 1, 1, 0.624034,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.591089,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.410601,-99) , 
3, -0.638886, 1, 0, 0.469255,-99) , 
10, 2.02574, 0, 0, 0.537624,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.359791,-99) , 
19, 0.161634, 1, 0, 0.511303,-99)    );
  // itree = 320
  fBoostWeights.push_back(0.209312);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.678179,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.62332,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.476534,-99) , 
19, 0.0814504, 1, 0, 0.540887,-99) , 
NN_LL(
0, 
0, 
-1, 0.0427965, 1, -1, 0.399508,-99) , 
6, 1.70972, 1, 0, 0.488773,-99) , 
11, 7345.96, 0, 0, 0.521069,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.354858,-99) , 
5, -1.28786, 0, 0, 0.497819,-99)    );
  // itree = 321
  fBoostWeights.push_back(0.204191);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.660766, 0, 1, 0.614609,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.476565,-99) , 
13, -0.404062, 1, 0, 0.572642,-99) , 
NN_LL(
0, 
0, 
-1, 0.287575, 0, -1, 0.360173,-99) , 
5, -1.08089, 0, 0, 0.517216,-99)    );
  // itree = 322
  fBoostWeights.push_back(0.218241);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.672939,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.331146, 0, 1, 0.572932,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.585064,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.38375,-99) , 
3, -0.340863, 0, 0, 0.453288,-99) , 
13, -0.726959, 0, 0, 0.519871,-99) , 
6, 2.4708, 0, 0, 0.54075,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.362395,-99) , 
18, 1.83428, 1, 0, 0.501985,-99)    );
  // itree = 323
  fBoostWeights.push_back(0.246722);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.789808,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.549241,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.450479,-99) , 
7, 0.095011, 1, 0, 0.502007,-99) , 
6, 1.08654, 1, 0, 0.593789,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.575906,-99) , 
NN_LL(
0, 
0, 
-1, -0.389525, 0, -1, 0.384191,-99) , 
14, 0.235319, 1, 0, 0.442922,-99) , 
17, 0.0241833, 1, 0, 0.503178,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.340771,-99) , 
1, -0.985269, 0, 0, 0.474089,-99)    );
  // itree = 324
  fBoostWeights.push_back(0.274266);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.11082, 1, 1, 0.651031,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.545261,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.343263,-99) , 
18, 1.33289, 1, 0, 0.442364,-99) , 
11, 4095.45, 0, 0, 0.582658,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.573415,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.316876,-99) , 
12, 3.43426, 1, 0, 0.437254,-99) , 
10, 2.14238, 1, 0, 0.530991,-99)    );
  // itree = 325
  fBoostWeights.push_back(0.22156);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.353113, 1, 1, 0.611506,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.54095,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.370355,-99) , 
17, 0.0285038, 0, 0, 0.45979,-99) , 
4, -2.34025, 0, 0, 0.548073,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.584056,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.40136,-99) , 
2, 0.311193, 1, 0, 0.498126,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.3369,-99) , 
14, 0.250127, 0, 0, 0.432269,-99) , 
7, 0.128952, 0, 0, 0.495876,-99)    );
  // itree = 326
  fBoostWeights.push_back(0.256998);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.698447, 0, 1, 0.626584,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.537251,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.337664,-99) , 
8, 2.26966, 0, 0, 0.435718,-99) , 
17, 0.0290328, 1, 0, 0.543579,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.545649,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.242443,-99) , 
16, -2.52506, 0, 0, 0.401532,-99) , 
11, 3602.91, 0, 0, 0.496167,-99)    );
  // itree = 327
  fBoostWeights.push_back(0.271377);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.618331,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.635543,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.424181,-99) , 
1, -0.85528, 1, 0, 0.530634,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.518413,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.373685,-99) , 
13, -0.594181, 1, 0, 0.441209,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.254649,-99) , 
13, -0.842778, 0, 0, 0.388894,-99) , 
3, -0.584635, 1, 0, 0.430794,-99) , 
0, -0.2557, 0, 0, 0.456637,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.306788,-99) , 
11, 2551.9, 0, 0, 0.4283,-99)    );
  // itree = 328
  fBoostWeights.push_back(0.283221);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.73933,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.446031,-99) , 
14, 0.623292, 0, 0, 0.597237,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.574269,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.336825,-99) , 
13, -0.844619, 1, 0, 0.446611,-99) , 
5, -0.82784, 0, 0, 0.516692,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.350722,-99) , 
16, -1.87637, 1, 0, 0.481081,-99)    );
  // itree = 329
  fBoostWeights.push_back(0.221533);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.7155,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.492087,-99) , 
7, 0.0216917, 0, 0, 0.619737,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.593115,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.408271,-99) , 
18, 1.3998, 1, 0, 0.504365,-99) , 
7, 0.0963781, 1, 0, 0.552918,-99) , 
NN_LL(
0, 
0, 
-1, -0.603966, 0, -1, 0.387644,-99) , 
12, 3.43762, 0, 0, 0.487571,-99)    );
  // itree = 330
  fBoostWeights.push_back(0.240803);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.719861,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.25389, 0, 1, 0.601112,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.411956,-99) , 
9, 1.24314, 1, 0, 0.510366,-99) , 
NN_LL(
0, 
0, 
-1, -0.306013, 0, -1, 0.369774,-99) , 
4, -2.37445, 0, 0, 0.472634,-99) , 
1, -0.253428, 0, 0, 0.502141,-99)    );
  // itree = 331
  fBoostWeights.push_back(0.237768);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.48635, 0, 1, 0.640151,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.467144,-99) , 
9, 1.17061, 0, 0, 0.59195,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.608842,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.366347,-99) , 
17, 0.0241637, 1, 0, 0.481282,-99) , 
16, -2.23022, 1, 0, 0.545636,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.375479,-99) , 
0, -0.899381, 0, 0, 0.517273,-99)    );
  // itree = 332
  fBoostWeights.push_back(0.261924);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0174212, 0, 1, 0.618128,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.632592,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.436216,-99) , 
17, 0.0674167, 1, 0, 0.53997,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.539624,-99) , 
NN_LL(
0, 
0, 
-1, 3.53558, 0, -1, 0.269142,-99) , 
16, -2.52356, 1, 0, 0.378711,-99) , 
17, 0.0434269, 0, 0, 0.439851,-99) , 
19, 0.053141, 1, 0, 0.500806,-99)    );
  // itree = 333
  fBoostWeights.push_back(0.217915);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.64504,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 3.70543, 0, 1, 0.55451,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.610899,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.434859,-99) , 
10, 2.18239, 1, 0, 0.52186,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.271087,-99) , 
3, -0.460127, 0, 0, 0.415359,-99) , 
19, 0.0814978, 1, 0, 0.487149,-99) , 
17, 0.00969786, 1, 0, 0.513713,-99)    );
  // itree = 334
  fBoostWeights.push_back(0.226239);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 1.38373, 1, 1, 0.58723,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.65585,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.389221,-99) , 
8, 1.77958, 0, 0, 0.534073,-99) , 
NN_LL(
0, 
0, 
-1, 0.390629, 1, -1, 0.375862,-99) , 
8, 2.02883, 1, 0, 0.43258,-99) , 
3, -0.303969, 0, 0, 0.496483,-99)    );
  // itree = 335
  fBoostWeights.push_back(0.241476);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0965571, 1, 1, 0.667908,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.457879,-99) , 
4, -2.36149, 0, 0, 0.56281,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.601836,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.413565,-99) , 
7, 0.0404411, 1, 0, 0.503754,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.306053,-99) , 
16, -2.0913, 1, 0, 0.421543,-99) , 
6, 1.51481, 1, 0, 0.500349,-99)    );
  // itree = 336
  fBoostWeights.push_back(0.318115);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.522016, 1, 1, 0.648317,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.726342,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.545552,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.312253,-99) , 
15, 0.00783543, 0, 0, 0.40231,-99) , 
8, 2.79632, 0, 0, 0.489874,-99) , 
16, -2.18996, 0, 0, 0.552177,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.363146,-99) , 
1, -0.978212, 0, 0, 0.51383,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.330276,-99) , 
12, 3.13062, 0, 0, 0.483213,-99)    );
  // itree = 337
  fBoostWeights.push_back(0.239022);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 3888.26, 1, 1, 0.633495,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.450442,-99) , 
9, 1.0682, 0, 0, 0.581232,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.365329,-99) , 
17, 0.00966508, 0, 0, 0.534723,-99) , 
NN_LL(
0, 
0, 
-1, -0.403399, 1, -1, 0.377763,-99) , 
1, -0.468095, 1, 0, 0.484345,-99)    );
  // itree = 338
  fBoostWeights.push_back(0.23363);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 3.84917, 0, 1, 0.602418,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.541857,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.343306,-99) , 
8, 2.25066, 0, 0, 0.467735,-99) , 
11, 6375.14, 0, 0, 0.512779,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.196936,-99) , 
19, 0.158576, 1, 0, 0.476959,-99)    );
  // itree = 339
  fBoostWeights.push_back(0.319391);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.734615,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.930429, 0, 1, 0.580374,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.543159,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.326315,-99) , 
0, -0.763931, 0, 0, 0.424268,-99) , 
1, -0.797094, 1, 0, 0.503712,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.272774,-99) , 
0, -0.49515, 1, 0, 0.448076,-99) , 
8, 2.93369, 0, 0, 0.486893,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.303035,-99) , 
16, -1.883, 1, 0, 0.447586,-99)    );
  // itree = 340
  fBoostWeights.push_back(0.27211);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.659855,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.656682, 0, 1, 0.586954,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.393008,-99) , 
16, -1.93418, 1, 0, 0.532033,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.247728,-99) , 
5, -1.34297, 0, 0, 0.489124,-99) , 
6, 0.891179, 1, 0, 0.522986,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.320931,-99) , 
3, -0.0144183, 1, 0, 0.494754,-99)    );
  // itree = 341
  fBoostWeights.push_back(0.237478);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.12767, 0, 1, 0.654403,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.636519,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.50376,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.29185,-99) , 
10, 2.02926, 0, 0, 0.419971,-99) , 
7, 0.0963972, 1, 0, 0.494314,-99) , 
11, 5708.99, 0, 0, 0.548283,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.397787,-99) , 
10, 1.2846, 0, 0, 0.519576,-99)    );
  // itree = 342
  fBoostWeights.push_back(0.211776);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.663085,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.489659,-99) , 
10, 1.31929, 0, 0, 0.585493,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.558136,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.366925,-99) , 
5, -1.01713, 0, 0, 0.482266,-99) , 
NN_LL(
0, 
0, 
-1, -2.46735, 1, -1, 0.347124,-99) , 
4, -2.28325, 0, 0, 0.434906,-99) , 
10, 1.77104, 1, 0, 0.494726,-99)    );
  // itree = 343
  fBoostWeights.push_back(0.303986);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.646177,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.431788,-99) , 
8, 1.95896, 1, 0, 0.537879,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.621514,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.459197,-99) , 
2, 0.275059, 0, 0, 0.518283,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.263672,-99) , 
19, 0.0818173, 1, 0, 0.419025,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.178845,-99) , 
0, -0.657137, 0, 0, 0.375137,-99) , 
0, -0.765988, 1, 0, 0.431403,-99)    );
  // itree = 344
  fBoostWeights.push_back(0.266898);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.699132,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.609129,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.436044,-99) , 
17, 0.0290541, 1, 0, 0.5179,-99) , 
6, 0.903635, 1, 0, 0.561147,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.616464,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.394921,-99) , 
2, 0.199836, 1, 0, 0.511936,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.256355,-99) , 
12, 3.64236, 1, 0, 0.407915,-99) , 
19, 0.105452, 1, 0, 0.508994,-99)    );
  // itree = 345
  fBoostWeights.push_back(0.240164);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.637937,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.674618,-99) , 
NN_LL(
0, 
0, 
-1, 0.0090944, 1, -1, 0.438906,-99) , 
11, 7811.64, 0, 0, 0.482774,-99) , 
3, -0.143396, 0, 0, 0.521357,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.202208,-99) , 
4, -2.72482, 0, 0, 0.486946,-99)    );
  // itree = 346
  fBoostWeights.push_back(0.270336);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.716138,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.647881,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.407087,-99) , 
18, 1.07953, 0, 0, 0.53694,-99) , 
11, 5404.72, 0, 0, 0.620824,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.434282,-99) , 
18, 1.82843, 1, 0, 0.574692,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.540809,-99) , 
NN_LL(
0, 
0, 
-1, -0.733587, 0, -1, 0.343936,-99) , 
0, -0.833668, 1, 0, 0.408717,-99) , 
10, 2.06216, 1, 0, 0.507088,-99)    );
  // itree = 347
  fBoostWeights.push_back(0.203965);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.656389,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.476189,-99) , 
3, -0.330982, 1, 0, 0.573669,-99) , 
NN_LL(
0, 
0, 
-1, 0.00780698, 1, -1, 0.425096,-99) , 
18, 1.31328, 0, 0, 0.50011,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.288861,-99) , 
4, -2.61242, 0, 0, 0.474466,-99)    );
  // itree = 348
  fBoostWeights.push_back(0.21548);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.694603, 0, 1, 0.600847,-99) , 
NN_LL(
0, 
0, 
-1, -1.04146, 1, -1, 0.376286,-99) , 
19, 0.124257, 1, 0, 0.549237,-99)    );
  // itree = 349
  fBoostWeights.push_back(0.240466);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0290541, 0, 1, 0.620576,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.532029,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.378092,-99) , 
16, -2.43925, 1, 0, 0.449107,-99) , 
2, 0.272626, 1, 0, 0.5634,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.406409,-99) , 
8, 2.00785, 0, 0, 0.528655,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.320383,-99) , 
0, -0.926575, 0, 0, 0.490597,-99)    );
  // itree = 350
  fBoostWeights.push_back(0.209131);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.59783,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.625767,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.464294,-99) , 
17, 0.024351, 1, 0, 0.536748,-99) , 
NN_LL(
0, 
0, 
-1, 3733.5, 0, -1, 0.405695,-99) , 
18, 1.49844, 0, 0, 0.472791,-99) , 
3, -0.610112, 1, 0, 0.502863,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.303852,-99) , 
5, -1.28966, 0, 0, 0.475263,-99)    );
  // itree = 351
  fBoostWeights.push_back(0.226696);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.721545,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.487577,-99) , 
1, -0.405459, 0, 0, 0.588984,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.547659,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.582579,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.400607,-99) , 
16, -2.26156, 0, 0, 0.490807,-99) , 
NN_LL(
0, 
0, 
-1, 3488.44, 0, -1, 0.324956,-99) , 
3, -0.475379, 1, 0, 0.400721,-99) , 
0, -0.915963, 1, 0, 0.435591,-99) , 
19, 0.0534914, 1, 0, 0.486023,-99)    );
  // itree = 352
  fBoostWeights.push_back(0.229318);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.352565, 1, 1, 0.599749,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.663791,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.496662,-99) , 
18, 1.19093, 0, 0, 0.581884,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.378581,-99) , 
4, -2.46796, 0, 0, 0.518409,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.317634,-99) , 
6, 1.8566, 1, 0, 0.459936,-99) , 
0, -0.530638, 0, 0, 0.516532,-99)    );
  // itree = 353
  fBoostWeights.push_back(0.233731);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.09887, 1, 1, 0.607097,-99) , 
NN_LL(
0, 
0, 
-1, -0.783498, 1, -1, 0.427063,-99) , 
0, -0.717584, 0, 0, 0.539509,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.350185,-99) , 
1, -1.05305, 0, 0, 0.506059,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.341871,-99) , 
9, 1.60841, 1, 0, 0.473561,-99)    );
  // itree = 354
  fBoostWeights.push_back(0.31609);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.783255,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.489516,-99) , 
18, 1.23208, 1, 0, 0.618682,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 3.48431, 0, 1, 0.659049,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.382744,-99) , 
1, -1.09712, 0, 0, 0.568154,-99) , 
NN_LL(
0, 
0, 
-1, 2.16863, 0, -1, 0.334943,-99) , 
1, -0.84635, 1, 0, 0.462068,-99) , 
1, -0.594535, 0, 0, 0.509989,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.314952,-99) , 
1, -0.269406, 1, 0, 0.479262,-99)    );
  // itree = 355
  fBoostWeights.push_back(0.278884);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.763032,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.68462,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.616808,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.440086,-99) , 
14, 0.505007, 0, 0, 0.524845,-99) , 
9, 1.17213, 1, 0, 0.588025,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.544989,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.333097,-99) , 
7, 0.224916, 0, 0, 0.432439,-99) , 
17, 0.0241211, 0, 0, 0.523279,-99) , 
15, 0.0013342, 1, 0, 0.55136,-99)    );
  // itree = 356
  fBoostWeights.push_back(0.217927);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.638519,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.591892,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.439865,-99) , 
6, 1.7699, 0, 0, 0.519516,-99) , 
7, 0.321289, 0, 0, 0.562413,-99) , 
NN_LL(
0, 
0, 
-1, -2.05531, 0, -1, 0.372686,-99) , 
19, 0.105965, 1, 0, 0.507139,-99)    );
  // itree = 357
  fBoostWeights.push_back(0.273815);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0405594, 1, 1, 0.65488,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.675856,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.418792,-99) , 
11, 4469.38, 0, 0, 0.556551,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.503876,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.318314,-99) , 
16, -1.97543, 0, 0, 0.392571,-99) , 
10, 1.9589, 0, 0, 0.480132,-99) , 
8, 2.5481, 0, 0, 0.541853,-99)    );
  // itree = 358
  fBoostWeights.push_back(0.173928);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.687644,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.499672,-99) , 
2, 0.494034, 1, 0, 0.591534,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.673217,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.464128,-99) , 
12, 3.61068, 0, 0, 0.573367,-99) , 
NN_LL(
0, 
0, 
-1, 0.0540485, 1, -1, 0.426472,-99) , 
3, -0.620906, 1, 0, 0.472129,-99) , 
10, 2.30498, 0, 0, 0.502518,-99)    );
  // itree = 359
  fBoostWeights.push_back(0.269319);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.726929,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.666793,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.402616,-99) , 
12, 3.53232, 0, 0, 0.553993,-99) , 
16, -2.66014, 1, 0, 0.610882,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.675462,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.494353,-99) , 
4, -2.20461, 0, 0, 0.588508,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.417404,-99) , 
16, -2.47418, 0, 0, 0.522503,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.356619,-99) , 
9, 1.36015, 1, 0, 0.460926,-99) , 
3, -0.292114, 0, 0, 0.518541,-99)    );
  // itree = 360
  fBoostWeights.push_back(0.281231);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -2.16796, 1, 1, 0.653558,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.683508,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.496844,-99) , 
12, 3.56885, 1, 0, 0.585395,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.407746,-99) , 
4, -2.45138, 0, 0, 0.538689,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.332565,-99) , 
10, 1.52471, 0, 0, 0.486682,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.240913,-99) , 
11, 2474.32, 0, 0, 0.450995,-99) , 
8, 2.80912, 0, 0, 0.504906,-99)    );
  // itree = 361
  fBoostWeights.push_back(0.18391);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.125477, 0, 1, 0.602031,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.556157,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.428413,-99) , 
7, 0.16102, 1, 0, 0.489431,-99) , 
2, 0.199836, 1, 0, 0.552073,-99) , 
NN_LL(
0, 
0, 
-1, -0.755267, 0, -1, 0.394377,-99) , 
17, 0.0144427, 0, 0, 0.508114,-99)    );
  // itree = 362
  fBoostWeights.push_back(0.254281);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.692746,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.619948,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.450629,-99) , 
5, -1.02377, 0, 0, 0.563717,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.396811,-99) , 
3, -0.312494, 1, 0, 0.508913,-99) , 
NN_LL(
0, 
0, 
-1, 1.46837, 0, -1, 0.356319,-99) , 
16, -2.53161, 0, 0, 0.463807,-99) , 
7, 0.578327, 0, 0, 0.499165,-99)    );
  // itree = 363
  fBoostWeights.push_back(0.240495);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.825667, 0, 1, 0.67219,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.469476,-99) , 
2, 0.477458, 1, 0, 0.630725,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.563818,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.515198,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.358152,-99) , 
3, -0.567642, 1, 0, 0.415322,-99) , 
17, 0.0193675, 1, 0, 0.467133,-99) , 
6, 1.50547, 1, 0, 0.560299,-99)    );
  // itree = 364
  fBoostWeights.push_back(0.286829);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.381968, 0, 1, 0.65739,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.32093, 1, 1, 0.664571,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.435232,-99) , 
18, 1.24136, 1, 0, 0.554904,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.331869,-99) , 
2, -0.0520166, 0, 0, 0.489034,-99) , 
19, 0.0546432, 1, 0, 0.539509,-99)    );
  // itree = 365
  fBoostWeights.push_back(0.270535);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.901018, 0, 1, 0.721392,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.469497,-99) , 
12, 3.44973, 0, 0, 0.639068,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.569921,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.56766,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.394064,-99) , 
8, 2.6098, 1, 0, 0.471123,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.237767,-99) , 
17, 0.0432975, 1, 0, 0.392303,-99) , 
18, 1.50362, 0, 0, 0.462357,-99) , 
0, -0.751725, 1, 0, 0.52602,-99)    );
  // itree = 366
  fBoostWeights.push_back(0.240326);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.782273, 0, 1, 0.634853,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.653218,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.595435,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.421046,-99) , 
5, -0.900545, 1, 0, 0.510188,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.320522,-99) , 
15, 0.0129576, 1, 0, 0.476621,-99) , 
7, 0.578336, 0, 0, 0.506126,-99) , 
18, 1.80194, 0, 0, 0.539556,-99)    );
  // itree = 367
  fBoostWeights.push_back(0.244781);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0282512, 1, 1, 0.61945,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.589351,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.407918,-99) , 
15, 0.00917084, 1, 0, 0.528936,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.536591,-99) , 
NN_LL(
0, 
0, 
-1, 2.31293, 1, -1, 0.284146,-99) , 
5, -0.695542, 0, 0, 0.38622,-99) , 
4, -2.04991, 0, 0, 0.44851,-99) , 
10, 2.31816, 0, 0, 0.491682,-99)    );
  // itree = 368
  fBoostWeights.push_back(0.265524);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.754984,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.608042,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.478007,-99) , 
2, 0.208617, 0, 0, 0.548014,-99) , 
8, 2.55526, 0, 0, 0.612135,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.459087,-99) , 
18, 0.936861, 0, 0, 0.56197,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.586486,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.30773,-99) , 
15, 0.00262145, 1, 0, 0.425326,-99) , 
12, 3.66361, 1, 0, 0.507923,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.28397,-99) , 
1, -1.05862, 0, 0, 0.480656,-99)    );
  // itree = 369
  fBoostWeights.push_back(0.194797);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 5206.54, 0, 1, 0.658881,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.447071,-99) , 
17, 0.0331614, 1, 0, 0.571012,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.568399,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.508341,-99) , 
NN_LL(
0, 
0, 
-1, 0.0335286, 1, -1, 0.349958,-99) , 
10, 1.89877, 1, 0, 0.421644,-99) , 
0, -0.842716, 1, 0, 0.462999,-99) , 
7, 0.225423, 0, 0, 0.511391,-99)    );
  // itree = 370
  fBoostWeights.push_back(0.25409);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 2.21023, 1, 1, 0.707918,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.476646,-99) , 
3, -0.137757, 1, 0, 0.626218,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.546975,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.315843,-99) , 
11, 5404.72, 0, 0, 0.450442,-99) , 
2, 0.14309, 0, 0, 0.545346,-99) , 
NN_LL(
0, 
0, 
-1, -0.326986, 0, -1, 0.377005,-99) , 
1, -0.51319, 1, 0, 0.491622,-99)    );
  // itree = 371
  fBoostWeights.push_back(0.235513);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0701938, 1, 1, 0.601452,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.689053,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.448919,-99) , 
1, -0.476281, 1, 0, 0.572566,-99) , 
NN_LL(
0, 
0, 
-1, -0.430564, 1, -1, 0.367686,-99) , 
1, -0.755848, 0, 0, 0.487972,-99) , 
7, 0.257624, 0, 0, 0.536799,-99)    );
  // itree = 372
  fBoostWeights.push_back(0.246978);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.661479,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.635899,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.447308,-99) , 
10, 1.95912, 0, 0, 0.56813,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.530686,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.352609,-99) , 
17, 0.0289014, 0, 0, 0.451889,-99) , 
0, -0.751742, 1, 0, 0.499234,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.272097,-99) , 
7, 0.0385518, 0, 0, 0.458818,-99) , 
6, 2.79252, 0, 0, 0.480644,-99)    );
  // itree = 373
  fBoostWeights.push_back(0.26787);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.697274,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.539433,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.398547,-99) , 
17, 0.0173847, 1, 0, 0.471602,-99) , 
15, 0.00652768, 1, 0, 0.60328,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.396451,-99) , 
5, -0.465438, 1, 0, 0.558171,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.525875,-99) , 
NN_LL(
0, 
0, 
-1, -0.68575, 1, -1, 0.325993,-99) , 
16, -2.58612, 1, 0, 0.395835,-99) , 
17, 0.0385796, 1, 0, 0.503674,-99)    );
  // itree = 374
  fBoostWeights.push_back(0.204953);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.61594,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.525823,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.327031,-99) , 
19, 0.119349, 1, 0, 0.441446,-99) , 
4, -1.94782, 0, 0, 0.519415,-99) , 
NN_LL(
0, 
0, 
-1, -2.25724, 1, -1, 0.398161,-99) , 
15, 0.00390861, 0, 0, 0.476331,-99)    );
  // itree = 375
  fBoostWeights.push_back(0.230551);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 3473.37, 0, 1, 0.6464,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.482151,-99) , 
12, 3.51881, 1, 0, 0.562397,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.590599,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.369346,-99) , 
3, -0.561248, 0, 0, 0.508721,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.307388,-99) , 
13, -0.766552, 1, 0, 0.425723,-99) , 
1, -0.639116, 0, 0, 0.488959,-99)    );
  // itree = 376
  fBoostWeights.push_back(0.206333);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.738766,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.498647,-99) , 
15, 0.0117513, 0, 0, 0.592225,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.619255,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.447809,-99) , 
18, 1.4357, 0, 0, 0.51787,-99) , 
NN_LL(
0, 
0, 
-1, 3788.96, 1, -1, 0.365795,-99) , 
1, -0.58652, 0, 0, 0.444626,-99) , 
8, 2.05012, 1, 0, 0.495838,-99)    );
  // itree = 377
  fBoostWeights.push_back(0.22572);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 3.63676, 0, 1, 0.645646,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.402673,-99) , 
19, 0.125914, 1, 0, 0.58194,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.450373,-99) , 
18, 1.80117, 1, 0, 0.540241,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.361511,-99) , 
18, 0.616651, 0, 0, 0.515487,-99)    );
  // itree = 378
  fBoostWeights.push_back(0.235938);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.690878,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.28345, 0, 1, 0.616911,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.420819,-99) , 
11, 2938.69, 0, 0, 0.543714,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.509653,-99) , 
NN_LL(
0, 
0, 
-1, 3.58325, 1, -1, 0.308693,-99) , 
10, 1.68985, 1, 0, 0.410502,-99) , 
3, -0.383882, 0, 0, 0.47533,-99) , 
12, 4.07977, 0, 0, 0.510879,-99)    );
  // itree = 379
  fBoostWeights.push_back(0.304735);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.634947,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.663229,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.412063,-99) , 
16, -2.41471, 1, 0, 0.545569,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.389104,-99) , 
11, 3124.58, 0, 0, 0.481281,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.575385,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.374595,-99) , 
2, 0.264061, 0, 0, 0.469352,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.207281,-99) , 
8, 2.16381, 1, 0, 0.362603,-99) , 
1, -0.699414, 0, 0, 0.421301,-99) , 
11, 7807.66, 0, 0, 0.458952,-99)    );
  // itree = 380
  fBoostWeights.push_back(0.306803);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.571901, 0, 1, 0.643241,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.630902,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.384452,-99) , 
10, 2.21739, 1, 0, 0.512034,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.341588,-99) , 
14, 0.401294, 0, 0, 0.453111,-99) , 
5, -0.850637, 0, 0, 0.544402,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.302325,-99) , 
6, 2.32943, 1, 0, 0.504992,-99)    );
  // itree = 381
  fBoostWeights.push_back(0.250709);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.425367, 1, 1, 0.665413,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.608511,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.538225,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.34933,-99) , 
10, 1.86152, 0, 0, 0.468639,-99) , 
5, -1.22147, 1, 0, 0.508403,-99) , 
19, 0.0537929, 1, 0, 0.563055,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.315655,-99) , 
4, -2.70977, 0, 0, 0.534781,-99)    );
  // itree = 382
  fBoostWeights.push_back(0.290204);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0750298, 0, 1, 0.670594,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.658418,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.420471,-99) , 
17, 0.0242263, 1, 0, 0.555301,-99) , 
14, 0.333433, 1, 0, 0.615102,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.385863,-99) , 
10, 2.25698, 1, 0, 0.547998,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.533772,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.254631,-99) , 
14, 0.479912, 0, 0, 0.379182,-99) , 
17, 0.0578789, 1, 0, 0.509673,-99)    );
  // itree = 383
  fBoostWeights.push_back(0.247059);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 2.35679, 0, 1, 0.653403,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.639458,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.579432,-99) , 
NN_LL(
0, 
0, 
-1, 3999.87, 0, -1, 0.38391,-99) , 
11, 7045.28, 0, 0, 0.450646,-99) , 
12, 3.09353, 1, 0, 0.488141,-99) , 
3, -0.153171, 0, 0, 0.528288,-99)    );
  // itree = 384
  fBoostWeights.push_back(0.2171);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.20331, 1, 1, 0.600049,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.426823,-99) , 
0, -0.763401, 0, 0, 0.528761,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.546543,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.358838,-99) , 
15, 0.00899137, 0, 0, 0.410911,-99) , 
7, 0.128952, 0, 0, 0.471945,-99) , 
NN_LL(
0, 
0, 
-1, 0.569651, 1, -1, 0.374617,-99) , 
18, 0.828907, 0, 0, 0.449999,-99)    );
  // itree = 385
  fBoostWeights.push_back(0.202199);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.600051,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.477294,-99) , 
0, -0.385764, 1, 0, 0.555709,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.425378,-99) , 
12, 3.44171, 0, 0, 0.513002,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.552669,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.386205,-99) , 
5, -1.09733, 1, 0, 0.450089,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.291732,-99) , 
6, 1.85837, 1, 0, 0.398927,-99) , 
19, 0.0711828, 1, 0, 0.457902,-99)    );
  // itree = 386
  fBoostWeights.push_back(0.22444);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.745061,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.443319,-99) , 
17, 0.024284, 0, 0, 0.611096,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.634308,-99) , 
NN_LL(
0, 
0, 
-1, 0.00521126, 1, -1, 0.415463,-99) , 
6, 2.46392, 0, 0, 0.445972,-99) , 
18, 1.72289, 0, 0, 0.490581,-99)    );
  // itree = 387
  fBoostWeights.push_back(0.237131);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.651233,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.552748,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.364041,-99) , 
19, 0.0814836, 1, 0, 0.483361,-99) , 
4, -1.94698, 0, 0, 0.532703,-99) , 
NN_LL(
0, 
0, 
-1, -2.15538, 0, -1, 0.35958,-99) , 
17, 0.0386443, 1, 0, 0.471638,-99)    );
  // itree = 388
  fBoostWeights.push_back(0.236767);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.722372,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.594125,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.41869,-99) , 
15, 0.00396858, 0, 0, 0.509557,-99) , 
15, 0.00155987, 1, 0, 0.559398,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.513996,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.282699,-99) , 
4, -1.96615, 0, 0, 0.403757,-99) , 
15, 0.00654136, 1, 0, 0.500873,-99)    );
  // itree = 389
  fBoostWeights.push_back(0.236342);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.517321, 0, 1, 0.583845,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.512167,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.2319,-99) , 
4, -2.03614, 0, 0, 0.403927,-99) , 
15, 0.00647799, 1, 0, 0.521062,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.186638,-99) , 
9, 0.969705, 0, 0, 0.486569,-99)    );
  // itree = 390
  fBoostWeights.push_back(0.245458);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.688753,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.447286,-99) , 
9, 1.37703, 1, 0, 0.595962,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.568146,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.436378,-99) , 
3, -0.284356, 1, 0, 0.515829,-99) , 
NN_LL(
0, 
0, 
-1, -0.854751, 1, -1, 0.33816,-99) , 
13, -0.676839, 0, 0, 0.431738,-99) , 
12, 3.8384, 0, 0, 0.489554,-99)    );
  // itree = 391
  fBoostWeights.push_back(0.219495);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.637827,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.557977,-99) , 
NN_LL(
0, 
0, 
-1, 3.4564, 0, -1, 0.403386,-99) , 
3, -0.630717, 1, 0, 0.46229,-99) , 
18, 1.23041, 0, 0, 0.525801,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.501335,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.287608,-99) , 
15, 0.00384615, 1, 0, 0.384592,-99) , 
18, 1.51802, 1, 0, 0.468414,-99)    );
  // itree = 392
  fBoostWeights.push_back(0.274473);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.674636,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.61916,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.420702,-99) , 
7, 0.210715, 0, 0, 0.511603,-99) , 
19, 0.109577, 1, 0, 0.599275,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.382937,-99) , 
4, -2.60523, 0, 0, 0.557697,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.54447,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.314513,-99) , 
14, 0.587932, 0, 0, 0.400711,-99) , 
5, -0.683454, 1, 0, 0.492492,-99)    );
  // itree = 393
  fBoostWeights.push_back(0.277513);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 5078.87, 0, 1, 0.642309,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.567623,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.356794,-99) , 
18, 0.875801, 0, 0, 0.502573,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.293671,-99) , 
4, -2.47793, 0, 0, 0.454319,-99) , 
13, -0.698569, 0, 0, 0.540456,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.335245,-99) , 
10, 1.29444, 0, 0, 0.503914,-99)    );
  // itree = 394
  fBoostWeights.push_back(0.20324);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.623862,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.456178,-99) , 
0, -0.42781, 0, 0, 0.540098,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.523165,-99) , 
NN_LL(
0, 
0, 
-1, -0.372525, 0, -1, 0.304901,-99) , 
8, 1.98486, 1, 0, 0.401343,-99) , 
13, -0.659713, 0, 0, 0.475682,-99)    );
  // itree = 395
  fBoostWeights.push_back(0.229759);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.605928, 1, 1, 0.651942,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.460631,-99) , 
16, -2.24057, 1, 0, 0.562608,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.596859,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.44655,-99) , 
3, -0.42987, 0, 0, 0.526286,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.367286,-99) , 
6, 1.71808, 1, 0, 0.462574,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.26815,-99) , 
16, -2.77055, 0, 0, 0.421188,-99) , 
19, 0.0712456, 1, 0, 0.494087,-99)    );
  // itree = 396
  fBoostWeights.push_back(0.271806);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.25266, 1, 1, 0.641588,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.615017,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.443967,-99) , 
2, 0.204826, 0, 0, 0.52607,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.336662,-99) , 
4, -2.24116, 0, 0, 0.443371,-99) , 
11, 5313.1, 0, 0, 0.527667,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.352911,-99) , 
18, 1.83195, 1, 0, 0.488709,-99)    );
  // itree = 397
  fBoostWeights.push_back(0.232936);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 1.7851, 1, 1, 0.568563,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.612689,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.555257,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.285879,-99) , 
2, 0.0105626, 1, 0, 0.43538,-99) , 
14, 0.722941, 0, 0, 0.480176,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.328533,-99) , 
9, 1.17337, 0, 0, 0.441975,-99) , 
15, 0.00904203, 0, 0, 0.481099,-99)    );
  // itree = 398
  fBoostWeights.push_back(0.209827);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.31784, 0, 1, 0.596664,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.574754,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.444624,-99) , 
4, -2.21808, 1, 0, 0.488901,-99) , 
13, -0.594207, 1, 0, 0.531603,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.388224,-99) , 
3, -0.629494, 0, 0, 0.497182,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.282156,-99) , 
13, -0.912738, 0, 0, 0.46653,-99)    );
  // itree = 399
  fBoostWeights.push_back(0.216575);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.680571,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.626309,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.552293,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.4236,-99) , 
7, 0.322365, 1, 0, 0.505993,-99) , 
3, -0.434062, 1, 0, 0.55552,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.555224,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.43974,-99) , 
8, 1.98101, 1, 0, 0.499336,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.32782,-99) , 
3, -0.335619, 1, 0, 0.433588,-99) , 
15, 0.00645749, 1, 0, 0.507706,-99) , 
18, 0.619723, 1, 0, 0.534211,-99)    );
  // itree = 400
  fBoostWeights.push_back(0.204442);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.625223,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.462334,-99) , 
14, 0.768651, 1, 0, 0.558322,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.421364,-99) , 
10, 1.76989, 0, 0, 0.500549,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.327786,-99) , 
19, 0.143721, 1, 0, 0.468854,-99)    );
  // itree = 401
  fBoostWeights.push_back(0.300613);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.704165,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.658558,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.435406,-99) , 
12, 3.66846, 0, 0, 0.533841,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.595375,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.458871,-99) , 
0, -0.737913, 0, 0, 0.527189,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.32661,-99) , 
12, 3.67006, 1, 0, 0.434569,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.266968,-99) , 
8, 2.41946, 1, 0, 0.385338,-99) , 
19, 0.0542801, 1, 0, 0.438283,-99) , 
12, 3.04509, 1, 0, 0.480518,-99)    );
  // itree = 402
  fBoostWeights.push_back(0.292088);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.704405,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.631536,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.410531,-99) , 
17, 0.0290541, 1, 0, 0.514935,-99) , 
7, 0.451304, 0, 0, 0.556838,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.623319,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.38259,-99) , 
17, 0.0241343, 0, 0, 0.504343,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.26665,-99) , 
0, -0.697816, 1, 0, 0.429271,-99) , 
13, -0.659713, 0, 0, 0.498968,-99)    );
  // itree = 403
  fBoostWeights.push_back(0.23705);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.614061,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.620861,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.538728,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.393032,-99) , 
17, 0.0241984, 0, 0, 0.466626,-99) , 
0, -0.542307, 0, 0, 0.526789,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.352248,-99) , 
9, 1.71111, 1, 0, 0.492995,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.311814,-99) , 
19, 0.143721, 1, 0, 0.462583,-99) , 
14, 0.975714, 0, 0, 0.482499,-99)    );
  // itree = 404
  fBoostWeights.push_back(0.239053);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0337832, 0, 1, 0.682736,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.449972,-99) , 
12, 3.73567, 1, 0, 0.573869,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.720516, 0, 1, 0.578512,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.387125,-99) , 
1, -0.550351, 1, 0, 0.484793,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.332578,-99) , 
1, -0.90421, 0, 0, 0.443436,-99) , 
14, 0.337256, 1, 0, 0.497416,-99)    );
  // itree = 405
  fBoostWeights.push_back(0.235139);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.671802,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.62018,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.424498,-99) , 
19, 0.0541615, 0, 0, 0.528836,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.528412,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.371173,-99) , 
10, 2.03786, 1, 0, 0.462454,-99) , 
NN_LL(
0, 
0, 
-1, -0.458605, 0, -1, 0.325466,-99) , 
7, 0.128499, 0, 0, 0.409648,-99) , 
12, 3.84409, 0, 0, 0.451877,-99) , 
10, 2.41461, 0, 0, 0.481666,-99)    );
  // itree = 406
  fBoostWeights.push_back(0.189701);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.193425, 0, 1, 0.619338,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.580792,-99) , 
NN_LL(
0, 
0, 
-1, 0.135406, 0, -1, 0.43126,-99) , 
1, -0.579581, 0, 0, 0.499366,-99) , 
11, 5398.38, 0, 0, 0.543142,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.387801,-99) , 
5, -1.28564, 0, 0, 0.521189,-99)    );
  // itree = 407
  fBoostWeights.push_back(0.248141);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.40369, 1, 1, 0.579331,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.390832,-99) , 
1, -0.289479, 1, 0, 0.52039,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.579683,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.427985,-99) , 
8, 1.91038, 1, 0, 0.487555,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.167649,-99) , 
12, 3.32403, 0, 0, 0.382255,-99) , 
13, -0.627017, 0, 0, 0.456393,-99)    );
  // itree = 408
  fBoostWeights.push_back(0.269663);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.710988,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.601618,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.366341,-99) , 
2, 0.0340938, 0, 0, 0.527741,-99) , 
15, 0.00662055, 1, 0, 0.596268,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.412653,-99) , 
4, -2.4514, 0, 0, 0.556464,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.392258,-99) , 
0, -0.361191, 1, 0, 0.520036,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.355331,-99) , 
10, 1.18044, 0, 0, 0.495112,-99)    );
  // itree = 409
  fBoostWeights.push_back(0.22256);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.181373, 1, 1, 0.655722,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.482825,-99) , 
18, 1.6036, 1, 0, 0.592128,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.628139,-99) , 
NN_LL(
0, 
0, 
-1, 0.59878, 0, -1, 0.393358,-99) , 
11, 5104.54, 0, 0, 0.47148,-99) , 
16, -2.33085, 0, 0, 0.529131,-99)    );
  // itree = 410
  fBoostWeights.push_back(0.226968);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0193061, 1, 1, 0.619836,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.580074,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.420483,-99) , 
3, -0.461548, 1, 0, 0.505742,-99) , 
10, 1.94276, 0, 0, 0.565114,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.343893,-99) , 
19, 0.141953, 1, 0, 0.521506,-99)    );
  // itree = 411
  fBoostWeights.push_back(0.270945);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.659231,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.526122,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.448929,-99) , 
17, 0.038568, 1, 0, 0.487683,-99) , 
7, 0.224791, 0, 0, 0.563262,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.642575,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.41747,-99) , 
15, 0.00773553, 1, 0, 0.535859,-99) , 
NN_LL(
0, 
0, 
-1, 1.29666, 1, -1, 0.319547,-99) , 
17, 0.0240407, 1, 0, 0.398196,-99) , 
14, 0.31936, 1, 0, 0.459708,-99)    );
  // itree = 412
  fBoostWeights.push_back(0.2466);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.727366,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 1.37037, 1, 1, 0.622,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.542765,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.362151,-99) , 
10, 2.07497, 1, 0, 0.452361,-99) , 
18, 1.32149, 0, 0, 0.54825,-99) , 
11, 2366.29, 1, 0, 0.58251,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.433046,-99) , 
4, -1.84088, 1, 0, 0.547211,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.339288,-99) , 
0, -0.967255, 0, 0, 0.52418,-99)    );
  // itree = 413
  fBoostWeights.push_back(0.195895);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.588473,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.573913,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.536876,-99) , 
NN_LL(
0, 
0, 
-1, 4969.08, 0, -1, 0.393303,-99) , 
16, -2.55472, 1, 0, 0.458284,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.324981,-99) , 
3, -0.51322, 0, 0, 0.420147,-99) , 
18, 0.629002, 1, 0, 0.446528,-99) , 
2, -0.314352, 1, 0, 0.472692,-99)    );
  // itree = 414
  fBoostWeights.push_back(0.259157);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.643251,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.661296,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.584412,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.404934,-99) , 
11, 3021.83, 1, 0, 0.474676,-99) , 
1, -0.824038, 1, 0, 0.533108,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.364676,-99) , 
8, 1.8456, 0, 0, 0.497561,-99) , 
9, 1.57657, 0, 0, 0.527838,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.356478,-99) , 
3, -0.720695, 0, 0, 0.496455,-99)    );
  // itree = 415
  fBoostWeights.push_back(0.17729);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.679239, 1, 1, 0.583791,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.538604,-99) , 
NN_LL(
0, 
0, 
-1, 0.22374, 1, -1, 0.408109,-99) , 
19, 0.0874886, 1, 0, 0.473459,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.293233,-99) , 
17, 0.0628675, 1, 0, 0.442707,-99) , 
7, 0.417597, 0, 0, 0.484052,-99)    );
  // itree = 416
  fBoostWeights.push_back(0.25264);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.451947, 1, 1, 0.620446,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.43304,-99) , 
6, 1.95844, 1, 0, 0.578136,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.620245,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.380231,-99) , 
16, -2.29812, 0, 0, 0.518368,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.316035,-99) , 
17, 0.0242017, 0, 0, 0.437807,-99) , 
2, 0.0526885, 0, 0, 0.520192,-99)    );
  // itree = 417
  fBoostWeights.push_back(0.256337);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.648856,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.642111,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.453573,-99) , 
17, 0.0287344, 1, 0, 0.55242,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.323747,-99) , 
0, -0.946339, 0, 0, 0.483182,-99) , 
5, -0.651545, 0, 0, 0.538906,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.501858,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.283146,-99) , 
12, 3.28111, 1, 0, 0.384825,-99) , 
11, 3605.45, 0, 0, 0.483833,-99)    );
  // itree = 418
  fBoostWeights.push_back(0.230222);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.61096,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.559892,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.532863,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.360172,-99) , 
13, -0.706265, 1, 0, 0.452632,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.252636,-99) , 
2, -0.0529269, 0, 0, 0.39052,-99) , 
18, 1.69577, 0, 0, 0.436484,-99) , 
12, 3.99658, 0, 0, 0.473456,-99)    );
  // itree = 419
  fBoostWeights.push_back(0.223649);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.670442,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.47158,-99) , 
2, -0.359151, 0, 0, 0.588112,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.564865,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.534804,-99) , 
NN_LL(
0, 
0, 
-1, -0.782512, 1, -1, 0.390272,-99) , 
8, 2.4229, 0, 0, 0.438699,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.290819,-99) , 
17, 0.0231177, 0, 0, 0.397511,-99) , 
17, 0.0096195, 1, 0, 0.428888,-99) , 
10, 1.65325, 1, 0, 0.484692,-99)    );
  // itree = 420
  fBoostWeights.push_back(0.181271);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.19027, 0, 1, 0.593548,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.421309,-99) , 
2, 0.400163, 1, 0, 0.549163,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.510643,-99) , 
NN_LL(
0, 
0, 
-1, -0.912983, 1, -1, 0.329237,-99) , 
4, -1.96695, 0, 0, 0.4212,-99) , 
19, 0.0707085, 1, 0, 0.486109,-99)    );
  // itree = 421
  fBoostWeights.push_back(0.234872);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.68802, 0, 1, 0.575397,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.298617,-99) , 
9, 1.65179, 1, 0, 0.513085,-99) , 
NN_LL(
0, 
0, 
-1, 4968.42, 0, -1, 0.365933,-99) , 
4, -2.25961, 0, 0, 0.456942,-99)    );
  // itree = 422
  fBoostWeights.push_back(0.22603);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.474863, 0, 1, 0.571377,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.560668,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.375197,-99) , 
7, 0.192786, 0, 0, 0.480099,-99) , 
NN_LL(
0, 
0, 
-1, 0.00799191, 0, -1, 0.336077,-99) , 
1, -0.838717, 1, 0, 0.395589,-99) , 
8, 2.5481, 0, 0, 0.457553,-99)    );
  // itree = 423
  fBoostWeights.push_back(0.315885);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.720053,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.407573,-99) , 
19, 0.130004, 1, 0, 0.605695,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.640989,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.424604,-99) , 
9, 1.32444, 1, 0, 0.530673,-99) , 
NN_LL(
0, 
0, 
-1, 0.535963, 1, -1, 0.312438,-99) , 
11, 4657, 0, 0, 0.430357,-99) , 
10, 2.27021, 0, 0, 0.482095,-99)    );
  // itree = 424
  fBoostWeights.push_back(0.239656);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.697349, 1, 1, 0.701343,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.470952,-99) , 
6, 1.71987, 1, 0, 0.600482,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.393833,-99) , 
13, -0.869926, 0, 0, 0.563075,-99) , 
NN_LL(
0, 
0, 
-1, 2.17843, 0, -1, 0.39158,-99) , 
16, -2.53161, 0, 0, 0.504499,-99)    );
  // itree = 425
  fBoostWeights.push_back(0.289306);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.78309, 0, 1, 0.644658,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.552088,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.333118,-99) , 
16, -2.36533, 1, 0, 0.436425,-99) , 
18, 1.15594, 0, 0, 0.56921,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.64455,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.367428,-99) , 
17, 0.0052837, 0, 0, 0.502594,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.331755,-99) , 
17, 0.0109174, 1, 0, 0.429274,-99) , 
17, 0.0241807, 0, 0, 0.510082,-99)    );
  // itree = 426
  fBoostWeights.push_back(0.24209);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.650672,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.417825,-99) , 
4, -2.26464, 0, 0, 0.541565,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.403255,-99) , 
2, -0.124475, 0, 0, 0.497784,-99) , 
NN_LL(
0, 
0, 
-1, -0.730711, 1, -1, 0.35905,-99) , 
19, 0.122423, 1, 0, 0.464296,-99)    );
  // itree = 427
  fBoostWeights.push_back(0.196241);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.420137, 0, 1, 0.588419,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.655437,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.528049,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.304488,-99) , 
8, 1.88886, 1, 0, 0.435972,-99) , 
9, 1.11446, 0, 0, 0.504332,-99) , 
NN_LL(
0, 
0, 
-1, 0.0958998, 0, -1, 0.416265,-99) , 
9, 1.21556, 1, 0, 0.460049,-99) , 
19, 0.0363715, 1, 0, 0.489387,-99)    );
  // itree = 428
  fBoostWeights.push_back(0.234705);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.610669,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.578064,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.543819,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.53139,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.343308,-99) , 
0, -0.840654, 1, 0, 0.398173,-99) , 
9, 1.52703, 0, 0, 0.432489,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.260989,-99) , 
6, 1.84542, 1, 0, 0.403629,-99) , 
7, 0.0322469, 1, 0, 0.437877,-99) , 
10, 2.43987, 0, 0, 0.460564,-99)    );
  // itree = 429
  fBoostWeights.push_back(0.256801);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.654938,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 4112.07, 1, 1, 0.580813,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.419331,-99) , 
9, 1.4217, 1, 0, 0.519949,-99) , 
NN_LL(
0, 
0, 
-1, 2.17896, 1, -1, 0.359974,-99) , 
8, 2.06406, 0, 0, 0.470128,-99) , 
2, -0.151045, 1, 0, 0.501835,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.287454,-99) , 
10, 1.17666, 0, 0, 0.466974,-99)    );
  // itree = 430
  fBoostWeights.push_back(0.312209);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.729454,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.631843,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.419157,-99) , 
12, 3.52852, 0, 0, 0.540253,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.344183,-99) , 
19, 0.0847632, 1, 0, 0.486094,-99) , 
15, 0.0141961, 0, 0, 0.531313,-99) , 
NN_LL(
0, 
0, 
-1, -2.55238, 0, -1, 0.319162,-99) , 
10, 2.27021, 1, 0, 0.482743,-99)    );
  // itree = 431
  fBoostWeights.push_back(0.21371);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.133677, 0, 1, 0.626931,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.677244,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.467593,-99) , 
10, 2.1841, 0, 0, 0.585837,-99) , 
NN_LL(
0, 
0, 
-1, 1.62722, 1, -1, 0.421083,-99) , 
11, 4424.27, 1, 0, 0.504224,-99) , 
3, -0.587489, 1, 0, 0.539048,-99)    );
  // itree = 432
  fBoostWeights.push_back(0.25921);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.655041,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.666801,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.501978,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.417207,-99) , 
7, 0.420622, 0, 0, 0.454709,-99) , 
14, 0.401294, 1, 0, 0.525704,-99) , 
7, 0.149007, 1, 0, 0.574695,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.352106,-99) , 
5, -1.29943, 0, 0, 0.538139,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.325339,-99) , 
6, 2.31284, 1, 0, 0.507122,-99)    );
  // itree = 433
  fBoostWeights.push_back(0.239883);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.728791,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.6428,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.605423,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.510178,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.358775,-99) , 
14, 0.456706, 0, 0, 0.440298,-99) , 
8, 2.16626, 1, 0, 0.506828,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.387887,-99) , 
16, -2.67853, 0, 0, 0.472501,-99) , 
11, 7809.45, 0, 0, 0.501711,-99) , 
8, 3.1854, 0, 0, 0.531062,-99)    );
  // itree = 434
  fBoostWeights.push_back(0.211027);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 2.51258, 0, 1, 0.580658,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.363709,-99) , 
19, 0.162017, 1, 0, 0.548317,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.40473,-99) , 
8, 3.06239, 1, 0, 0.518044,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.321907,-99) , 
0, -0.945986, 0, 0, 0.487462,-99)    );
  // itree = 435
  fBoostWeights.push_back(0.223023);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 2.99556, 0, 1, 0.604405,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.559137,-99) , 
NN_LL(
0, 
0, 
-1, -2.17934, 0, -1, 0.353548,-99) , 
17, 0.043521, 0, 0, 0.427998,-99) , 
19, 0.0707135, 1, 0, 0.514847,-99)    );
  // itree = 436
  fBoostWeights.push_back(0.231545);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.701836,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.554479,-99) , 
NN_LL(
0, 
0, 
-1, -0.703863, 0, -1, 0.388935,-99) , 
4, -1.88228, 0, 0, 0.429357,-99) , 
9, 1.64857, 0, 0, 0.47234,-99)    );
  // itree = 437
  fBoostWeights.push_back(0.201403);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.788054,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.70651,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.486286,-99) , 
7, 0.257042, 0, 0, 0.580987,-99) , 
0, -0.45095, 0, 0, 0.63609,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.50252,-99) , 
4, -1.97052, 1, 0, 0.585123,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.388353,-99) , 
11, 2364.15, 0, 0, 0.557417,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.364688,-99) , 
4, -2.70977, 0, 0, 0.536368,-99)    );
  // itree = 438
  fBoostWeights.push_back(0.249252);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.71986,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.66579,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.471834,-99) , 
8, 2.71078, 0, 0, 0.551652,-99) , 
8, 2.13925, 1, 0, 0.61414,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.411345,-99) , 
7, 0.354599, 1, 0, 0.547112,-99) , 
NN_LL(
0, 
0, 
-1, -2.24851, 0, -1, 0.372913,-99) , 
3, -0.526534, 0, 0, 0.489787,-99)    );
  // itree = 439
  fBoostWeights.push_back(0.222782);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.2524, 0, 1, 0.618021,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.431737,-99) , 
13, -0.75831, 0, 0, 0.565904,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.410258,-99) , 
2, -0.303172, 0, 0, 0.539735,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.325352,-99) , 
1, -1.07116, 0, 0, 0.516529,-99)    );
  // itree = 440
  fBoostWeights.push_back(0.253803);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.717648,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.700242,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.429093,-99) , 
13, -0.236883, 0, 0, 0.552441,-99) , 
9, 1.45539, 1, 0, 0.627114,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.429061,-99) , 
9, 1.2457, 0, 0, 0.564741,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.509755,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.328702,-99) , 
3, -0.470467, 1, 0, 0.413342,-99) , 
1, -0.835674, 0, 0, 0.514356,-99)    );
  // itree = 441
  fBoostWeights.push_back(0.243672);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.62211,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.648294,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.509491,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.362729,-99) , 
5, -1.01233, 0, 0, 0.457183,-99) , 
7, 0.386838, 0, 0, 0.5319,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.333826,-99) , 
4, -2.03996, 1, 0, 0.459449,-99) , 
15, 0.0116198, 0, 0, 0.492465,-99)    );
  // itree = 442
  fBoostWeights.push_back(0.28373);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.724029, 0, 1, 0.653825,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.56673,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.411987,-99) , 
17, 0.0261805, 0, 0, 0.475205,-99) , 
7, 0.257628, 1, 0, 0.574929,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.340358,-99) , 
16, -1.8944, 1, 0, 0.528599,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.31289,-99) , 
17, 0.0676252, 1, 0, 0.493183,-99)    );
  // itree = 443
  fBoostWeights.push_back(0.249251);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.694412,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.454463,-99) , 
10, 1.9803, 1, 0, 0.585533,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.439366,-99) , 
12, 3.76136, 1, 0, 0.529436,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.598419,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.419596,-99) , 
9, 1.04917, 0, 0, 0.511638,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.325677,-99) , 
5, -1.00417, 1, 0, 0.398785,-99) , 
8, 2.36217, 0, 0, 0.461261,-99)    );
  // itree = 444
  fBoostWeights.push_back(0.198737);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.674379,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.609681,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.441739,-99) , 
0, -0.63531, 0, 0, 0.527881,-99) , 
3, -0.207885, 0, 0, 0.571539,-99) , 
NN_LL(
0, 
0, 
-1, 0.148371, 0, -1, 0.429797,-99) , 
19, 0.105854, 1, 0, 0.525758,-99)    );
  // itree = 445
  fBoostWeights.push_back(0.265079);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.445978, 1, 1, 0.646102,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.5441,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.353673,-99) , 
9, 1.18045, 0, 0, 0.452889,-99) , 
18, 1.23553, 0, 0, 0.558584,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.638887,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.360263,-99) , 
9, 1.75076, 0, 0, 0.426766,-99) , 
13, -0.54926, 1, 0, 0.502387,-99)    );
  // itree = 446
  fBoostWeights.push_back(0.250303);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 2.9382, 1, 1, 0.637937,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.627377,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.554172,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.361516,-99) , 
7, 0.0556632, 1, 0, 0.464792,-99) , 
7, 0.191851, 0, 0, 0.537007,-99) , 
19, 0.0541615, 1, 0, 0.577267,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.414717,-99) , 
1, -1.03291, 0, 0, 0.553264,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.331478,-99) , 
17, 0.067698, 1, 0, 0.521918,-99)    );
  // itree = 447
  fBoostWeights.push_back(0.23355);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.737227, 1, 1, 0.612704,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.455565,-99) , 
10, 1.70047, 0, 0, 0.556721,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.61903,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.366382,-99) , 
11, 4426.73, 0, 0, 0.508133,-99) , 
NN_LL(
0, 
0, 
-1, -2.40291, 1, -1, 0.346368,-99) , 
12, 3.49905, 0, 0, 0.42868,-99) , 
17, 0.0290182, 1, 0, 0.490526,-99)    );
  // itree = 448
  fBoostWeights.push_back(0.307342);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.764201,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.468692,-99) , 
10, 1.325, 0, 0, 0.615035,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.616167,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.583935,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.35858,-99) , 
1, -0.562692, 0, 0, 0.461774,-99) , 
8, 2.04771, 1, 0, 0.516127,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.281123,-99) , 
7, 0.386431, 1, 0, 0.438336,-99) , 
2, -0.167536, 1, 0, 0.478383,-99)    );
  // itree = 449
  fBoostWeights.push_back(0.245201);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.686043,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 1.29098, 1, 1, 0.602008,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.656884,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.441869,-99) , 
7, 0.12436, 0, 0, 0.558026,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.503688,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.319024,-99) , 
6, 1.83498, 0, 0, 0.384983,-99) , 
12, 3.55826, 0, 0, 0.4673,-99) , 
18, 1.68396, 0, 0, 0.513579,-99) , 
7, 0.642584, 0, 0, 0.536025,-99)    );
  // itree = 450
  fBoostWeights.push_back(0.252469);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -2.46913, 1, 1, 0.614899,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.668518,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.469522,-99) , 
18, 1.80512, 1, 0, 0.588956,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.366935,-99) , 
5, -1.18308, 0, 0, 0.524481,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.338801,-99) , 
11, 3233.55, 0, 0, 0.483793,-99) , 
12, 3.35559, 1, 0, 0.529544,-99)    );
  // itree = 451
  fBoostWeights.push_back(0.232461);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.715505,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.49547,-99) , 
11, 5378.84, 0, 0, 0.5714,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.609432,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.537297,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.312066,-99) , 
10, 1.95062, 1, 0, 0.436617,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.268489,-99) , 
4, -2.25961, 0, 0, 0.382366,-99) , 
18, 1.87724, 0, 0, 0.439513,-99) , 
7, 0.290129, 0, 0, 0.489232,-99)    );
  // itree = 452
  fBoostWeights.push_back(0.23103);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.684427,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.586458,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.434941,-99) , 
0, -0.743606, 1, 0, 0.508272,-99) , 
19, 0.0680949, 1, 0, 0.571162,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.566174,-99) , 
NN_LL(
0, 
0, 
-1, 0.235409, 1, -1, 0.368516,-99) , 
6, 2.23073, 0, 0, 0.426223,-99) , 
16, -2.34229, 1, 0, 0.508333,-99)    );
  // itree = 453
  fBoostWeights.push_back(0.182864);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.00383497, 1, 1, 0.569812,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.538383,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.344795,-99) , 
5, -0.541034, 1, 0, 0.454285,-99) , 
10, 2.0288, 0, 0, 0.50417,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.341409,-99) , 
19, 0.161638, 1, 0, 0.484011,-99)    );
  // itree = 454
  fBoostWeights.push_back(0.271271);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.729762,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.638193,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.544262,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.410093,-99) , 
12, 3.45146, 0, 0, 0.48291,-99) , 
10, 1.67022, 1, 0, 0.544749,-99) , 
1, -0.330178, 0, 0, 0.583747,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.399062,-99) , 
7, 0.0642674, 0, 0, 0.53373,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.288915,-99) , 
8, 1.80654, 0, 0, 0.493382,-99)    );
  // itree = 455
  fBoostWeights.push_back(0.240947);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.667636,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.590162,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.605064,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.430937,-99) , 
13, -0.837208, 1, 0, 0.49601,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.296854,-99) , 
4, -2.4557, 0, 0, 0.447935,-99) , 
0, -0.487076, 0, 0, 0.486017,-99) , 
12, 4.06822, 0, 0, 0.52222,-99)    );
  // itree = 456
  fBoostWeights.push_back(0.251364);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.857316, 0, 1, 0.628185,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.380632,-99) , 
15, 0.0142667, 1, 0, 0.582524,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.372949,-99) , 
14, 0.0619097, 0, 0, 0.547601,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.387758,-99) , 
0, -0.34359, 1, 0, 0.508299,-99)    );
  // itree = 457
  fBoostWeights.push_back(0.258034);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.828282, 1, 1, 0.708803,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.481786,-99) , 
2, -0.062722, 0, 0, 0.649026,-99) , 
NN_LL(
0, 
0, 
-1, 0.176391, 1, -1, 0.438941,-99) , 
0, -0.525371, 1, 0, 0.570443,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.55944,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.384176,-99) , 
7, 0.322028, 1, 0, 0.458922,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.277853,-99) , 
4, -2.458, 1, 0, 0.399841,-99) , 
4, -2.33156, 0, 0, 0.513035,-99)    );
  // itree = 458
  fBoostWeights.push_back(0.254235);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.681511,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.578181,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.362496,-99) , 
11, 5824.55, 0, 0, 0.485852,-99) , 
17, 0.048373, 0, 0, 0.535845,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.505024,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.313631,-99) , 
16, -2.51414, 1, 0, 0.402578,-99) , 
2, 0.190279, 1, 0, 0.481823,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.332574,-99) , 
4, -2.48699, 0, 0, 0.454498,-99)    );
  // itree = 459
  fBoostWeights.push_back(0.293187);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.707916,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.611334,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.484802,-99) , 
9, 1.16534, 0, 0, 0.559156,-99) , 
0, -0.574916, 0, 0, 0.628032,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.323341,-99) , 
5, -1.28959, 0, 0, 0.582109,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.417586,-99) , 
2, 0.513947, 1, 0, 0.550733,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.237901,-99) , 
1, -1.09621, 0, 0, 0.520818,-99)    );
  // itree = 460
  fBoostWeights.push_back(0.257595);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.59145,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.622335,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.622418,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.383577,-99) , 
6, 1.25113, 0, 0, 0.48636,-99) , 
NN_LL(
0, 
0, 
-1, 4753.12, 0, -1, 0.341862,-99) , 
7, 0.155812, 0, 0, 0.410307,-99) , 
17, 0.00968858, 1, 0, 0.450193,-99) , 
7, 0.483036, 0, 0, 0.482691,-99)    );
  // itree = 461
  fBoostWeights.push_back(0.273382);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.68502,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.73067,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.58953,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.395151,-99) , 
8, 2.17272, 1, 0, 0.510323,-99) , 
9, 1.3908, 0, 0, 0.572541,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.400149,-99) , 
18, 1.72238, 1, 0, 0.515157,-99) , 
NN_LL(
0, 
0, 
-1, -0.715404, 0, -1, 0.374935,-99) , 
17, 0.0434911, 1, 0, 0.471142,-99) , 
12, 4.06822, 0, 0, 0.50599,-99)    );
  // itree = 462
  fBoostWeights.push_back(0.231186);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.62113,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.65574,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.537041,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.438068,-99) , 
0, -0.604429, 0, 0, 0.486092,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.336494,-99) , 
19, 0.10833, 1, 0, 0.448415,-99) , 
9, 1.12641, 1, 0, 0.488239,-99) , 
0, -0.290072, 0, 0, 0.523283,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.323794,-99) , 
9, 1.03759, 0, 0, 0.489158,-99)    );
  // itree = 463
  fBoostWeights.push_back(0.236702);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.665683,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.58634,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.519262,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.34497,-99) , 
18, 1.24815, 1, 0, 0.425187,-99) , 
10, 2.3194, 0, 0, 0.477096,-99) , 
14, 0.191153, 1, 0, 0.526658,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.507132,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.313003,-99) , 
10, 1.96705, 0, 0, 0.375728,-99) , 
9, 1.44036, 1, 0, 0.478779,-99)    );
  // itree = 464
  fBoostWeights.push_back(0.27042);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.654045,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.70764,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.585579,-99) , 
NN_LL(
0, 
0, 
-1, 1.32474, 0, -1, 0.336933,-99) , 
2, 0.397115, 0, 0, 0.443853,-99) , 
9, 1.00382, 1, 0, 0.50334,-99) , 
2, -0.12752, 1, 0, 0.548548,-99) , 
NN_LL(
0, 
0, 
-1, -2.40291, 1, -1, 0.41399,-99) , 
12, 3.25429, 0, 0, 0.511735,-99)    );
  // itree = 465
  fBoostWeights.push_back(0.206524);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.646952,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.66576,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.481076,-99) , 
7, 0.224866, 0, 0, 0.554836,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.421084,-99) , 
8, 2.17318, 0, 0, 0.489856,-99) , 
17, 0.0627014, 0, 0, 0.528682,-99) , 
NN_LL(
0, 
0, 
-1, -0.581375, 0, -1, 0.378044,-99) , 
18, 1.0086, 0, 0, 0.491457,-99)    );
  // itree = 466
  fBoostWeights.push_back(0.246846);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.681266,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.45153,-99) , 
5, -0.86748, 0, 0, 0.59372,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.624101,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.469696,-99) , 
9, 1.11667, 0, 0, 0.549921,-99) , 
NN_LL(
0, 
0, 
-1, 1.61551, 1, -1, 0.336011,-99) , 
9, 1.37038, 1, 0, 0.456365,-99) , 
12, 3.35559, 1, 0, 0.501772,-99)    );
  // itree = 467
  fBoostWeights.push_back(0.219686);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.112459, 1, 1, 0.687593,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.440388,-99) , 
1, -0.442046, 1, 0, 0.624543,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.48001,-99) , 
10, 1.53555, 0, 0, 0.579018,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.426828,-99) , 
7, 0.546206, 1, 0, 0.554096,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.379095,-99) , 
5, -1.32059, 0, 0, 0.529439,-99)    );
  // itree = 468
  fBoostWeights.push_back(0.235731);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.693289,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.6434,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.446037,-99) , 
8, 2.29627, 1, 0, 0.536963,-99) , 
2, 0.387499, 1, 0, 0.609269,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.546378,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.409029,-99) , 
11, 5706.18, 0, 0, 0.474012,-99) , 
3, -0.420433, 0, 0, 0.547388,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.338596,-99) , 
16, -2.88328, 0, 0, 0.517894,-99)    );
  // itree = 469
  fBoostWeights.push_back(0.227136);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.694025,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.663278,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.454185,-99) , 
4, -1.94973, 1, 0, 0.546329,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.510212,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.351658,-99) , 
18, 1.15952, 1, 0, 0.42008,-99) , 
4, -2.18702, 0, 0, 0.485729,-99) , 
11, 7807.66, 0, 0, 0.523629,-99)    );
  // itree = 470
  fBoostWeights.push_back(0.297361);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.5254, 0, 1, 0.688363,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.657946,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.657696,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.457539,-99) , 
3, -0.534677, 1, 0, 0.531388,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.364012,-99) , 
17, 0.0191801, 0, 0, 0.48095,-99) , 
6, 2.19399, 0, 0, 0.531032,-99) , 
6, 1.04817, 1, 0, 0.571012,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.270909,-99) , 
1, -1.09621, 0, 0, 0.540508,-99)    );
  // itree = 471
  fBoostWeights.push_back(0.22079);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.42184, 1, 1, 0.586083,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.55034,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.327,-99) , 
7, 0.222385, 0, 0, 0.415134,-99) , 
2, 0.0230064, 0, 0, 0.522066,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.354168,-99) , 
0, -0.913753, 0, 0, 0.491952,-99)    );
  // itree = 472
  fBoostWeights.push_back(0.255351);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.260307, 1, 1, 0.632949,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.640737,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.46032,-99) , 
3, -0.430416, 1, 0, 0.552217,-99) , 
NN_LL(
0, 
0, 
-1, 1.92165, 1, -1, 0.360254,-99) , 
11, 4095.45, 1, 0, 0.440417,-99) , 
13, -0.577244, 0, 0, 0.519126,-99)    );
  // itree = 473
  fBoostWeights.push_back(0.236465);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.684689,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.579462,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.408113,-99) , 
12, 3.53621, 1, 0, 0.486483,-99) , 
8, 2.67192, 0, 0, 0.550749,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.517872,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.288599,-99) , 
6, 1.55615, 1, 0, 0.405326,-99) , 
3, -0.520829, 0, 0, 0.49386,-99)    );
  // itree = 474
  fBoostWeights.push_back(0.196907);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.632026,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.683479,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.473762,-99) , 
14, 0.701339, 0, 0, 0.55567,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.514265,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.431764,-99) , 
18, 1.05032, 0, 0, 0.477052,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.355277,-99) , 
6, 1.16498, 1, 0, 0.421562,-99) , 
6, 1.67185, 0, 0, 0.477849,-99) , 
11, 7549.61, 0, 0, 0.512107,-99)    );
  // itree = 475
  fBoostWeights.push_back(0.292794);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.652516,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.650776,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.397282,-99) , 
7, 0.1494, 1, 0, 0.546941,-99) , 
NN_LL(
0, 
0, 
-1, -0.437999, 1, -1, 0.363423,-99) , 
18, 1.22872, 0, 0, 0.473089,-99) , 
7, 0.580245, 0, 0, 0.50022,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.32529,-99) , 
0, -0.929052, 0, 0, 0.472293,-99)    );
  // itree = 476
  fBoostWeights.push_back(0.298578);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.662253,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.645332,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.556517,-99) , 
NN_LL(
0, 
0, 
-1, 3.32032, 1, -1, 0.332761,-99) , 
14, 0.787441, 0, 0, 0.42669,-99) , 
11, 5310.31, 0, 0, 0.519935,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.318049,-99) , 
10, 1.27022, 0, 0, 0.484342,-99) , 
0, -0.316765, 0, 0, 0.523238,-99)    );
  // itree = 477
  fBoostWeights.push_back(0.279944);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.682739,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.68042,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.548763,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.340358,-99) , 
12, 3.37485, 0, 0, 0.461123,-99) , 
14, 0.618102, 1, 0, 0.524284,-99) , 
NN_LL(
0, 
0, 
-1, 0.0284845, 1, -1, 0.369169,-99) , 
3, -0.518319, 0, 0, 0.465024,-99) , 
18, 1.69186, 0, 0, 0.523296,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.375377,-99) , 
10, 1.29444, 0, 0, 0.490657,-99)    );
  // itree = 478
  fBoostWeights.push_back(0.268485);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.739383,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.681956,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.66579,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.462142,-99) , 
11, 4000.92, 0, 0, 0.571533,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.431799,-99) , 
10, 1.91549, 0, 0, 0.515081,-99) , 
8, 2.85953, 0, 0, 0.546329,-99) , 
3, -0.730919, 1, 0, 0.57841,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.523014,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.252074,-99) , 
10, 1.83969, 1, 0, 0.388678,-99) , 
6, 1.97981, 1, 0, 0.529214,-99)    );
  // itree = 479
  fBoostWeights.push_back(0.236061);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 2.21308, 0, 1, 0.64698,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.45892,-99) , 
2, 0.269521, 1, 0, 0.576184,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.607519,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.396008,-99) , 
14, 0.544248, 1, 0, 0.510293,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.346004,-99) , 
9, 1.38604, 1, 0, 0.447895,-99) , 
12, 3.54925, 1, 0, 0.510185,-99)    );
  // itree = 480
  fBoostWeights.push_back(0.263999);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.675783,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.66959,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.46735,-99) , 
18, 1.17833, 0, 0, 0.572526,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.418852,-99) , 
14, 0.832258, 1, 0, 0.529138,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.357695,-99) , 
7, 0.451306, 1, 0, 0.487756,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.310904,-99) , 
10, 1.46513, 0, 0, 0.461357,-99) , 
14, -0.0831002, 1, 0, 0.494904,-99)    );
  // itree = 481
  fBoostWeights.push_back(0.240946);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.676693,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.599915,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.435622,-99) , 
12, 3.70072, 0, 0, 0.502137,-99) , 
1, -0.641398, 1, 0, 0.574493,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.403207,-99) , 
19, 0.125813, 1, 0, 0.540487,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.389979,-99) , 
18, 0.619024, 0, 0, 0.514708,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.358668,-99) , 
8, 1.80619, 0, 0, 0.490984,-99)    );
  // itree = 482
  fBoostWeights.push_back(0.220287);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.69382,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.490297,-99) , 
17, 0.0126386, 0, 0, 0.617378,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.548184,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.386122,-99) , 
13, -0.591942, 0, 0, 0.468617,-99) , 
16, -2.35895, 1, 0, 0.541918,-99) , 
NN_LL(
0, 
0, 
-1, -0.623744, 0, -1, 0.375946,-99) , 
17, 0.043521, 1, 0, 0.495032,-99)    );
  // itree = 483
  fBoostWeights.push_back(0.264676);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.750606,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.661037,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.479478,-99) , 
4, -2.02251, 1, 0, 0.584591,-99) , 
17, 0.0434014, 0, 0, 0.644931,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.399739,-99) , 
4, -2.33156, 0, 0, 0.574524,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.520754,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.325048,-99) , 
2, 0.0986859, 1, 0, 0.41013,-99) , 
12, 3.78321, 1, 0, 0.520051,-99)    );
  // itree = 484
  fBoostWeights.push_back(0.227057);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.679959,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.599453,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.48184,-99) , 
19, 0.024173, 1, 0, 0.520357,-99) , 
13, -0.513658, 1, 0, 0.585932,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.644973,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.558344,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.329555,-99) , 
3, -0.421028, 0, 0, 0.42979,-99) , 
18, 1.51285, 0, 0, 0.504815,-99) , 
13, -0.699357, 0, 0, 0.554612,-99)    );
  // itree = 485
  fBoostWeights.push_back(0.259535);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.00549138, 1, 1, 0.630749,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.576959,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.441102,-99) , 
2, 0.264436, 0, 0, 0.49115,-99) , 
0, -0.522105, 1, 0, 0.577986,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.368105,-99) , 
19, 0.161634, 1, 0, 0.547805,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.281449,-99) , 
10, 1.11778, 0, 0, 0.505881,-99)    );
  // itree = 486
  fBoostWeights.push_back(0.272887);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.46005, 1, 1, 0.695836,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.395811,-99) , 
0, -0.981202, 0, 0, 0.5917,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.635578,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.531203,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.391165,-99) , 
0, -0.394608, 0, 0, 0.451642,-99) , 
18, 0.735453, 1, 0, 0.487336,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.247844,-99) , 
8, 2.07525, 0, 0, 0.446457,-99) , 
0, -0.774377, 1, 0, 0.499878,-99)    );
  // itree = 487
  fBoostWeights.push_back(0.216357);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.594986,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.436756,-99) , 
19, 0.0253576, 0, 0, 0.543632,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.544775,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.552861,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.303973,-99) , 
1, -0.779901, 1, 0, 0.431384,-99) , 
10, 2.18729, 0, 0, 0.477256,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.257213,-99) , 
6, 1.98575, 1, 0, 0.427204,-99) , 
19, 0.0707085, 1, 0, 0.481612,-99)    );
  // itree = 488
  fBoostWeights.push_back(0.202915);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.622737,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.592515,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.507337,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.306213,-99) , 
7, 0.193227, 0, 0, 0.422711,-99) , 
11, 3780.84, 1, 0, 0.489466,-99) , 
18, 1.24671, 0, 0, 0.530463,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.577968,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.444737,-99) , 
12, 3.73618, 0, 0, 0.516415,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.331814,-99) , 
11, 3231.23, 0, 0, 0.453591,-99) , 
18, 1.53577, 1, 0, 0.499833,-99)    );
  // itree = 489
  fBoostWeights.push_back(0.272871);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.611998,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.604322,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.442289,-99) , 
14, 0.591099, 0, 0, 0.546598,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.307226,-99) , 
9, 1.44632, 1, 0, 0.459641,-99) , 
2, -0.0300322, 1, 0, 0.505476,-99) , 
NN_LL(
0, 
0, 
-1, -0.0178746, 0, -1, 0.328864,-99) , 
6, 1.97981, 1, 0, 0.464592,-99)    );
  // itree = 490
  fBoostWeights.push_back(0.241342);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.25408, 1, 1, 0.612242,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.65164,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.472629,-99) , 
3, -0.407187, 0, 0, 0.563694,-99) , 
NN_LL(
0, 
0, 
-1, -0.757642, 0, -1, 0.384392,-99) , 
16, -2.37752, 1, 0, 0.45973,-99) , 
4, -1.99629, 0, 0, 0.515451,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.32783,-99) , 
3, -0.0369868, 1, 0, 0.484381,-99)    );
  // itree = 491
  fBoostWeights.push_back(0.286974);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.734833,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.599528,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.59598,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.397099,-99) , 
11, 4511.06, 0, 0, 0.515923,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.283263,-99) , 
1, -0.798416, 1, 0, 0.44607,-99) , 
13, -0.694958, 0, 0, 0.508704,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.348089,-99) , 
0, -0.478239, 1, 0, 0.464864,-99) , 
9, 1.7176, 0, 0, 0.492688,-99)    );
  // itree = 492
  fBoostWeights.push_back(0.21124);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.719097,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.645034,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.496607,-99) , 
10, 1.91031, 1, 0, 0.572293,-99) , 
12, 3.25429, 1, 0, 0.615682,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.414199,-99) , 
4, -2.53378, 0, 0, 0.580635,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.423732,-99) , 
13, -0.305238, 1, 0, 0.54123,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.392078,-99) , 
9, 1.03964, 0, 0, 0.517267,-99)    );
  // itree = 493
  fBoostWeights.push_back(0.260878);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.695762,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.646744,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.492129,-99) , 
10, 2.06635, 1, 0, 0.554997,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.367729,-99) , 
11, 2579.23, 0, 0, 0.501603,-99) , 
16, -2.18812, 0, 0, 0.56673,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.559485,-99) , 
NN_LL(
0, 
0, 
-1, -0.79668, 1, -1, 0.319948,-99) , 
13, -0.489746, 0, 0, 0.406121,-99) , 
12, 3.66564, 1, 0, 0.501332,-99)    );
  // itree = 494
  fBoostWeights.push_back(0.223554);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.633301, 0, 1, 0.600682,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.671231,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.467783,-99) , 
9, 1.05297, 0, 0, 0.558443,-99) , 
NN_LL(
0, 
0, 
-1, -0.61448, 0, -1, 0.349993,-99) , 
8, 2.23811, 1, 0, 0.471662,-99) , 
5, -0.786387, 0, 0, 0.5292,-99)    );
  // itree = 495
  fBoostWeights.push_back(0.24926);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.637442,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.582922,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.604081,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.429053,-99) , 
9, 1.25078, 1, 0, 0.516096,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.335484,-99) , 
9, 1.07506, 0, 0, 0.475556,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.239048,-99) , 
17, 0.0676963, 1, 0, 0.43098,-99) , 
11, 6373.06, 0, 0, 0.478352,-99) , 
8, 2.92103, 0, 0, 0.510735,-99)    );
  // itree = 496
  fBoostWeights.push_back(0.220087);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.655775,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.737044, 0, 1, 0.575482,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.398528,-99) , 
17, 0.0336996, 1, 0, 0.507502,-99) , 
0, -0.525754, 0, 0, 0.555307,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.535654,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.34041,-99) , 
7, 0.16033, 0, 0, 0.420682,-99) , 
14, 0.248376, 0, 0, 0.510745,-99)    );
  // itree = 497
  fBoostWeights.push_back(0.206449);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.651788,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.481408,-99) , 
14, 0.457213, 0, 0, 0.549387,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.631333,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.503543,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.356966,-99) , 
2, 0.0165555, 0, 0, 0.427089,-99) , 
11, 2929.58, 1, 0, 0.495603,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.317115,-99) , 
14, 0.74194, 1, 0, 0.427824,-99) , 
19, 0.0711744, 1, 0, 0.484728,-99)    );
  // itree = 498
  fBoostWeights.push_back(0.267598);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.747736,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.686823,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.470316,-99) , 
16, -2.39432, 1, 0, 0.571496,-99) , 
4, -2.08747, 0, 0, 0.625727,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.636364,-99) , 
NN_LL(
0, 
0, 
-1, -0.706057, 1, -1, 0.403251,-99) , 
14, 0.745342, 0, 0, 0.48348,-99) , 
19, 0.0828131, 1, 0, 0.56107,-99)    );
  // itree = 499
  fBoostWeights.push_back(0.197482);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.395457, 1, 1, 0.628913,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0960087, 1, 1, 0.57746,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.537136,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.370483,-99) , 
2, 0.289719, 0, 0, 0.44815,-99) , 
3, -0.478688, 1, 0, 0.520014,-99) , 
12, 3.3679, 1, 0, 0.559367,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.408657,-99) , 
3, -0.0418001, 1, 0, 0.535905,-99)    );
  // itree = 500
  fBoostWeights.push_back(0.276469);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.674133,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.769533,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.479019,-99) , 
2, 0.261564, 1, 0, 0.595077,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.5911,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.448366,-99) , 
1, -0.781275, 1, 0, 0.530082,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.314126,-99) , 
7, 0.287499, 1, 0, 0.440616,-99) , 
8, 2.42454, 0, 0, 0.504974,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.338639,-99) , 
2, -0.132329, 0, 0, 0.468252,-99) , 
3, -0.78391, 1, 0, 0.493024,-99)    );
  // itree = 501
  fBoostWeights.push_back(0.224498);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0894203, 1, 1, 0.636475,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.632417,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.441458,-99) , 
0, -0.509199, 0, 0, 0.517124,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.336709,-99) , 
14, 0.583354, 1, 0, 0.471491,-99) , 
10, 2.18293, 0, 0, 0.528347,-99) , 
NN_LL(
0, 
0, 
-1, 0.282026, 1, -1, 0.403474,-99) , 
1, -0.828613, 0, 0, 0.487706,-99)    );
  // itree = 502
  fBoostWeights.push_back(0.272672);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0241353, 1, 1, 0.638989,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.89599, 1, 1, 0.615491,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.371014,-99) , 
0, -0.621968, 0, 0, 0.550339,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.349691,-99) , 
11, 5606.88, 1, 0, 0.482362,-99) , 
0, -0.77012, 1, 0, 0.539303,-99)    );
  // itree = 503
  fBoostWeights.push_back(0.295576);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.476882, 0, 1, 0.64008,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.402451,-99) , 
1, -0.848195, 0, 0, 0.564755,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.600183,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.340041,-99) , 
17, 0.028987, 1, 0, 0.47267,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.244726,-99) , 
12, 3.22162, 0, 0, 0.402892,-99) , 
18, 1.23238, 0, 0, 0.498156,-99)    );
  // itree = 504
  fBoostWeights.push_back(0.266822);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.30745, 0, 1, 0.649854,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.53835,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.313344,-99) , 
7, 0.160658, 1, 0, 0.428585,-99) , 
19, 0.0968413, 1, 0, 0.557372,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.370059,-99) , 
16, -1.90332, 1, 0, 0.513926,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.379053,-99) , 
18, 0.719376, 0, 0, 0.487073,-99)    );
  // itree = 505
  fBoostWeights.push_back(0.252788);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.665244,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.603213,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.56125,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.358402,-99) , 
14, 0.32541, 1, 0, 0.437394,-99) , 
15, 0.00448422, 0, 0, 0.511472,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.337606,-99) , 
19, 0.141953, 1, 0, 0.481839,-99) , 
6, 2.60218, 0, 0, 0.509008,-99)    );
  // itree = 506
  fBoostWeights.push_back(0.272417);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.71985,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.63292,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.445001,-99) , 
15, 0.00353644, 0, 0, 0.556141,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.512442,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.311139,-99) , 
11, 4461.86, 0, 0, 0.409432,-99) , 
19, 0.106417, 1, 0, 0.500154,-99) , 
16, -1.87106, 0, 0, 0.536988,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.305044,-99) , 
0, -0.203115, 1, 0, 0.500919,-99)    );
  // itree = 507
  fBoostWeights.push_back(0.231077);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.694125,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.458163,-99) , 
4, -2.16973, 1, 0, 0.605768,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.626299,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.465197,-99) , 
9, 1.09168, 1, 0, 0.537827,-99) , 
NN_LL(
0, 
0, 
-1, -2.04061, 0, -1, 0.386468,-99) , 
7, 0.193221, 0, 0, 0.451309,-99) , 
15, 0.00388654, 1, 0, 0.513871,-99)    );
  // itree = 508
  fBoostWeights.push_back(0.177951);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.654756,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.483798,-99) , 
11, 3973.64, 0, 0, 0.588633,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.479086,-99) , 
12, 3.35559, 0, 0, 0.543106,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.392,-99) , 
0, -0.873018, 0, 0, 0.519534,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.336416,-99) , 
13, -0.912738, 0, 0, 0.490962,-99)    );
  // itree = 509
  fBoostWeights.push_back(0.218424);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.07669, 0, 1, 0.618699,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.653547,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.478546,-99) , 
12, 3.39541, 1, 0, 0.557542,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.348379,-99) , 
18, 1.13137, 0, 0, 0.504492,-99) , 
11, 4426.61, 0, 0, 0.559497,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.397532,-99) , 
5, -1.31823, 0, 0, 0.533452,-99)    );
  // itree = 510
  fBoostWeights.push_back(0.275901);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.439365, 0, 1, 0.665829,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.569489,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.35445,-99) , 
4, -2.124, 0, 0, 0.48507,-99) , 
19, 0.0707085, 1, 0, 0.555016,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.355471,-99) , 
16, -2.86706, 0, 0, 0.523167,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.329566,-99) , 
10, 1.17276, 0, 0, 0.493958,-99)    );
  // itree = 511
  fBoostWeights.push_back(0.256502);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.748511,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.597266,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.447277,-99) , 
2, 0.0423379, 0, 0, 0.521466,-99) , 
8, 2.15932, 0, 0, 0.619417,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.418011,-99) , 
17, 0.0192251, 0, 0, 0.562304,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.410505,-99) , 
9, 1.48064, 1, 0, 0.515865,-99) , 
NN_LL(
0, 
0, 
-1, 0.972312, 0, -1, 0.349985,-99) , 
14, 0.804961, 1, 0, 0.476805,-99)    );
  // itree = 512
  fBoostWeights.push_back(0.268431);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.676521,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.465903,-99) , 
14, 0.562102, 0, 0, 0.553319,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.669247,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.438296,-99) , 
18, 1.43609, 1, 0, 0.542023,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.269232,-99) , 
3, -0.281225, 1, 0, 0.450799,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.240858,-99) , 
18, 0.862039, 0, 0, 0.405519,-99) , 
13, -0.633264, 0, 0, 0.483901,-99)    );
  // itree = 513
  fBoostWeights.push_back(0.220448);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.595698,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 2274.61, 0, 1, 0.576855,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.556389,-99) , 
NN_LL(
0, 
0, 
-1, 0.0339019, 1, -1, 0.33184,-99) , 
13, -0.493443, 0, 0, 0.404759,-99) , 
11, 3006.42, 1, 0, 0.465766,-99) , 
11, 7347.75, 0, 0, 0.496103,-99)    );
  // itree = 514
  fBoostWeights.push_back(0.252054);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.00661028, 1, 1, 0.641573,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.610904,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.42212,-99) , 
19, 0.0705771, 1, 0, 0.528882,-99) , 
NN_LL(
0, 
0, 
-1, 3.23479, 1, -1, 0.347156,-99) , 
11, 3446.93, 0, 0, 0.460181,-99) , 
3, -0.143396, 0, 0, 0.502889,-99)    );
  // itree = 515
  fBoostWeights.push_back(0.250219);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.68441,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.612406,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.609339,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.412448,-99) , 
2, 0.281548, 0, 0, 0.478423,-99) , 
5, -0.692072, 1, 0, 0.53953,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.370893,-99) , 
5, -1.1436, 0, 0, 0.50411,-99) , 
19, 0.157146, 0, 0, 0.537758,-99)    );
  // itree = 516
  fBoostWeights.push_back(0.3121);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.775451,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.770337,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.556475,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.352244,-99) , 
7, 0.257624, 0, 0, 0.463956,-99) , 
4, -2.02966, 0, 0, 0.581023,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.418456,-99) , 
13, -0.719075, 1, 0, 0.499155,-99) , 
19, 0.0352513, 1, 0, 0.551175,-99)    );
  // itree = 517
  fBoostWeights.push_back(0.257875);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.31016, 1, 1, 0.683223,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.643863,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.549018,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.294112,-99) , 
12, 3.65998, 0, 0, 0.459166,-99) , 
12, 3.39204, 1, 0, 0.528417,-99) , 
17, 0.0192406, 1, 0, 0.580008,-99) , 
NN_LL(
0, 
0, 
-1, 0.498717, 1, -1, 0.413544,-99) , 
6, 2.00471, 1, 0, 0.535824,-99)    );
  // itree = 518
  fBoostWeights.push_back(0.222633);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.678957,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.426113,-99) , 
19, 0.0235501, 0, 0, 0.598118,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.520746,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.350735,-99) , 
9, 1.29322, 0, 0, 0.461699,-99) , 
11, 4426.7, 0, 0, 0.528108,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.368921,-99) , 
13, -0.87028, 0, 0, 0.497203,-99)    );
  // itree = 519
  fBoostWeights.push_back(0.226236);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.685185,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.598325,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.480593,-99) , 
17, 0.0392764, 1, 0, 0.540623,-99) , 
4, -2.07775, 0, 0, 0.611274,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.584037,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.460082,-99) , 
11, 4580.14, 0, 0, 0.53273,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.372681,-99) , 
18, 1.7372, 1, 0, 0.481483,-99) , 
17, 0.0260011, 0, 0, 0.543766,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.342853,-99) , 
17, 0.0672744, 1, 0, 0.511759,-99)    );
  // itree = 520
  fBoostWeights.push_back(0.29531);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.741522,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.68312,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.45542,-99) , 
11, 3233.43, 1, 0, 0.554155,-99) , 
3, -0.243404, 0, 0, 0.608491,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.549229,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.356251,-99) , 
17, 0.0192013, 1, 0, 0.426246,-99) , 
8, 2.67923, 1, 0, 0.540009,-99) , 
NN_LL(
0, 
0, 
-1, -0.459925, 1, -1, 0.31089,-99) , 
9, 1.06257, 0, 0, 0.491435,-99)    );
  // itree = 521
  fBoostWeights.push_back(0.273737);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 4093.8, 0, 1, 0.623302,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.44022,-99) , 
5, -0.331909, 1, 0, 0.585234,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.58991,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.377572,-99) , 
8, 1.93697, 1, 0, 0.487059,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.156877,-99) , 
4, -2.3817, 0, 0, 0.38312,-99) , 
13, -0.761295, 0, 0, 0.517818,-99)    );
  // itree = 522
  fBoostWeights.push_back(0.303013);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.603991,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.610466,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.443662,-99) , 
19, 0.143913, 1, 0, 0.557661,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.286337,-99) , 
14, 0.0555536, 0, 0, 0.500574,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.293206,-99) , 
10, 2.37175, 1, 0, 0.459104,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.306359,-99) , 
0, -0.475875, 1, 0, 0.414016,-99) , 
13, -0.202709, 0, 0, 0.437852,-99)    );
  // itree = 523
  fBoostWeights.push_back(0.253953);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0240587, 0, 1, 0.639978,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.463744,-99) , 
18, 0.924165, 0, 0, 0.588538,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.68988,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.498672,-99) , 
2, -0.0260629, 0, 0, 0.595857,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.361623,-99) , 
14, 0.607309, 1, 0, 0.500876,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.310062,-99) , 
4, -2.35001, 0, 0, 0.44329,-99) , 
0, -0.592332, 0, 0, 0.5103,-99)    );
  // itree = 524
  fBoostWeights.push_back(0.236708);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.716884,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.673471,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.520051,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.449662,-99) , 
12, 3.38389, 1, 0, 0.482255,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.337482,-99) , 
4, -2.28164, 0, 0, 0.443468,-99) , 
13, -0.888999, 1, 0, 0.509081,-99) , 
19, 0.0365101, 1, 0, 0.541876,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.392728,-99) , 
12, 4.06094, 1, 0, 0.515417,-99)    );
  // itree = 525
  fBoostWeights.push_back(0.274896);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.940551, 0, 1, 0.66976,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.596305,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.457389,-99) , 
8, 2.44273, 0, 0, 0.542273,-99) , 
1, -0.755848, 1, 0, 0.605257,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.590442,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.285256,-99) , 
0, -0.683639, 0, 0, 0.459916,-99) , 
12, 3.32061, 0, 0, 0.558522,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.336903,-99) , 
17, 0.0676963, 1, 0, 0.525271,-99)    );
  // itree = 526
  fBoostWeights.push_back(0.293405);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.3456, 1, 1, 0.659791,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.608071,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.381718,-99) , 
18, 1.1303, 0, 0, 0.50768,-99) , 
17, 0.0338308, 1, 0, 0.596066,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.383499,-99) , 
18, 2.03132, 1, 0, 0.559405,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.322185,-99) , 
12, 3.08511, 0, 0, 0.521607,-99)    );
  // itree = 527
  fBoostWeights.push_back(0.241162);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.67458,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 3105.52, 1, 1, 0.616286,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.589948,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.524503,-99) , 
NN_LL(
0, 
0, 
-1, -0.704241, 0, -1, 0.358796,-99) , 
3, -0.621207, 1, 0, 0.410148,-99) , 
18, 1.78019, 0, 0, 0.457282,-99) , 
12, 3.25736, 1, 0, 0.508824,-99) , 
12, 4.05391, 0, 0, 0.538523,-99)    );
  // itree = 528
  fBoostWeights.push_back(0.269389);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.100336, 0, 1, 0.644139,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.542947,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.39233,-99) , 
7, 0.160178, 1, 0, 0.465651,-99) , 
12, 3.62144, 1, 0, 0.57175,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.559721,-99) , 
NN_LL(
0, 
0, 
-1, 0.157505, 1, -1, 0.322378,-99) , 
10, 2.23122, 0, 0, 0.386375,-99) , 
1, -0.636593, 1, 0, 0.476987,-99)    );
  // itree = 529
  fBoostWeights.push_back(0.221137);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.726959, 0, 1, 0.628178,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.449432,-99) , 
16, -2.61707, 0, 0, 0.583448,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.391038,-99) , 
15, 0.0103567, 1, 0, 0.54194,-99)    );
  // itree = 530
  fBoostWeights.push_back(0.248094);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.610095,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.627518,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.535467,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.371208,-99) , 
12, 3.46745, 0, 0, 0.474528,-99) , 
3, -0.733173, 1, 0, 0.51412,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.317438,-99) , 
17, 0.0144735, 0, 0, 0.4707,-99) , 
4, -1.89969, 0, 0, 0.506869,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.574773,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.310461,-99) , 
5, -0.380021, 0, 0, 0.397366,-99) , 
8, 2.66849, 1, 0, 0.471998,-99)    );
  // itree = 531
  fBoostWeights.push_back(0.305134);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.612431,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.681828,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.429938,-99) , 
0, -0.584545, 0, 0, 0.549148,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.584817,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.354887,-99) , 
13, -0.507464, 0, 0, 0.462428,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.256384,-99) , 
18, 1.43362, 0, 0, 0.392051,-99) , 
18, 1.114, 1, 0, 0.449665,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.278418,-99) , 
1, -1.05862, 0, 0, 0.426394,-99) , 
16, -2.81271, 1, 0, 0.463058,-99)    );
  // itree = 532
  fBoostWeights.push_back(0.307193);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.663925,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.597624,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.659011,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.389471,-99) , 
10, 1.81533, 1, 0, 0.53026,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.352124,-99) , 
5, -1.04778, 0, 0, 0.470197,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.300556,-99) , 
12, 3.19217, 0, 0, 0.424128,-99) , 
10, 2.44324, 0, 0, 0.452296,-99) , 
11, 8629.07, 0, 0, 0.481042,-99)    );
  // itree = 533
  fBoostWeights.push_back(0.215355);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.15291, 0, 1, 0.651592,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.470074,-99) , 
10, 1.86152, 0, 0, 0.575922,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.583264,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.448918,-99) , 
2, -0.0801573, 0, 0, 0.520522,-99) , 
NN_LL(
0, 
0, 
-1, 3.56167, 1, -1, 0.354956,-99) , 
3, -0.43746, 1, 0, 0.43147,-99) , 
4, -2.2129, 1, 0, 0.48982,-99)    );
  // itree = 534
  fBoostWeights.push_back(0.181049);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.631906,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 3.2891, 0, 1, 0.592217,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.54353,-99) , 
NN_LL(
0, 
0, 
-1, 2.10537, 0, -1, 0.402167,-99) , 
11, 6375.77, 0, 0, 0.449143,-99) , 
15, 0.0116429, 0, 0, 0.484349,-99) , 
0, -0.207387, 0, 0, 0.504508,-99)    );
  // itree = 535
  fBoostWeights.push_back(0.256439);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 3733.05, 0, 1, 0.678441,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.632206,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.496372,-99) , 
14, 0.394862, 0, 0, 0.554054,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.369444,-99) , 
11, 5539.34, 0, 0, 0.504894,-99) , 
11, 4587.28, 1, 0, 0.567797,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.326591,-99) , 
11, 2549.12, 0, 0, 0.521446,-99)    );
  // itree = 536
  fBoostWeights.push_back(0.337659);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.743923,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.452541,-99) , 
5, -1.0167, 0, 0, 0.642174,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.264668,-99) , 
6, 1.98175, 1, 0, 0.541973,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.563437,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.392077,-99) , 
1, -0.603357, 1, 0, 0.470145,-99) , 
NN_LL(
0, 
0, 
-1, -2.52076, 1, -1, 0.285008,-99) , 
2, 0.248283, 1, 0, 0.390819,-99) , 
17, 0.0241807, 1, 0, 0.453946,-99)    );
  // itree = 537
  fBoostWeights.push_back(0.260228);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.729189, 0, 1, 0.635085,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.609752,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.574814,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.557523,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.532581,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.255034,-99) , 
1, -0.845267, 1, 0, 0.337099,-99) , 
7, 0.408817, 0, 0, 0.407359,-99) , 
8, 2.80243, 0, 0, 0.442639,-99) , 
17, 0.0576969, 0, 0, 0.471659,-99) , 
6, 2.13841, 0, 0, 0.508337,-99)    );
  // itree = 538
  fBoostWeights.push_back(0.258719);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.707095,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.636179,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.452447,-99) , 
10, 2.08921, 0, 0, 0.535598,-99) , 
17, 0.0480761, 0, 0, 0.585283,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.598891,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.36597,-99) , 
18, 1.75674, 0, 0, 0.486041,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.350237,-99) , 
4, -2.01704, 1, 0, 0.429593,-99) , 
18, 1.30191, 1, 0, 0.498877,-99)    );
  // itree = 539
  fBoostWeights.push_back(0.253429);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.690112,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.471017,-99) , 
3, -0.390525, 0, 0, 0.603011,-99) , 
NN_LL(
0, 
0, 
-1, -2.21511, 0, -1, 0.421236,-99) , 
19, 0.0874886, 1, 0, 0.519438,-99) , 
NN_LL(
0, 
0, 
-1, 2.25794, 0, -1, 0.317333,-99) , 
6, 2.01568, 1, 0, 0.468477,-99)    );
  // itree = 540
  fBoostWeights.push_back(0.168751);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.19214, 1, 1, 0.619488,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.490068,-99) , 
17, 0.038187, 1, 0, 0.568733,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.384087,-99) , 
19, 0.141211, 1, 0, 0.535634,-99)    );
  // itree = 541
  fBoostWeights.push_back(0.253977);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.641745, 1, 1, 0.661043,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.605231,-99) , 
NN_LL(
0, 
0, 
-1, -2.42105, 0, -1, 0.406973,-99) , 
13, -0.644035, 0, 0, 0.494755,-99) , 
4, -2.04991, 0, 0, 0.563553,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.375731,-99) , 
6, 2.61679, 1, 0, 0.540106,-99)    );
  // itree = 542
  fBoostWeights.push_back(0.271796);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.70781,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.701636,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.659085,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.454132,-99) , 
17, 0.0482304, 0, 0, 0.537084,-99) , 
14, 0.833474, 0, 0, 0.584948,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.412674,-99) , 
1, -0.523031, 1, 0, 0.52529,-99) , 
11, 7347.75, 0, 0, 0.561841,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.350454,-99) , 
18, 2.05817, 1, 0, 0.537563,-99)    );
  // itree = 543
  fBoostWeights.push_back(0.217122);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.679431,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.494535,-99) , 
7, 0.160569, 0, 0, 0.580107,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.645652,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.436173,-99) , 
18, 1.14402, 1, 0, 0.509752,-99) , 
NN_LL(
0, 
0, 
-1, -0.229824, 0, -1, 0.347686,-99) , 
11, 4601.9, 1, 0, 0.438149,-99) , 
14, 0.338874, 1, 0, 0.490127,-99)    );
  // itree = 544
  fBoostWeights.push_back(0.241738);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0285229, 1, 1, 0.630246,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.630099,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.520305,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.375118,-99) , 
7, 0.237078, 1, 0, 0.449767,-99) , 
10, 2.31654, 0, 0, 0.500917,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.344952,-99) , 
1, -0.82178, 0, 0, 0.467566,-99) , 
3, -0.610295, 1, 0, 0.510981,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.311165,-99) , 
6, 2.47238, 1, 0, 0.488577,-99)    );
  // itree = 545
  fBoostWeights.push_back(0.23601);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.730371,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.499513,-99) , 
2, -0.132789, 0, 0, 0.591519,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.602462,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.580718,-99) , 
NN_LL(
0, 
0, 
-1, 0.19343, 0, -1, 0.348677,-99) , 
18, 1.05743, 1, 0, 0.440986,-99) , 
12, 3.37627, 1, 0, 0.480411,-99) , 
10, 1.82085, 1, 0, 0.527904,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.330135,-99) , 
12, 3.07542, 0, 0, 0.500093,-99)    );
  // itree = 546
  fBoostWeights.push_back(0.269507);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.732173,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.755463, 1, 1, 0.605793,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.569636,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.340997,-99) , 
3, -0.348279, 0, 0, 0.448587,-99) , 
16, -2.54813, 0, 0, 0.549785,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.345674,-99) , 
7, 0.0321405, 0, 0, 0.509909,-99) , 
8, 3.04715, 0, 0, 0.535536,-99)    );
  // itree = 547
  fBoostWeights.push_back(0.285033);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.685731,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.699646,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.472754,-99) , 
14, 0.486081, 1, 0, 0.571223,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.374167,-99) , 
18, 1.70277, 1, 0, 0.514923,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.313559,-99) , 
8, 2.04904, 0, 0, 0.484244,-99) , 
1, -0.822667, 1, 0, 0.534894,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.351719,-99) , 
1, -1.01581, 0, 0, 0.506438,-99)    );
  // itree = 548
  fBoostWeights.push_back(0.264388);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 3825.91, 0, 1, 0.661593,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.630473,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.445445,-99) , 
16, -2.29576, 1, 0, 0.533212,-99) , 
9, 1.37037, 1, 0, 0.595025,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.407209,-99) , 
13, -0.903338, 0, 0, 0.571197,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.300375,-99) , 
15, 0.0154932, 1, 0, 0.542062,-99)    );
  // itree = 549
  fBoostWeights.push_back(0.260398);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.68104,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.499654,-99) , 
13, -0.771812, 0, 0, 0.628501,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.441538,-99) , 
16, -2.6458, 0, 0, 0.57859,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.633119,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.385334,-99) , 
3, -0.329024, 1, 0, 0.500019,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.285866,-99) , 
4, -2.41175, 1, 0, 0.423068,-99) , 
4, -2.27724, 0, 0, 0.519727,-99)    );
  // itree = 550
  fBoostWeights.push_back(0.27154);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0761197, 1, 1, 0.703846,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.464664,-99) , 
11, 3826.49, 0, 0, 0.597394,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.638086,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.553463,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.314622,-99) , 
6, 1.32531, 1, 0, 0.405886,-99) , 
6, 2.17888, 0, 0, 0.468137,-99) , 
16, -2.3878, 1, 0, 0.529028,-99)    );
  // itree = 551
  fBoostWeights.push_back(0.238773);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.649498,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.48627,-99) , 
5, -0.511603, 1, 0, 0.573302,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.563874,-99) , 
NN_LL(
0, 
0, 
-1, -0.475139, 1, -1, 0.358375,-99) , 
17, 0.0526344, 0, 0, 0.42439,-99) , 
19, 0.0886814, 1, 0, 0.50799,-99) , 
NN_LL(
0, 
0, 
-1, -0.769207, 0, -1, 0.323472,-99) , 
4, -2.48624, 0, 0, 0.465685,-99)    );
  // itree = 552
  fBoostWeights.push_back(0.274949);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.68368,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.490864,-99) , 
12, 3.70932, 1, 0, 0.602587,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.417061, 1, 1, 0.633122,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.607818,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.364073,-99) , 
14, 0.535963, 0, 0, 0.487079,-99) , 
1, -0.892406, 1, 0, 0.553659,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.306424,-99) , 
9, 1.30822, 1, 0, 0.477669,-99) , 
19, 0.0541615, 1, 0, 0.522408,-99)    );
  // itree = 553
  fBoostWeights.push_back(0.226207);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.692803,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.617076,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.464227,-99) , 
2, 0.247481, 1, 0, 0.565234,-99) , 
16, -2.52727, 1, 0, 0.598876,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.447065,-99) , 
8, 2.06091, 0, 0, 0.557843,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.302679,-99) , 
19, 0.162017, 1, 0, 0.527282,-99)    );
  // itree = 554
  fBoostWeights.push_back(0.292065);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.21286, 0, 1, 0.673408,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.615384,-99) , 
NN_LL(
0, 
0, 
-1, -2.12959, 0, -1, 0.386014,-99) , 
7, 0.224558, 0, 0, 0.49139,-99) , 
14, 0.41674, 0, 0, 0.582258,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.369524,-99) , 
3, 0.000225552, 1, 0, 0.551436,-99)    );
  // itree = 555
  fBoostWeights.push_back(0.221657);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.701055,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.56708,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.423406,-99) , 
7, 0.161019, 1, 0, 0.495565,-99) , 
17, 0.0192278, 1, 0, 0.579972,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.509884,-99) , 
NN_LL(
0, 
0, 
-1, 3.33673, 1, -1, 0.350625,-99) , 
8, 2.80718, 0, 0, 0.407575,-99) , 
0, -0.737478, 1, 0, 0.472401,-99)    );
  // itree = 556
  fBoostWeights.push_back(0.273158);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.971646, 0, 1, 0.697134,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.634156,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.479148,-99) , 
17, 0.0239273, 0, 0, 0.564829,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.301584,-99) , 
0, -0.6806, 1, 0, 0.489047,-99) , 
8, 2.22302, 0, 0, 0.571209,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.379414,-99) , 
10, 1.29184, 0, 0, 0.539456,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.400243,-99) , 
0, -0.364434, 1, 0, 0.506258,-99)    );
  // itree = 557
  fBoostWeights.push_back(0.356017);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.648899,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.627179,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.65037,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.348771,-99) , 
11, 3459.68, 0, 0, 0.536287,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.345899,-99) , 
14, 0.62166, 1, 0, 0.461904,-99) , 
5, -0.465061, 0, 0, 0.503788,-99) , 
12, 3.94284, 0, 0, 0.542543,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.184018,-99) , 
5, -1.28564, 0, 0, 0.491169,-99)    );
  // itree = 558
  fBoostWeights.push_back(0.299983);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.765303,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.679115,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.627041,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.420111,-99) , 
3, -0.56572, 0, 0, 0.546021,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.543857,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.40278,-99) , 
2, 0.295136, 0, 0, 0.478171,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.274472,-99) , 
12, 3.48564, 0, 0, 0.402869,-99) , 
10, 1.77007, 1, 0, 0.455959,-99) , 
11, 9299.13, 0, 0, 0.489135,-99) , 
12, 3.03527, 1, 0, 0.523295,-99)    );
  // itree = 559
  fBoostWeights.push_back(0.261484);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.739113,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.625356,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.431589,-99) , 
1, -0.78902, 0, 0, 0.522261,-99) , 
19, 0.0700744, 1, 0, 0.613245,-99) , 
NN_LL(
0, 
0, 
-1, 0.612424, 0, -1, 0.443848,-99) , 
17, 0.0435362, 1, 0, 0.547219,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.52029,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.283632,-99) , 
17, 0.033868, 0, 0, 0.371558,-99) , 
16, -2.17759, 1, 0, 0.474534,-99)    );
  // itree = 560
  fBoostWeights.push_back(0.208719);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.498717, 1, 1, 0.609862,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.624386,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.486274,-99) , 
4, -2.25718, 0, 0, 0.550832,-99) , 
NN_LL(
0, 
0, 
-1, 0.0531475, 1, -1, 0.382081,-99) , 
15, 0.00265055, 1, 0, 0.437111,-99) , 
15, 0.0115866, 0, 0, 0.476436,-99)    );
  // itree = 561
  fBoostWeights.push_back(0.26762);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.671074,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.647681,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.536243,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.33182,-99) , 
5, -0.393394, 1, 0, 0.472303,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.318971,-99) , 
13, -0.743947, 0, 0, 0.420398,-99) , 
4, -1.83608, 0, 0, 0.474519,-99) , 
2, -0.287533, 1, 0, 0.51287,-99)    );
  // itree = 562
  fBoostWeights.push_back(0.196381);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.662571,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.608362,-99) , 
NN_LL(
0, 
0, 
-1, 1.25057, 0, -1, 0.450894,-99) , 
1, -0.959421, 1, 0, 0.50592,-99) , 
1, -0.60152, 0, 0, 0.54147,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.383046,-99) , 
1, -0.388203, 1, 0, 0.504525,-99)    );
  // itree = 563
  fBoostWeights.push_back(0.241579);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -2.3713, 0, 1, 0.641031,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.601316,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.546351,-99) , 
NN_LL(
0, 
0, 
-1, 1.11455, 0, -1, 0.301116,-99) , 
9, 1.30149, 0, 0, 0.437052,-99) , 
4, -1.86764, 0, 0, 0.48092,-99) , 
6, 1.02919, 1, 0, 0.521443,-99)    );
  // itree = 564
  fBoostWeights.push_back(0.21525);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.385475, 1, 1, 0.610383,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.430763,-99) , 
5, -1.3514, 0, 0, 0.584793,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.54026,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.305964,-99) , 
5, -0.942897, 0, 0, 0.433243,-99) , 
12, 3.24417, 0, 0, 0.547481,-99)    );
  // itree = 565
  fBoostWeights.push_back(0.2162);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.653233,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.48711,-99) , 
6, 1.52157, 1, 0, 0.592386,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.623272,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.454275,-99) , 
17, 0.038511, 1, 0, 0.551557,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.370842,-99) , 
0, -0.66994, 0, 0, 0.492748,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.382893,-99) , 
0, -0.367048, 1, 0, 0.450386,-99) , 
0, -0.814183, 1, 0, 0.493094,-99)    );
  // itree = 566
  fBoostWeights.push_back(0.303901);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.672119,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.637635,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.615267,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.319652,-99) , 
12, 3.26629, 1, 0, 0.455548,-99) , 
11, 4571.07, 0, 0, 0.538541,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.334293,-99) , 
1, -0.944809, 0, 0, 0.493106,-99) , 
18, 1.86751, 0, 0, 0.537208,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.378672,-99) , 
16, -1.93418, 1, 0, 0.501913,-99)    );
  // itree = 567
  fBoostWeights.push_back(0.28489);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.04324, 0, 1, 0.644505,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.626511,-99) , 
NN_LL(
0, 
0, 
-1, 2.2513, 0, -1, 0.388323,-99) , 
15, 0.0129212, 0, 0, 0.450378,-99) , 
11, 5337.49, 0, 0, 0.52458,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.315366,-99) , 
10, 1.27444, 0, 0, 0.480948,-99)    );
  // itree = 568
  fBoostWeights.push_back(0.24352);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.632319,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.688517,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.581354,-99) , 
NN_LL(
0, 
0, 
-1, -0.657901, 0, -1, 0.413786,-99) , 
5, -0.484109, 0, 0, 0.464477,-99) , 
15, 0.0113363, 0, 0, 0.50267,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.274107,-99) , 
19, 0.186715, 1, 0, 0.47596,-99) , 
12, 4.16937, 0, 0, 0.501724,-99)    );
  // itree = 569
  fBoostWeights.push_back(0.211824);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.680794,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.592489,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.435163,-99) , 
4, -2.26188, 0, 0, 0.520474,-99) , 
3, -0.170478, 0, 0, 0.561706,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.580689,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.451944,-99) , 
9, 1.04527, 0, 0, 0.517623,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.336327,-99) , 
9, 1.20263, 1, 0, 0.450166,-99) , 
19, 0.10657, 1, 0, 0.524044,-99)    );
  // itree = 570
  fBoostWeights.push_back(0.257253);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.724118,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.487111,-99) , 
5, -1.24631, 0, 0, 0.641599,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.478135,-99) , 
18, 1.5837, 1, 0, 0.586883,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.399634,-99) , 
2, 0.477238, 1, 0, 0.547691,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.575364,-99) , 
NN_LL(
0, 
0, 
-1, 1.96954, 0, -1, 0.272984,-99) , 
12, 3.61418, 0, 0, 0.41677,-99) , 
7, 0.128953, 0, 0, 0.494517,-99)    );
  // itree = 571
  fBoostWeights.push_back(0.247799);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.720973,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.08149, 0, 1, 0.614891,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.466126,-99) , 
17, 0.0483363, 1, 0, 0.572495,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.392153,-99) , 
9, 1.57798, 1, 0, 0.535231,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.331305,-99) , 
13, -0.908705, 0, 0, 0.501867,-99) , 
0, -0.146197, 0, 0, 0.529336,-99)    );
  // itree = 572
  fBoostWeights.push_back(0.22417);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.658019,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.630198,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.471507,-99) , 
3, -0.356516, 1, 0, 0.554439,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.354242,-99) , 
0, -0.887689, 0, 0, 0.508834,-99) , 
19, 0.0490709, 1, 0, 0.562068,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.411703,-99) , 
4, -1.8897, 1, 0, 0.521729,-99)    );
  // itree = 573
  fBoostWeights.push_back(0.259981);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.658279,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.611907,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.430926,-99) , 
7, 0.193222, 1, 0, 0.531345,-99) , 
19, 0.073324, 1, 0, 0.584537,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.571753,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.298036,-99) , 
3, -0.147582, 0, 0, 0.466921,-99) , 
3, -0.325596, 1, 0, 0.533172,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.326452,-99) , 
11, 2474.32, 0, 0, 0.508527,-99)    );
  // itree = 574
  fBoostWeights.push_back(0.226631);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.18903, 0, 1, 0.678114,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.611773,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.363189,-99) , 
16, -2.42884, 0, 0, 0.50464,-99) , 
12, 3.62263, 1, 0, 0.592401,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.446885,-99) , 
10, 1.24354, 0, 0, 0.560309,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.500967,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.344277,-99) , 
2, 0.235402, 1, 0, 0.433517,-99) , 
17, 0.0144898, 0, 0, 0.523778,-99)    );
  // itree = 575
  fBoostWeights.push_back(0.258036);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 3.45061, 0, 1, 0.630835,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.540557,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.33207,-99) , 
14, 0.481842, 0, 0, 0.445448,-99) , 
6, 1.24731, 0, 0, 0.542898,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.367489,-99) , 
6, 2.16648, 1, 0, 0.507226,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.354491,-99) , 
12, 4.01439, 1, 0, 0.465656,-99)    );
  // itree = 576
  fBoostWeights.push_back(0.215353);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.634801,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.593648,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.432117,-99) , 
18, 1.63787, 1, 0, 0.526145,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.522213,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.366635,-99) , 
9, 1.07757, 1, 0, 0.440335,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.268519,-99) , 
12, 3.37176, 0, 0, 0.383967,-99) , 
13, -0.659003, 0, 0, 0.468795,-99) , 
0, -1.00971, 1, 0, 0.489441,-99)    );
  // itree = 577
  fBoostWeights.push_back(0.229786);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.620183,-99) , 
NN_LL(
0, 
0, 
-1, 3804.99, 1, -1, 0.429567,-99) , 
18, 1.2958, 0, 0, 0.52894,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.557917,-99) , 
NN_LL(
0, 
0, 
-1, -0.851344, 1, -1, 0.342329,-99) , 
8, 2.68375, 0, 0, 0.409679,-99) , 
12, 3.50319, 1, 0, 0.463475,-99)    );
  // itree = 578
  fBoostWeights.push_back(0.281715);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0282362, 1, 1, 0.672999,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.637969,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.586647,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.436174,-99) , 
16, -2.39432, 1, 0, 0.485175,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.261248,-99) , 
8, 2.04991, 0, 0, 0.439698,-99) , 
1, -0.884462, 1, 0, 0.476009,-99) , 
10, 2.27214, 0, 0, 0.530684,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.29365,-99) , 
1, -1.08162, 0, 0, 0.503778,-99)    );
  // itree = 579
  fBoostWeights.push_back(0.315909);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.21226, 0, 1, 0.665596,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.401642,-99) , 
2, 0.340342, 1, 0, 0.5626,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.612949,-99) , 
NN_LL(
0, 
0, 
-1, 1.96954, 0, -1, 0.354018,-99) , 
0, -0.567186, 0, 0, 0.476776,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.230763,-99) , 
11, 3226.62, 0, 0, 0.416159,-99) , 
6, 1.33927, 1, 0, 0.483875,-99)    );
  // itree = 580
  fBoostWeights.push_back(0.274548);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.704396,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.3649, 0, 1, 0.623272,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.408059,-99) , 
8, 1.84597, 0, 0, 0.537762,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.503561,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.32863,-99) , 
6, 1.61555, 1, 0, 0.401705,-99) , 
8, 2.34785, 1, 0, 0.477738,-99) , 
7, 0.578327, 0, 0, 0.507037,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.287784,-99) , 
3, -0.0129423, 1, 0, 0.472423,-99)    );
  // itree = 581
  fBoostWeights.push_back(0.221183);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.692266,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.480279,-99) , 
17, 0.0432573, 1, 0, 0.628897,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.546966,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.382138,-99) , 
4, -2.22683, 0, 0, 0.478577,-99) , 
12, 3.41602, 0, 0, 0.572184,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.557397,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.381595,-99) , 
0, -0.256129, 0, 0, 0.448837,-99) , 
9, 1.3811, 1, 0, 0.528269,-99)    );
  // itree = 582
  fBoostWeights.push_back(0.262034);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.68978,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.499885,-99) , 
14, 0.458019, 1, 0, 0.613478,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 3381.48, 0, 1, 0.576535,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.349171,-99) , 
3, -0.420765, 0, 0, 0.488687,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.293881,-99) , 
7, 0.0641567, 0, 0, 0.43058,-99) , 
11, 6371.2, 0, 0, 0.491369,-99)    );
  // itree = 583
  fBoostWeights.push_back(0.274872);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.687254,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.522542,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.331027,-99) , 
4, -1.98625, 1, 0, 0.453433,-99) , 
1, -0.864929, 1, 0, 0.532225,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.564844,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.395795,-99) , 
18, 0.909504, 0, 0, 0.481719,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.239784,-99) , 
17, 0.0238521, 0, 0, 0.370466,-99) , 
18, 1.22113, 0, 0, 0.466987,-99)    );
  // itree = 584
  fBoostWeights.push_back(0.241988);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.713196, 0, 1, 0.640164,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.600228,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.430474,-99) , 
2, 0.346069, 1, 0, 0.507556,-99) , 
16, -2.45111, 0, 0, 0.577753,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.362017,-99) , 
19, 0.177524, 1, 0, 0.545886,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.375241,-99) , 
16, -1.88774, 1, 0, 0.510531,-99)    );
  // itree = 585
  fBoostWeights.push_back(0.227966);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.644131,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.631928,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.533344,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.403359,-99) , 
19, 0.0732078, 0, 0, 0.458031,-99) , 
11, 7821.11, 0, 0, 0.484203,-99) , 
NN_LL(
0, 
0, 
-1, 0.0961025, 1, -1, 0.289459,-99) , 
19, 0.125808, 1, 0, 0.441375,-99) , 
13, -1.02547, 1, 0, 0.463142,-99)    );
  // itree = 586
  fBoostWeights.push_back(0.219776);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.693324,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.594265,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.427358,-99) , 
6, 1.59293, 1, 0, 0.540951,-99) , 
7, 0.0306234, 1, 0, 0.580038,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.395002,-99) , 
4, -2.27593, 0, 0, 0.534191,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.520765,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.320068,-99) , 
15, 0.0019132, 1, 0, 0.418793,-99) , 
15, 0.00391212, 0, 0, 0.490134,-99)    );
  // itree = 587
  fBoostWeights.push_back(0.204187);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.708798,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.64351,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.494488,-99) , 
12, 3.57164, 1, 0, 0.552726,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.393995,-99) , 
4, -2.40908, 0, 0, 0.512585,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.329165,-99) , 
19, 0.162017, 1, 0, 0.486908,-99) , 
8, 3.16814, 0, 0, 0.51479,-99)    );
  // itree = 588
  fBoostWeights.push_back(0.218888);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.675806,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.592735,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.438995,-99) , 
15, 0.00384492, 1, 0, 0.504367,-99) , 
3, -0.46584, 1, 0, 0.564571,-99) , 
NN_LL(
0, 
0, 
-1, 0.105133, 1, -1, 0.39742,-99) , 
18, 1.13617, 0, 0, 0.512281,-99)    );
  // itree = 589
  fBoostWeights.push_back(0.176992);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -2.09028, 0, 1, 0.582266,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.52654,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.265207,-99) , 
13, -0.69425, 0, 0, 0.444678,-99) , 
11, 5398.94, 0, 0, 0.50532,-99)    );
  // itree = 590
  fBoostWeights.push_back(0.233064);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0149868, 0, 1, 0.617152,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.380203,-99) , 
0, -0.378219, 1, 0, 0.561062,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.568882,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.409274,-99) , 
16, -2.46069, 1, 0, 0.487891,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.308034,-99) , 
5, -1.01423, 0, 0, 0.437878,-99) , 
17, 0.0290244, 1, 0, 0.49989,-99)    );
  // itree = 591
  fBoostWeights.push_back(0.245158);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.160402, 0, 1, 0.60903,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.566906,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.371282,-99) , 
14, 0.751211, 0, 0, 0.47742,-99) , 
NN_LL(
0, 
0, 
-1, 3799.1, 0, -1, 0.340602,-99) , 
10, 2.15694, 0, 0, 0.413774,-99) , 
2, -0.0432057, 1, 0, 0.473155,-99)    );
  // itree = 592
  fBoostWeights.push_back(0.250183);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.69734,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.495101,-99) , 
6, 1.52937, 0, 0, 0.598957,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.656434,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.452487,-99) , 
4, -2.05275, 1, 0, 0.53208,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.365879,-99) , 
4, -2.30942, 0, 0, 0.472957,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.298784,-99) , 
2, -0.0455379, 0, 0, 0.425719,-99) , 
12, 3.84712, 0, 0, 0.482038,-99)    );
  // itree = 593
  fBoostWeights.push_back(0.19668);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0957269, 1, 1, 0.646579,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.475965,-99) , 
14, 0.621226, 1, 0, 0.589486,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.432843,-99) , 
17, 0.0145297, 0, 0, 0.540243,-99) , 
NN_LL(
0, 
0, 
-1, -2.38334, 0, -1, 0.395261,-99) , 
0, -0.428666, 1, 0, 0.493876,-99)    );
  // itree = 594
  fBoostWeights.push_back(0.229843);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 3.7444, 0, 1, 0.584231,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.68345,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.45103,-99) , 
8, 1.86967, 0, 0, 0.58847,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.393935,-99) , 
10, 1.94792, 0, 0, 0.508268,-99) , 
NN_LL(
0, 
0, 
-1, 1.56381, 1, -1, 0.374849,-99) , 
8, 2.31546, 1, 0, 0.45092,-99) , 
19, 0.0358001, 1, 0, 0.48232,-99)    );
  // itree = 595
  fBoostWeights.push_back(0.241961);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.630293,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.631135,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.415268,-99) , 
4, -2.11544, 0, 0, 0.535673,-99) , 
NN_LL(
0, 
0, 
-1, 2.27606, 0, -1, 0.381237,-99) , 
5, -1.09978, 1, 0, 0.428066,-99) , 
0, -0.270546, 0, 0, 0.462463,-99)    );
  // itree = 596
  fBoostWeights.push_back(0.229101);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.678363,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.650086,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.442602,-99) , 
4, -2.12685, 1, 0, 0.538508,-99) , 
15, 0.00648761, 1, 0, 0.618848,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.501315,-99) , 
2, -0.133039, 0, 0, 0.586946,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.595578,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.344187,-99) , 
10, 2.06932, 0, 0, 0.446877,-99) , 
17, 0.0145106, 0, 0, 0.550696,-99)    );
  // itree = 597
  fBoostWeights.push_back(0.240325);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0237626, 1, 1, 0.669415,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.465586,-99) , 
0, -0.402049, 1, 0, 0.597625,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.409989,-99) , 
15, 0.0129143, 1, 0, 0.563435,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.533226,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.32829,-99) , 
1, -0.740513, 1, 0, 0.401306,-99) , 
2, -0.129008, 0, 0, 0.516157,-99)    );
  // itree = 598
  fBoostWeights.push_back(0.311604);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.717972,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.561248, 0, 1, 0.677218,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.448813,-99) , 
0, -0.680752, 1, 0, 0.606074,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.615916,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.374075,-99) , 
12, 3.32855, 1, 0, 0.452209,-99) , 
8, 2.27338, 1, 0, 0.534261,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.288254,-99) , 
4, -2.5871, 0, 0, 0.502355,-99) , 
1, -0.233958, 0, 0, 0.529417,-99)    );
  // itree = 599
  fBoostWeights.push_back(0.220795);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.724416,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.498162,-99) , 
12, 3.60111, 1, 0, 0.619772,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.566121,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.586833,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.4154,-99) , 
17, 0.0288841, 1, 0, 0.490894,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.316571,-99) , 
2, -0.00449939, 0, 0, 0.423194,-99) , 
7, 0.386431, 0, 0, 0.472318,-99) , 
8, 2.7964, 0, 0, 0.512485,-99)    );
  // itree = 600
  fBoostWeights.push_back(0.180967);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.672688,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.731532, 0, 1, 0.609146,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.453439,-99) , 
0, -0.529859, 1, 0, 0.553616,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.504172,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.325102,-99) , 
5, -1.05647, 0, 0, 0.440424,-99) , 
4, -2.24116, 0, 0, 0.507683,-99) , 
8, 3.17028, 0, 0, 0.527816,-99)    );
  // itree = 601
  fBoostWeights.push_back(0.215947);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.664399,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.699706,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.513192,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.315942,-99) , 
3, -0.535798, 0, 0, 0.45809,-99) , 
1, -0.880792, 1, 0, 0.508372,-99) , 
0, -0.539101, 0, 0, 0.555369,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.425987,-99) , 
13, -0.264144, 1, 0, 0.530946,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.384937,-99) , 
1, -1.06323, 0, 0, 0.512354,-99)    );
  // itree = 602
  fBoostWeights.push_back(0.244063);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.518445, 0, 1, 0.607999,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.407019,-99) , 
4, -2.31722, 0, 0, 0.550396,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.532928,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.359959,-99) , 
6, 1.51682, 1, 0, 0.452683,-99) , 
NN_LL(
0, 
0, 
-1, 0.674298, 1, -1, 0.288097,-99) , 
0, -0.637405, 0, 0, 0.393542,-99) , 
8, 2.13857, 1, 0, 0.451702,-99)    );
  // itree = 603
  fBoostWeights.push_back(0.242471);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 3.2617, 1, 1, 0.660967,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.585345,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.558041,-99) , 
NN_LL(
0, 
0, 
-1, 0.266839, 0, -1, 0.353425,-99) , 
17, 0.0480782, 0, 0, 0.425943,-99) , 
11, 6375.86, 0, 0, 0.477334,-99) , 
8, 2.80827, 0, 0, 0.521561,-99)    );
  // itree = 604
  fBoostWeights.push_back(0.246037);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.706471,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.49168,-99) , 
6, 1.077, 0, 0, 0.617566,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.429883,-99) , 
6, 1.8, 1, 0, 0.560345,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.660917,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.459687,-99) , 
12, 3.21743, 1, 0, 0.560958,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.361682,-99) , 
12, 3.07637, 0, 0, 0.487562,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.315168,-99) , 
12, 3.41215, 1, 0, 0.441982,-99) , 
12, 3.567, 0, 0, 0.501111,-99)    );
  // itree = 605
  fBoostWeights.push_back(0.266291);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.684261,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.666031,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.491774,-99) , 
0, -0.466, 0, 0, 0.563674,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.57711,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.367128,-99) , 
1, -0.758341, 0, 0, 0.485028,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.245838,-99) , 
7, 0.244039, 1, 0, 0.39029,-99) , 
19, 0.0720693, 1, 0, 0.474951,-99) , 
18, 0.719376, 1, 0, 0.511275,-99)    );
  // itree = 606
  fBoostWeights.push_back(0.276142);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.70692,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.499827,-99) , 
19, 0.0777356, 1, 0, 0.596797,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.342565,-99) , 
15, 0.00131843, 0, 0, 0.534281,-99) , 
NN_LL(
0, 
0, 
-1, 1.2287, 1, -1, 0.382619,-99) , 
0, -0.714736, 0, 0, 0.490852,-99) , 
NN_LL(
0, 
0, 
-1, -0.957479, 1, -1, 0.288978,-99) , 
9, 1.07302, 0, 0, 0.446928,-99)    );
  // itree = 607
  fBoostWeights.push_back(0.230241);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.633621,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.64194,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.481924,-99) , 
17, 0.0241757, 1, 0, 0.572548,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.585012,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.404585,-99) , 
7, 0.15977, 0, 0, 0.509223,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.320759,-99) , 
11, 5832.92, 1, 0, 0.45037,-99) , 
0, -0.794951, 1, 0, 0.488789,-99) , 
4, -1.83086, 0, 0, 0.516614,-99)    );
  // itree = 608
  fBoostWeights.push_back(0.27813);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.667783,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.70178,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.573364,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.506255,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.220542,-99) , 
1, -0.612507, 1, 0, 0.374118,-99) , 
6, 1.70293, 0, 0, 0.45056,-99) , 
4, -2.52368, 1, 0, 0.496934,-99) , 
4, -1.94221, 0, 0, 0.550549,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.38717,-99) , 
12, 3.08098, 0, 0, 0.52559,-99)    );
  // itree = 609
  fBoostWeights.push_back(0.202419);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.75475, 0, 1, 0.61877,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.551711,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.417417,-99) , 
15, 0.00198656, 1, 0, 0.469029,-99) , 
9, 1.38336, 1, 0, 0.544988,-99) , 
NN_LL(
0, 
0, 
-1, 0.0338508, 0, -1, 0.383272,-99) , 
15, 0.0103536, 1, 0, 0.509439,-99)    );
  // itree = 610
  fBoostWeights.push_back(0.306001);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.781125,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.460142,-99) , 
11, 4966.83, 0, 0, 0.618298,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.610339,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.398442,-99) , 
13, -0.706166, 0, 0, 0.543636,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.332027,-99) , 
9, 1.5584, 1, 0, 0.483284,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.289115,-99) , 
1, -0.87576, 0, 0, 0.436396,-99) , 
7, 0.41769, 0, 0, 0.475262,-99)    );
  // itree = 611
  fBoostWeights.push_back(0.201457);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.617155,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.591035,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.414075,-99) , 
13, -0.245441, 0, 0, 0.484818,-99) , 
15, 0.00321861, 0, 0, 0.556451,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.446766,-99) , 
8, 2.05379, 0, 0, 0.526702,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.334512,-99) , 
19, 0.162017, 1, 0, 0.502937,-99)    );
  // itree = 612
  fBoostWeights.push_back(0.214972);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.692615,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.613883,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.474552,-99) , 
19, 0.106201, 1, 0, 0.556961,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.373306,-99) , 
14, 0.0580155, 0, 0, 0.518697,-99) , 
1, -0.409845, 0, 0, 0.555489,-99) , 
NN_LL(
0, 
0, 
-1, 2.422, 1, -1, 0.404431,-99) , 
2, 0.479909, 1, 0, 0.511468,-99)    );
  // itree = 613
  fBoostWeights.push_back(0.223375);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.826995, 0, 1, 0.664075,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.483735,-99) , 
9, 1.13754, 0, 0, 0.590539,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.403209,-99) , 
10, 2.34664, 1, 0, 0.551352,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.543004,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.341122,-99) , 
6, 1.22967, 1, 0, 0.407167,-99) , 
5, -0.668738, 1, 0, 0.49309,-99)    );
  // itree = 614
  fBoostWeights.push_back(0.254613);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.649235,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.623901,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.509569,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.334195,-99) , 
3, -0.498577, 1, 0, 0.424642,-99) , 
13, -0.631683, 0, 0, 0.507533,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.333431,-99) , 
1, -0.438179, 1, 0, 0.455981,-99) , 
12, 3.03344, 1, 0, 0.482929,-99)    );
  // itree = 615
  fBoostWeights.push_back(0.268484);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.74725,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.57331,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.355698,-99) , 
15, 0.00911143, 1, 0, 0.509334,-99) , 
11, 6757.82, 0, 0, 0.563135,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.545892,-99) , 
NN_LL(
0, 
0, 
-1, 2.31694, 0, -1, 0.332101,-99) , 
0, -0.789264, 1, 0, 0.390355,-99) , 
2, 0.0384342, 0, 0, 0.494979,-99)    );
  // itree = 616
  fBoostWeights.push_back(0.260038);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.694668,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.616165,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.585959,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.502792,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.301923,-99) , 
10, 2.1547, 1, 0, 0.434785,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.230698,-99) , 
11, 3457.85, 0, 0, 0.376435,-99) , 
3, -0.166424, 0, 0, 0.4423,-99) , 
16, -2.05468, 0, 0, 0.491267,-99) , 
12, 3.08511, 1, 0, 0.523855,-99)    );
  // itree = 617
  fBoostWeights.push_back(0.217342);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.622591,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.644105,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.421301,-99) , 
12, 3.4916, 0, 0, 0.548065,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.52145,-99) , 
NN_LL(
0, 
0, 
-1, 1.96327, 0, -1, 0.341892,-99) , 
1, -0.58254, 0, 0, 0.423683,-99) , 
6, 1.25514, 1, 0, 0.472984,-99) , 
17, 0.00965398, 1, 0, 0.498352,-99)    );
  // itree = 618
  fBoostWeights.push_back(0.23528);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.649188,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.426893,-99) , 
3, -0.423975, 0, 0, 0.574659,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.596335,-99) , 
NN_LL(
0, 
0, 
-1, -0.757696, 0, -1, 0.384467,-99) , 
3, -0.713588, 1, 0, 0.422895,-99) , 
16, -2.5962, 1, 0, 0.468115,-99)    );
  // itree = 619
  fBoostWeights.push_back(0.196187);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.377811, 0, 1, 0.597504,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.596547,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.456924,-99) , 
11, 3365.29, 0, 0, 0.529454,-99) , 
NN_LL(
0, 
0, 
-1, -0.531847, 1, -1, 0.363222,-99) , 
18, 1.21702, 0, 0, 0.464566,-99) , 
11, 6758.36, 0, 0, 0.503316,-99)    );
  // itree = 620
  fBoostWeights.push_back(0.304726);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.75717,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.682227,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.488498,-99) , 
18, 1.15202, 1, 0, 0.575563,-99) , 
14, 0.397481, 1, 0, 0.624748,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.547519,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.322644,-99) , 
10, 2.063, 0, 0, 0.439448,-99) , 
17, 0.0148464, 0, 0, 0.562413,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.363425,-99) , 
17, 0.0768645, 1, 0, 0.53489,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.270272,-99) , 
10, 1.27022, 0, 0, 0.482023,-99)    );
  // itree = 621
  fBoostWeights.push_back(0.242859);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.66763,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.461305,-99) , 
12, 3.59616, 1, 0, 0.573082,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.412102,-99) , 
17, 0.0130643, 0, 0, 0.528317,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.316728,-99) , 
17, 0.0674007, 1, 0, 0.496956,-99) , 
NN_LL(
0, 
0, 
-1, 0.222834, 1, -1, 0.372603,-99) , 
3, -0.522016, 0, 0, 0.454085,-99)    );
  // itree = 622
  fBoostWeights.push_back(0.207221);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.22808, 0, 1, 0.589701,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.413778,-99) , 
18, 0.91629, 0, 0, 0.547725,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.541238,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.271091,-99) , 
15, 0.0165409, 0, 0, 0.39848,-99) , 
19, 0.124261, 1, 0, 0.509265,-99)    );
  // itree = 623
  fBoostWeights.push_back(0.218423);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.00524433, 1, 1, 0.681563,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.484051,-99) , 
4, -2.30745, 0, 0, 0.61777,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.504868,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.210429,-99) , 
15, 0.0090944, 1, 0, 0.423281,-99) , 
18, 1.3078, 0, 0, 0.527514,-99)    );
  // itree = 624
  fBoostWeights.push_back(0.236511);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.690666,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.587236,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.541053,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.421784,-99) , 
3, -0.38141, 1, 0, 0.48828,-99) , 
NN_LL(
0, 
0, 
-1, 0.176689, 1, -1, 0.290954,-99) , 
19, 0.0904343, 1, 0, 0.416418,-99) , 
4, -1.8198, 0, 0, 0.46263,-99) , 
6, 0.773607, 1, 0, 0.490296,-99)    );
  // itree = 625
  fBoostWeights.push_back(0.231482);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.733294,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.482364,-99) , 
2, 0.197538, 0, 0, 0.579171,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.505103,-99) , 
NN_LL(
0, 
0, 
-1, 2.04987, 0, -1, 0.317408,-99) , 
4, -1.97688, 0, 0, 0.417918,-99) , 
19, 0.0720693, 1, 0, 0.488527,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.269754,-99) , 
18, 0.714545, 0, 0, 0.456,-99)    );
  // itree = 626
  fBoostWeights.push_back(0.226533);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.666701,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.584279,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.64106,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.483796,-99) , 
8, 1.8685, 0, 0, 0.566747,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.38627,-99) , 
1, -0.703335, 1, 0, 0.498451,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.366122,-99) , 
9, 1.30585, 1, 0, 0.448649,-99) , 
19, 0.035855, 1, 0, 0.480362,-99) , 
3, 0.0168885, 0, 0, 0.504208,-99)    );
  // itree = 627
  fBoostWeights.push_back(0.211114);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -1.15635, 1, 1, 0.631105,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.459541,-99) , 
12, 3.40087, 0, 0, 0.569654,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.55386,-99) , 
NN_LL(
0, 
0, 
-1, 1.69162, 1, -1, 0.341238,-99) , 
17, 0.0288551, 1, 0, 0.438961,-99) , 
14, 0.422082, 0, 0, 0.510635,-99)    );
  // itree = 628
  fBoostWeights.push_back(0.20795);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -1.08152, 0, 1, 0.628029,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.399999,-99) , 
5, -0.562357, 1, 0, 0.573073,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.548923,-99) , 
NN_LL(
0, 
0, 
-1, -2.53394, 0, -1, 0.392788,-99) , 
12, 3.28515, 1, 0, 0.45574,-99) , 
11, 4665.48, 0, 0, 0.514436,-99)    );
  // itree = 629
  fBoostWeights.push_back(0.256488);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.660423,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.497088,-99) , 
6, 1.32604, 0, 0, 0.609662,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.635688,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.545411,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.471384,-99) , 
2, -0.153691, 0, 0, 0.50916,-99) , 
12, 3.81614, 0, 0, 0.559463,-99) , 
NN_LL(
0, 
0, 
-1, 0.0287282, 1, -1, 0.304109,-99) , 
14, 0.579108, 1, 0, 0.439073,-99) , 
13, -0.454181, 0, 0, 0.49694,-99)    );
  // itree = 630
  fBoostWeights.push_back(0.247666);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.61928,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.669199,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.482252,-99) , 
16, -2.33969, 0, 0, 0.556622,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.626808,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.379352,-99) , 
17, 0.038677, 0, 0, 0.499265,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.317677,-99) , 
4, -2.11758, 1, 0, 0.412158,-99) , 
0, -0.751742, 1, 0, 0.47088,-99) , 
1, -0.304956, 0, 0, 0.496309,-99)    );
  // itree = 631
  fBoostWeights.push_back(0.209801);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.69352,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.452915,-99) , 
8, 2.05799, 1, 0, 0.612112,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.609461,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.450164,-99) , 
9, 1.40311, 0, 0, 0.523809,-99) , 
NN_LL(
0, 
0, 
-1, -0.502757, 1, -1, 0.400608,-99) , 
14, 0.41674, 0, 0, 0.464089,-99) , 
13, -0.819794, 1, 0, 0.504665,-99)    );
  // itree = 632
  fBoostWeights.push_back(0.203854);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.562621,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.524552,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.60966,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.427436,-99) , 
11, 2991.66, 1, 0, 0.517597,-99) , 
NN_LL(
0, 
0, 
-1, 1.98864, 1, -1, 0.271815,-99) , 
9, 1.17166, 1, 0, 0.383137,-99) , 
11, 5704.25, 0, 0, 0.437504,-99) , 
5, -0.510356, 0, 0, 0.465819,-99)    );
  // itree = 633
  fBoostWeights.push_back(0.261556);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.48568, 1, 1, 0.650156,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.610222,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.55706,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.36738,-99) , 
17, 0.0183703, 1, 0, 0.446841,-99) , 
17, 0.0569088, 0, 0, 0.496876,-99) , 
7, 0.192743, 0, 0, 0.574435,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.416399,-99) , 
1, -0.273165, 1, 0, 0.542912,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.303406,-99) , 
1, -1.06323, 0, 0, 0.514291,-99)    );
  // itree = 634
  fBoostWeights.push_back(0.230469);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.652599,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.490341,-99) , 
18, 1.5896, 1, 0, 0.599855,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.415189,-99) , 
4, -1.97463, 1, 0, 0.549925,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.393942,-99) , 
8, 2.06091, 0, 0, 0.519746,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.311064,-99) , 
19, 0.158576, 1, 0, 0.491672,-99)    );
  // itree = 635
  fBoostWeights.push_back(0.212233);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.863796, 1, 1, 0.717035,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.635327,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.463517,-99) , 
8, 2.68274, 0, 0, 0.52644,-99) , 
15, 0.00778602, 0, 0, 0.609669,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.453459,-99) , 
2, 0.488087, 1, 0, 0.563915,-99) , 
NN_LL(
0, 
0, 
-1, -2.2039, 0, -1, 0.408477,-99) , 
2, -0.111814, 0, 0, 0.520514,-99)    );
  // itree = 636
  fBoostWeights.push_back(0.266539);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.655887,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.462194,-99) , 
18, 1.89771, 1, 0, 0.589529,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.642036,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.333426,-99) , 
8, 2.40486, 1, 0, 0.439501,-99) , 
18, 1.22113, 0, 0, 0.530859,-99) , 
NN_LL(
0, 
0, 
-1, -2.24721, 0, -1, 0.375501,-99) , 
1, -0.873525, 0, 0, 0.491516,-99)    );
  // itree = 637
  fBoostWeights.push_back(0.327407);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.71746,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.680238,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.55295,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.420218,-99) , 
18, 1.01204, 1, 0, 0.48644,-99) , 
18, 1.54153, 0, 0, 0.559333,-99) , 
0, -0.783467, 1, 0, 0.601921,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.346301,-99) , 
15, 0.0115761, 1, 0, 0.56218,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.201369,-99) , 
0, -1.02657, 0, 0, 0.522545,-99)    );
  // itree = 638
  fBoostWeights.push_back(0.222157);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.128953, 0, 1, 0.62985,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.647423,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.488053,-99) , 
13, -0.76742, 0, 0, 0.555856,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.511844,-99) , 
NN_LL(
0, 
0, 
-1, -2.40417, 0, -1, 0.31451,-99) , 
12, 3.14336, 1, 0, 0.383304,-99) , 
11, 4665.48, 0, 0, 0.465633,-99) , 
18, 1.71466, 0, 0, 0.522011,-99)    );
  // itree = 639
  fBoostWeights.push_back(0.299388);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.685669,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.613566,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.634995,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.520786,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.268996,-99) , 
11, 4138.09, 0, 0, 0.369165,-99) , 
10, 2.16153, 0, 0, 0.449309,-99) , 
3, -0.210733, 0, 0, 0.507646,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.338979,-99) , 
6, 2.17035, 1, 0, 0.471976,-99) , 
11, 8320.71, 0, 0, 0.501588,-99)    );
  // itree = 640
  fBoostWeights.push_back(0.312928);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.078221, 1, 1, 0.626715,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 1.89447, 1, 1, 0.589035,-99) , 
NN_LL(
0, 
0, 
-1, -0.692296, 1, -1, 0.339075,-99) , 
9, 1.1981, 1, 0, 0.427701,-99) , 
3, -0.22084, 0, 0, 0.483593,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.241523,-99) , 
4, -2.59753, 0, 0, 0.447786,-99)    );
  // itree = 641
  fBoostWeights.push_back(0.239159);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.701759,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.598625,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.420677,-99) , 
1, -0.508157, 1, 0, 0.522721,-99) , 
18, 1.79689, 0, 0, 0.579218,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.442107,-99) , 
4, -2.03996, 1, 0, 0.525572,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.280066,-99) , 
5, -1.25237, 0, 0, 0.488437,-99)    );
  // itree = 642
  fBoostWeights.push_back(0.268651);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.677354,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.631998,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.40813,-99) , 
8, 2.31498, 0, 0, 0.540996,-99) , 
NN_LL(
0, 
0, 
-1, -2.31557, 0, -1, 0.419099,-99) , 
12, 3.42058, 0, 0, 0.493596,-99) , 
10, 2.31466, 0, 0, 0.539584,-99) , 
NN_LL(
0, 
0, 
-1, 0.957594, 0, -1, 0.327417,-99) , 
9, 1.06324, 0, 0, 0.497623,-99)    );
  // itree = 643
  fBoostWeights.push_back(0.282522);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.135729, 1, 1, 0.620366,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.719812,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.593093,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.396268,-99) , 
5, -0.604366, 1, 0, 0.500279,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.285033,-99) , 
5, -1.06151, 0, 0, 0.435493,-99) , 
7, 0.644715, 0, 0, 0.480917,-99) , 
4, -2.00685, 0, 0, 0.530394,-99)    );
  // itree = 644
  fBoostWeights.push_back(0.211238);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 3.96758, 0, 1, 0.611623,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.61044,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.427,-99) , 
4, -2.19261, 0, 0, 0.531431,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.500164,-99) , 
NN_LL(
0, 
0, 
-1, 3.51523, 1, -1, 0.340559,-99) , 
2, 0.466503, 0, 0, 0.393616,-99) , 
1, -0.604904, 0, 0, 0.456116,-99) , 
11, 6755.95, 0, 0, 0.501456,-99)    );
  // itree = 645
  fBoostWeights.push_back(0.218097);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.642065,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.49277,-99) , 
7, 0.128527, 0, 0, 0.575234,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.377729,-99) , 
18, 0.843462, 0, 0, 0.527947,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.588903,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.413164,-99) , 
6, 1.36314, 1, 0, 0.478946,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.31646,-99) , 
0, -0.674997, 0, 0, 0.418772,-99) , 
3, -0.394847, 1, 0, 0.473104,-99)    );
  // itree = 646
  fBoostWeights.push_back(0.248661);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.82808, 0, 1, 0.669504,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.441262,-99) , 
17, 0.0241352, 0, 0, 0.586899,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.606131,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.400235,-99) , 
10, 2.35483, 1, 0, 0.498055,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.352947,-99) , 
10, 2.10824, 0, 0, 0.454401,-99) , 
10, 1.7774, 1, 0, 0.511379,-99)    );
  // itree = 647
  fBoostWeights.push_back(0.273433);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.00162031, 1, 1, 0.621794,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.680373,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.410166,-99) , 
16, -2.331, 0, 0, 0.543304,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.352848,-99) , 
12, 3.65086, 1, 0, 0.46298,-99) , 
19, 0.0707085, 1, 0, 0.541555,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.35419,-99) , 
16, -2.83296, 0, 0, 0.509967,-99)    );
  // itree = 648
  fBoostWeights.push_back(0.299719);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.753172,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.620991,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.45549,-99) , 
15, 0.00524475, 1, 0, 0.535338,-99) , 
5, -1.00284, 1, 0, 0.600967,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.557481,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.328616,-99) , 
8, 2.29895, 0, 0, 0.437329,-99) , 
4, -2.29821, 0, 0, 0.54965,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.336446,-99) , 
10, 2.36878, 1, 0, 0.514638,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.261626,-99) , 
18, 0.52815, 0, 0, 0.486667,-99)    );
  // itree = 649
  fBoostWeights.push_back(0.256933);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.707747,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.226353, 1, 1, 0.617679,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.615403,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.410727,-99) , 
14, 0.268587, 1, 0, 0.488348,-99) , 
3, -0.430564, 0, 0, 0.552033,-99) , 
18, 1.88448, 0, 0, 0.585312,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.388774,-99) , 
16, -1.87632, 1, 0, 0.544179,-99)    );
  // itree = 650
  fBoostWeights.push_back(0.28716);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.671024,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.674275,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.356225,-99) , 
8, 1.98505, 1, 0, 0.521419,-99) , 
19, 0.100559, 1, 0, 0.596524,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.425695,-99) , 
18, 0.754272, 0, 0, 0.569653,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.407577,-99) , 
10, 1.29444, 0, 0, 0.535421,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.353051,-99) , 
7, 0.546084, 1, 0, 0.510981,-99)    );
  // itree = 651
  fBoostWeights.push_back(0.216371);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.676166,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.484844,-99) , 
15, 0.00649932, 1, 0, 0.603104,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.598773,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.473337,-99) , 
2, 0.148256, 1, 0, 0.544285,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.379249,-99) , 
9, 1.16064, 0, 0, 0.496815,-99) , 
11, 4960.03, 0, 0, 0.543691,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.347112,-99) , 
3, -0.0566527, 1, 0, 0.509737,-99)    );
  // itree = 652
  fBoostWeights.push_back(0.241093);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.697307,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.612705,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.511652,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.340841,-99) , 
17, 0.0162105, 0, 0, 0.420785,-99) , 
1, -0.785182, 1, 0, 0.518106,-99) , 
5, -0.539867, 0, 0, 0.560391,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.565526,-99) , 
NN_LL(
0, 
0, 
-1, 0.0637059, 0, -1, 0.374831,-99) , 
1, -0.801671, 1, 0, 0.426746,-99) , 
17, 0.0386023, 1, 0, 0.508626,-99)    );
  // itree = 653
  fBoostWeights.push_back(0.24363);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.729556,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.610727,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.588908,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.43326,-99) , 
14, 0.264567, 0, 0, 0.518774,-99) , 
NN_LL(
0, 
0, 
-1, -0.393624, 0, -1, 0.366057,-99) , 
4, -2.14363, 0, 0, 0.454916,-99) , 
3, -0.167559, 0, 0, 0.497409,-99) , 
7, 0.61248, 0, 0, 0.525464,-99)    );
  // itree = 654
  fBoostWeights.push_back(0.279332);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.458864, 0, 1, 0.648427,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.676673,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.548306,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.425886,-99) , 
1, -0.77354, 1, 0, 0.488166,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.264419,-99) , 
17, 0.0317121, 1, 0, 0.420704,-99) , 
17, 0.057877, 0, 0, 0.514624,-99) , 
19, 0.0531357, 1, 0, 0.562864,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.389627,-99) , 
14, 0.907037, 1, 0, 0.535555,-99)    );
  // itree = 655
  fBoostWeights.push_back(0.206612);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.63588, 1, 1, 0.620899,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.454983,-99) , 
11, 3965.68, 0, 0, 0.541264,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.555187,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.400345,-99) , 
12, 3.58266, 1, 0, 0.474192,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.233065,-99) , 
17, 0.0144949, 0, 0, 0.396035,-99) , 
13, -0.769878, 0, 0, 0.495417,-99)    );
  // itree = 656
  fBoostWeights.push_back(0.219669);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.23302, 0, 1, 0.650264,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.488366,-99) , 
2, 0.325606, 1, 0, 0.600938,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.429489,-99) , 
17, 0.0145046, 0, 0, 0.558035,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.309181,-99) , 
19, 0.179547, 1, 0, 0.532491,-99)    );
  // itree = 657
  fBoostWeights.push_back(0.214803);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.725604,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.47353,-99) , 
3, -0.464265, 1, 0, 0.576403,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.406791,-99) , 
4, -2.34483, 0, 0, 0.527063,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.583054,-99) , 
NN_LL(
0, 
0, 
-1, 2.31393, 0, -1, 0.429263,-99) , 
1, -0.860169, 1, 0, 0.478358,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.29588,-99) , 
12, 3.22377, 0, 0, 0.43245,-99) , 
17, 0.0241897, 1, 0, 0.469444,-99)    );
  // itree = 658
  fBoostWeights.push_back(0.25929);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.639544,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.654464,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.552695,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.356532,-99) , 
17, 0.0526251, 1, 0, 0.497834,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.307168,-99) , 
3, -0.313318, 1, 0, 0.459993,-99) , 
9, 1.47525, 0, 0, 0.518948,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.339591,-99) , 
18, 2.00679, 1, 0, 0.486508,-99) , 
10, 2.45136, 0, 0, 0.506171,-99)    );
  // itree = 659
  fBoostWeights.push_back(0.265695);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.618979, 0, 1, 0.648451,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.627858,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.451804,-99) , 
12, 3.53621, 1, 0, 0.552228,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.367493,-99) , 
9, 1.11336, 0, 0, 0.488168,-99) , 
NN_LL(
0, 
0, 
-1, 0.179688, 1, -1, 0.351485,-99) , 
16, -2.17873, 1, 0, 0.43269,-99) , 
7, 0.385561, 0, 0, 0.484476,-99)    );
  // itree = 660
  fBoostWeights.push_back(0.230196);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.647325,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.562874,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.518592,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.354638,-99) , 
0, -0.735255, 0, 0, 0.452763,-99) , 
6, 1.53673, 1, 0, 0.506876,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.513235,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.34746,-99) , 
10, 2.20424, 1, 0, 0.428442,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.17443,-99) , 
16, -2.30222, 1, 0, 0.338723,-99) , 
4, -2.22664, 0, 0, 0.439105,-99) , 
15, 0.00130641, 1, 0, 0.466546,-99)    );
  // itree = 661
  fBoostWeights.push_back(0.183515);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.64783,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.631981,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.521069,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.391759,-99) , 
19, 0.0731742, 1, 0, 0.461888,-99) , 
19, 0.143959, 0, 0, 0.483238,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.322536,-99) , 
15, 0.015055, 1, 0, 0.463064,-99) , 
15, 0.00133301, 1, 0, 0.484157,-99)    );
  // itree = 662
  fBoostWeights.push_back(0.23418);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.851909, 0, 1, 0.645872,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.631375,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.458702,-99) , 
13, -0.477209, 1, 0, 0.569981,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.582741,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.434336,-99) , 
7, 0.224521, 0, 0, 0.493458,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.28361,-99) , 
18, 0.901553, 0, 0, 0.437568,-99) , 
12, 3.81885, 0, 0, 0.491856,-99) , 
15, 0.0115933, 0, 0, 0.526291,-99)    );
  // itree = 663
  fBoostWeights.push_back(0.264741);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 2.05194, 1, 1, 0.678053,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.483203, 0, 1, 0.612371,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.595246,-99) , 
NN_LL(
0, 
0, 
-1, 3.70601, 1, -1, 0.396313,-99) , 
8, 2.93559, 0, 0, 0.448615,-99) , 
0, -0.751742, 1, 0, 0.506943,-99) , 
12, 3.22784, 1, 0, 0.551528,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.326627,-99) , 
4, -2.70364, 0, 0, 0.528308,-99)    );
  // itree = 664
  fBoostWeights.push_back(0.21522);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.603735,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.392087,-99) , 
13, -0.281038, 1, 0, 0.538206,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.42016,-99) , 
1, -0.722965, 0, 0, 0.492801,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.340165,-99) , 
19, 0.143823, 1, 0, 0.467623,-99)    );
  // itree = 665
  fBoostWeights.push_back(0.245123);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.691397,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.561534,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.414801,-99) , 
12, 3.28742, 1, 0, 0.486244,-99) , 
11, 5742.77, 0, 0, 0.542949,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.590713,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.400258,-99) , 
17, 0.0153092, 0, 0, 0.501948,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.309943,-99) , 
17, 0.0338993, 1, 0, 0.422725,-99) , 
16, -2.34229, 1, 0, 0.482967,-99)    );
  // itree = 666
  fBoostWeights.push_back(0.199867);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.626665,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.492543,-99) , 
0, -0.367631, 1, 0, 0.571072,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.420496,-99) , 
0, -0.755998, 0, 0, 0.528087,-99) , 
NN_LL(
0, 
0, 
-1, 2.18016, 1, -1, 0.333927,-99) , 
15, 0.0103522, 1, 0, 0.482446,-99)    );
  // itree = 667
  fBoostWeights.push_back(0.238184);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.594912,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.38187, 1, 1, 0.585364,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.383229,-99) , 
10, 1.48547, 0, 0, 0.511345,-99) , 
NN_LL(
0, 
0, 
-1, 3.44409, 0, -1, 0.355454,-99) , 
7, 0.161019, 1, 0, 0.427214,-99) , 
0, -0.296837, 0, 0, 0.461784,-99)    );
  // itree = 668
  fBoostWeights.push_back(0.226196);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.649303,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.478101,-99) , 
15, 0.00260087, 0, 0, 0.593701,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.414378,-99) , 
18, 0.988939, 0, 0, 0.545779,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.327012,-99) , 
19, 0.15964, 1, 0, 0.517311,-99)    );
  // itree = 669
  fBoostWeights.push_back(0.273987);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.621309,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.624705,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.396417,-99) , 
2, -0.00476033, 0, 0, 0.523979,-99) , 
NN_LL(
0, 
0, 
-1, 0.193221, 1, -1, 0.340771,-99) , 
11, 4655.13, 0, 0, 0.430562,-99) , 
13, -0.367108, 0, 0, 0.47787,-99)    );
  // itree = 670
  fBoostWeights.push_back(0.230047);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.626125,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.628955,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.611143,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.525435,-99) , 
NN_LL(
0, 
0, 
-1, 1.91995, 0, -1, 0.341851,-99) , 
0, -0.51599, 0, 0, 0.414676,-99) , 
11, 2085.49, 1, 0, 0.45117,-99) , 
11, 7577.97, 0, 0, 0.480765,-99) , 
17, 0.00966797, 1, 0, 0.506051,-99)    );
  // itree = 671
  fBoostWeights.push_back(0.232275);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.66749,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.572061,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.369924,-99) , 
19, 0.106693, 1, 0, 0.509594,-99) , 
18, 1.56797, 1, 0, 0.564902,-99) , 
NN_LL(
0, 
0, 
-1, 0.00649649, 1, -1, 0.392136,-99) , 
18, 1.16327, 0, 0, 0.508194,-99)    );
  // itree = 672
  fBoostWeights.push_back(0.272651);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 3.49752, 0, 1, 0.670441,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 2.16197, 1, 1, 0.592554,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.426284,-99) , 
0, -0.674997, 1, 0, 0.507829,-99) , 
7, 0.167561, 0, 0, 0.581246,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.35661,-99) , 
7, 0.57964, 1, 0, 0.546181,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.324886,-99) , 
5, -0.278823, 1, 0, 0.513371,-99)    );
  // itree = 673
  fBoostWeights.push_back(0.250236);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.603142,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.224954, 0, 1, 0.608496,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.669301,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.372666,-99) , 
3, -0.428134, 1, 0, 0.491484,-99) , 
NN_LL(
0, 
0, 
-1, -0.360843, 0, -1, 0.367362,-99) , 
6, 1.47077, 0, 0, 0.425497,-99) , 
3, -0.613489, 1, 0, 0.481669,-99) , 
3, -0.0923403, 0, 0, 0.511741,-99)    );
  // itree = 674
  fBoostWeights.push_back(0.184138);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.311456, 1, 1, 0.589705,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.2174, 1, 1, 0.543051,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.405203,-99) , 
6, 1.71705, 1, 0, 0.489609,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.315865,-99) , 
11, 2947.01, 0, 0, 0.448501,-99) , 
19, 0.053141, 1, 0, 0.497232,-99)    );
  // itree = 675
  fBoostWeights.push_back(0.18856);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.659674,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.587329,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.479419,-99) , 
19, 0.0811357, 1, 0, 0.538157,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.392407,-99) , 
3, -0.0534547, 1, 0, 0.506825,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.384683,-99) , 
5, -1.13013, 0, 0, 0.477067,-99) , 
6, 2.45803, 0, 0, 0.508442,-99)    );
  // itree = 676
  fBoostWeights.push_back(0.206585);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.661871,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.488153,-99) , 
10, 1.93475, 1, 0, 0.5737,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.389904,-99) , 
5, -0.335024, 1, 0, 0.533588,-99) , 
NN_LL(
0, 
0, 
-1, -0.889392, 1, -1, 0.369684,-99) , 
13, -0.801612, 0, 0, 0.4885,-99)    );
  // itree = 677
  fBoostWeights.push_back(0.269168);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.601983,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.619748,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.566798,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.312139,-99) , 
4, -2.07687, 0, 0, 0.456317,-99) , 
14, 0.485334, 0, 0, 0.508357,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.338985,-99) , 
11, 2553.81, 0, 0, 0.470472,-99) , 
14, 0.838629, 0, 0, 0.500456,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.318255,-99) , 
0, -0.929052, 0, 0, 0.473396,-99)    );
  // itree = 678
  fBoostWeights.push_back(0.26859);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.773021,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.639482,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.475946,-99) , 
4, -2.06448, 0, 0, 0.570101,-99) , 
3, -0.27894, 0, 0, 0.624146,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.53621,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.363005,-99) , 
12, 3.82809, 1, 0, 0.432078,-99) , 
15, 0.00390814, 0, 0, 0.552578,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.312139,-99) , 
2, 0.631267, 1, 0, 0.52349,-99)    );
  // itree = 679
  fBoostWeights.push_back(0.287858);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.795131,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.722551,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.445981,-99) , 
15, 0.005142, 1, 0, 0.610051,-99) , 
13, -0.92622, 1, 0, 0.661469,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.395222,-99) , 
16, -2.21794, 1, 0, 0.578647,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.52788,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.341643,-99) , 
10, 1.82269, 1, 0, 0.422162,-99) , 
4, -2.06461, 1, 0, 0.515767,-99)    );
  // itree = 680
  fBoostWeights.push_back(0.211511);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.639666,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.612943,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.438775,-99) , 
5, -0.48787, 1, 0, 0.542639,-99) , 
NN_LL(
0, 
0, 
-1, -2.03941, 0, -1, 0.399919,-99) , 
15, 0.00391789, 1, 0, 0.459984,-99) , 
16, -2.79064, 1, 0, 0.491347,-99)    );
  // itree = 681
  fBoostWeights.push_back(0.217058);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 3.32105, 0, 1, 0.620839,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.565379,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.389114,-99) , 
0, -0.38866, 0, 0, 0.485175,-99) , 
9, 1.32551, 1, 0, 0.556111,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.507224,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.316509,-99) , 
16, -2.04016, 0, 0, 0.394166,-99) , 
3, -0.504206, 0, 0, 0.499688,-99)    );
  // itree = 682
  fBoostWeights.push_back(0.228702);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.678664,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.49344,-99) , 
13, -0.698877, 0, 0, 0.585252,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.611168,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.425622,-99) , 
17, 0.0338508, 1, 0, 0.532817,-99) , 
NN_LL(
0, 
0, 
-1, 0.160623, 0, -1, 0.346183,-99) , 
3, -0.412427, 1, 0, 0.435055,-99) , 
4, -2.24116, 1, 0, 0.495202,-99)    );
  // itree = 683
  fBoostWeights.push_back(0.284403);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.724408,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.625426,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.575922,-99) , 
NN_LL(
0, 
0, 
-1, 1.47402, 1, -1, 0.393705,-99) , 
1, -0.285799, 0, 0, 0.440635,-99) , 
9, 1.2616, 1, 0, 0.492019,-99) , 
6, 2.27207, 0, 0, 0.536029,-99) , 
NN_LL(
0, 
0, 
-1, 0.193221, 0, -1, 0.333377,-99) , 
9, 1.11726, 0, 0, 0.482536,-99)    );
  // itree = 684
  fBoostWeights.push_back(0.226909);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.639967,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 4555.91, 1, 1, 0.598045,-99) , 
NN_LL(
0, 
0, 
-1, 3.43513, 0, -1, 0.404746,-99) , 
17, 0.0385261, 1, 0, 0.52126,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.373264,-99) , 
18, 1.58905, 1, 0, 0.482069,-99) , 
18, 1.9644, 0, 0, 0.512262,-99)    );
  // itree = 685
  fBoostWeights.push_back(0.264527);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.28916, 1, 1, 0.658463,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.476546,-99) , 
4, -2.02603, 1, 0, 0.578435,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.651434,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.374158,-99) , 
10, 1.98484, 0, 0, 0.508541,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.242482,-99) , 
14, 0.838566, 1, 0, 0.446647,-99) , 
5, -0.820644, 0, 0, 0.51898,-99)    );
  // itree = 686
  fBoostWeights.push_back(0.219821);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.91539, 1, 1, 0.621605,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.63747,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.497341,-99) , 
4, -2.1457, 0, 0, 0.576539,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.354411,-99) , 
8, 3.2271, 1, 0, 0.525116,-99) , 
NN_LL(
0, 
0, 
-1, 1.8729, 0, -1, 0.382404,-99) , 
0, -0.63119, 0, 0, 0.476553,-99) , 
9, 1.12864, 1, 0, 0.521061,-99)    );
  // itree = 687
  fBoostWeights.push_back(0.2171);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.681258,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.616077,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.570732,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.513858,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.359868,-99) , 
12, 3.55249, 0, 0, 0.426614,-99) , 
4, -2.00685, 0, 0, 0.474999,-99) , 
6, 1.99544, 0, 0, 0.511882,-99) , 
16, -2.93188, 1, 0, 0.540119,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.386984,-99) , 
16, -1.90624, 1, 0, 0.50476,-99)    );
  // itree = 688
  fBoostWeights.push_back(0.214577);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.79502, 1, 1, 0.625434,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.48256,-99) , 
18, 1.63787, 1, 0, 0.571922,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.351324,-99) , 
19, 0.175183, 1, 0, 0.546602,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.288783,-99) , 
4, -2.68327, 0, 0, 0.517603,-99)    );
  // itree = 689
  fBoostWeights.push_back(0.222549);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0237756, 1, 1, 0.65795,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.526905,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.409327,-99) , 
14, 0.529447, 1, 0, 0.465621,-99) , 
15, 0.00637349, 1, 0, 0.586983,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.537966,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.323314,-99) , 
4, -2.10601, 0, 0, 0.452112,-99) , 
6, 1.66262, 1, 0, 0.528181,-99)    );
  // itree = 690
  fBoostWeights.push_back(0.240378);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.024284, 1, 1, 0.592184,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.44979,-99) , 
1, -0.265163, 1, 0, 0.558129,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.575707,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.2698,-99) , 
17, 0.0482253, 0, 0, 0.400923,-99) , 
19, 0.105854, 1, 0, 0.512523,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.285792,-99) , 
1, -1.04862, 0, 0, 0.48732,-99)    );
  // itree = 691
  fBoostWeights.push_back(0.243191);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.704006, 0, 1, 0.583352,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.641442,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.486736,-99) , 
2, 0.0393601, 0, 0, 0.562771,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.552177,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.241697,-99) , 
12, 3.18689, 1, 0, 0.396579,-99) , 
12, 3.59679, 0, 0, 0.481843,-99) , 
NN_LL(
0, 
0, 
-1, 1.80126, 1, -1, 0.343206,-99) , 
0, -0.525754, 1, 0, 0.427922,-99) , 
10, 2.29656, 0, 0, 0.466618,-99)    );
  // itree = 692
  fBoostWeights.push_back(0.192831);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -2.12659, 1, 1, 0.588717,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.55116,-99) , 
NN_LL(
0, 
0, 
-1, 0.0904343, 1, -1, 0.36811,-99) , 
10, 1.70318, 1, 0, 0.442797,-99) , 
12, 3.36007, 1, 0, 0.495742,-99)    );
  // itree = 693
  fBoostWeights.push_back(0.210316);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.674197,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.542355,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.356023,-99) , 
12, 3.81631, 0, 0, 0.450993,-99) , 
16, -2.39756, 1, 0, 0.53075,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.520158,-99) , 
NN_LL(
0, 
0, 
-1, 0.599253, 0, -1, 0.364219,-99) , 
8, 2.43029, 0, 0, 0.43047,-99) , 
11, 4652.54, 0, 0, 0.479346,-99)    );
  // itree = 694
  fBoostWeights.push_back(0.24542);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0289932, 0, 1, 0.621026,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.364883,-99) , 
7, 0.0321404, 0, 0, 0.577511,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.542416,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.438467,-99) , 
13, -0.259144, 1, 0, 0.496421,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.250096,-99) , 
15, 0.00500056, 1, 0, 0.416634,-99) , 
8, 2.48177, 1, 0, 0.515457,-99)    );
  // itree = 695
  fBoostWeights.push_back(0.308913);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.648232,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.588881,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.32396,-99) , 
9, 1.33099, 1, 0, 0.440522,-99) , 
19, 0.0363715, 1, 0, 0.500233,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.511337,-99) , 
NN_LL(
0, 
0, 
-1, 0.220529, 0, -1, 0.266555,-99) , 
0, -0.940663, 1, 0, 0.345885,-99) , 
8, 2.24662, 0, 0, 0.43324,-99)    );
  // itree = 696
  fBoostWeights.push_back(0.24948);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.72656,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.472088,-99) , 
10, 2.16297, 0, 0, 0.601569,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.597625,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.434136,-99) , 
1, -0.402393, 1, 0, 0.531599,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.385524,-99) , 
13, -0.728166, 0, 0, 0.49604,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.365373,-99) , 
7, 0.0320902, 0, 0, 0.468003,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.297468,-99) , 
9, 1.065, 0, 0, 0.436953,-99) , 
16, -2.67853, 1, 0, 0.482536,-99)    );
  // itree = 697
  fBoostWeights.push_back(0.233179);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.603967,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.581564,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.565965,-99) , 
NN_LL(
0, 
0, 
-1, 0.707591, 0, -1, 0.372423,-99) , 
6, 2.22005, 0, 0, 0.42101,-99) , 
1, -0.900884, 1, 0, 0.467734,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.34123,-99) , 
17, 0.0144707, 0, 0, 0.43628,-99) , 
9, 1.59826, 0, 0, 0.468508,-99)    );
  // itree = 698
  fBoostWeights.push_back(0.189912);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.992811, 0, 1, 0.624454,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.536877,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.372155,-99) , 
12, 3.52767, 0, 0, 0.466691,-99) , 
6, 1.70132, 1, 0, 0.560708,-99) , 
NN_LL(
0, 
0, 
-1, -0.810378, 0, -1, 0.428136,-99) , 
4, -2.31143, 0, 0, 0.516746,-99)    );
  // itree = 699
  fBoostWeights.push_back(0.301287);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.657261,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.608658,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.394774,-99) , 
10, 2.05668, 1, 0, 0.47196,-99) , 
19, 0.0874886, 1, 0, 0.555521,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.641921,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.358881,-99) , 
14, 0.0578412, 1, 0, 0.500157,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.280015,-99) , 
17, 0.0482639, 1, 0, 0.423847,-99) , 
14, 0.422082, 0, 0, 0.499054,-99)    );
  // itree = 700
  fBoostWeights.push_back(0.263944);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.670125,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.620558,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.413612,-99) , 
12, 3.51436, 0, 0, 0.513948,-99) , 
NN_LL(
0, 
0, 
-1, -2.24152, 1, -1, 0.398253,-99) , 
0, -0.657052, 1, 0, 0.460531,-99) , 
5, -0.478075, 0, 0, 0.506476,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.327863,-99) , 
7, 0.032213, 0, 0, 0.468254,-99)    );
  // itree = 701
  fBoostWeights.push_back(0.248107);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.685464,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.630643,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.432277,-99) , 
15, 0.00906426, 0, 0, 0.51867,-99) , 
1, -0.813228, 1, 0, 0.576175,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.58861,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.414528,-99) , 
0, -0.755998, 0, 0, 0.511232,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.318696,-99) , 
11, 4099.61, 0, 0, 0.450753,-99) , 
12, 3.52852, 1, 0, 0.514101,-99)    );
  // itree = 702
  fBoostWeights.push_back(0.206545);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.663595,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.06097, 0, 1, 0.600036,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.505481,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.328722,-99) , 
19, 0.11403, 1, 0, 0.459253,-99) , 
9, 1.14922, 1, 0, 0.514214,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.32933,-99) , 
14, 0.157327, 0, 0, 0.469204,-99) , 
15, 0.00132759, 1, 0, 0.492005,-99)    );
  // itree = 703
  fBoostWeights.push_back(0.228349);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.592768,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.427359,-99) , 
11, 5824.98, 1, 0, 0.529973,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.42142,-99) , 
0, -0.455771, 1, 0, 0.493638,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.319822,-99) , 
19, 0.18017, 1, 0, 0.474775,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.226928,-99) , 
4, -2.70364, 0, 0, 0.448909,-99)    );
  // itree = 704
  fBoostWeights.push_back(0.267757);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.706609,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.683566,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.436474,-99) , 
11, 3889.85, 1, 0, 0.562134,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.361953,-99) , 
6, 1.89234, 1, 0, 0.509108,-99) , 
17, 0.0144266, 1, 0, 0.559174,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.512308,-99) , 
NN_LL(
0, 
0, 
-1, 0.224865, 1, -1, 0.330035,-99) , 
16, -1.91607, 0, 0, 0.405088,-99) , 
10, 1.76111, 0, 0, 0.497285,-99)    );
  // itree = 705
  fBoostWeights.push_back(0.239091);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.11243, 0, 1, 0.633275,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.440212,-99) , 
9, 1.11939, 0, 0, 0.567973,-99) , 
NN_LL(
0, 
0, 
-1, 1.66388, 1, -1, 0.411963,-99) , 
7, 0.0963986, 0, 0, 0.516784,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.270899,-99) , 
17, 0.0773664, 1, 0, 0.486692,-99)    );
  // itree = 706
  fBoostWeights.push_back(0.283263);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.588543, 0, 1, 0.640542,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.622447,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.547153,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.386513,-99) , 
0, -0.765211, 0, 0, 0.46451,-99) , 
4, -1.99268, 0, 0, 0.524201,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.299252,-99) , 
4, -2.4883, 0, 0, 0.480071,-99) , 
13, -0.52189, 0, 0, 0.532227,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.317373,-99) , 
10, 1.27715, 0, 0, 0.483333,-99)    );
  // itree = 707
  fBoostWeights.push_back(0.252916);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.672602,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.422128,-99) , 
0, -0.90081, 1, 0, 0.552836,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.534489,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.573103,-99) , 
NN_LL(
0, 
0, 
-1, 1.14059, 1, -1, 0.353238,-99) , 
6, 1.68807, 0, 0, 0.430502,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.24262,-99) , 
8, 2.59291, 1, 0, 0.375161,-99) , 
13, -0.369449, 0, 0, 0.423364,-99) , 
8, 1.92556, 1, 0, 0.453271,-99)    );
  // itree = 708
  fBoostWeights.push_back(0.219908);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.761671,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.639651,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.481219,-99) , 
3, -0.554555, 0, 0, 0.575546,-99) , 
4, -2.22142, 1, 0, 0.631503,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.60036,-99) , 
NN_LL(
0, 
0, 
-1, -0.445094, 1, -1, 0.416283,-99) , 
14, 0.147368, 1, 0, 0.471911,-99) , 
15, 0.00775315, 0, 0, 0.530111,-99)    );
  // itree = 709
  fBoostWeights.push_back(0.271877);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.705969,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.60008,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.378859,-99) , 
6, 0.934436, 0, 0, 0.492345,-99) , 
1, -0.574031, 0, 0, 0.569067,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.572826,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.382055,-99) , 
0, -0.552286, 1, 0, 0.475213,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.320706,-99) , 
16, -2.50236, 0, 0, 0.422762,-99) , 
7, 0.257893, 0, 0, 0.483297,-99)    );
  // itree = 710
  fBoostWeights.push_back(0.285934);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.640389,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.606359,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.413667,-99) , 
12, 3.53866, 0, 0, 0.505142,-99) , 
8, 2.65367, 0, 0, 0.550159,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.361159,-99) , 
13, -0.190957, 1, 0, 0.519147,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.257637,-99) , 
19, 0.1414, 1, 0, 0.469955,-99)    );
  // itree = 711
  fBoostWeights.push_back(0.229081);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.721322,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.615806,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.562842,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.487969,-99) , 
14, 0.413779, 0, 0, 0.524087,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.316836,-99) , 
19, 0.0943872, 1, 0, 0.47467,-99) , 
6, 1.99527, 0, 0, 0.513488,-99) , 
15, 0.016643, 0, 0, 0.545477,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.344526,-99) , 
16, -2.84943, 0, 0, 0.514873,-99)    );
  // itree = 712
  fBoostWeights.push_back(0.360622);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.778886,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.671719,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.366485,-99) , 
1, -0.8107, 1, 0, 0.546749,-99) , 
1, -0.578886, 0, 0, 0.63492,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.604377,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.302307,-99) , 
12, 3.46658, 1, 0, 0.47041,-99) , 
11, 3603.51, 0, 0, 0.573408,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.37063,-99) , 
18, 0.616651, 0, 0, 0.543732,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.333553,-99) , 
3, -0.0127544, 1, 0, 0.517296,-99)    );
  // itree = 713
  fBoostWeights.push_back(0.301705);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 1.18257, 0, 1, 0.629198,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.619858,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.652213,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.415423,-99) , 
18, 1.42558, 0, 0, 0.526422,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.343944,-99) , 
16, -2.25905, 1, 0, 0.447018,-99) , 
8, 2.30794, 1, 0, 0.505133,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.24556,-99) , 
9, 1.06995, 0, 0, 0.457475,-99) , 
3, -0.590559, 1, 0, 0.499426,-99)    );
  // itree = 714
  fBoostWeights.push_back(0.27745);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 3.64483, 1, 1, 0.657346,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.545969,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.360112,-99) , 
14, 0.854073, 0, 0, 0.450755,-99) , 
2, 0.337736, 1, 0, 0.590741,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.504257,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.292199,-99) , 
10, 1.99593, 0, 0, 0.371151,-99) , 
17, 0.0193483, 0, 0, 0.51599,-99)    );
  // itree = 715
  fBoostWeights.push_back(0.210421);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.644637,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.485197,-99) , 
4, -2.15747, 1, 0, 0.561521,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.531416,-99) , 
NN_LL(
0, 
0, 
-1, 4654.54, 0, -1, 0.305367,-99) , 
0, -0.886801, 1, 0, 0.391683,-99) , 
13, -0.659713, 0, 0, 0.479507,-99)    );
  // itree = 716
  fBoostWeights.push_back(0.25001);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.637459,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.632372,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.343877,-99) , 
11, 3087.18, 1, 0, 0.470554,-99) , 
8, 2.38066, 0, 0, 0.54782,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.575947,-99) , 
NN_LL(
0, 
0, 
-1, 0.562102, 0, -1, 0.384266,-99) , 
11, 8076.22, 0, 0, 0.438053,-99) , 
12, 3.51881, 1, 0, 0.490695,-99)    );
  // itree = 717
  fBoostWeights.push_back(0.262098);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.39218, 0, 1, 0.644675,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 3.48699, 1, 1, 0.585296,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.579015,-99) , 
NN_LL(
0, 
0, 
-1, 0.0795552, 1, -1, 0.347612,-99) , 
16, -2.17664, 0, 0, 0.429402,-99) , 
17, 0.0579516, 0, 0, 0.486398,-99) , 
17, 0.0144877, 1, 0, 0.52719,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.32533,-99) , 
6, 2.33523, 1, 0, 0.497117,-99)    );
  // itree = 718
  fBoostWeights.push_back(0.270838);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 3.60663, 0, 1, 0.632954,-99) , 
NN_LL(
0, 
0, 
-1, 0.0445628, 1, -1, 0.465284,-99) , 
14, 0.528748, 1, 0, 0.553023,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.539111,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.266445,-99) , 
17, 0.0107964, 1, 0, 0.379919,-99) , 
17, 0.0238763, 0, 0, 0.464742,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.279015,-99) , 
17, 0.0822123, 1, 0, 0.442369,-99)    );
  // itree = 719
  fBoostWeights.push_back(0.213652);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.481842, 1, 1, 0.640787,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.475823,-99) , 
7, 0.160651, 0, 0, 0.567273,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.529936,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.355796,-99) , 
17, 0.0427786, 1, 0, 0.471037,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.262698,-99) , 
4, -2.18984, 0, 0, 0.40603,-99) , 
15, 0.00520269, 1, 0, 0.485634,-99)    );
  // itree = 720
  fBoostWeights.push_back(0.246111);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.660032,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 4541.78, 1, 1, 0.582916,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.418067,-99) , 
3, -0.283778, 1, 0, 0.524424,-99) , 
16, -2.65385, 1, 0, 0.561914,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.542092,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.308292,-99) , 
0, -0.579076, 0, 0, 0.413375,-99) , 
17, 0.0145133, 0, 0, 0.523384,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.281274,-99) , 
0, -1.01374, 0, 0, 0.498307,-99)    );
  // itree = 721
  fBoostWeights.push_back(0.236178);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.709063,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.517596,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.360466,-99) , 
19, 0.0861818, 1, 0, 0.465066,-99) , 
11, 6758.36, 0, 0, 0.532035,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.41032,-99) , 
10, 1.45731, 0, 0, 0.489872,-99) , 
NN_LL(
0, 
0, 
-1, 0.128133, 0, -1, 0.312022,-99) , 
15, 0.0103354, 1, 0, 0.451684,-99)    );
  // itree = 722
  fBoostWeights.push_back(0.22698);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.680196,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.63373,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.463663,-99) , 
6, 1.50062, 0, 0, 0.551024,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.52845,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.324598,-99) , 
18, 0.806567, 0, 0, 0.459238,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.299329,-99) , 
10, 1.84143, 0, 0, 0.405869,-99) , 
5, -0.81638, 0, 0, 0.475709,-99) , 
6, 2.78398, 0, 0, 0.497524,-99)    );
  // itree = 723
  fBoostWeights.push_back(0.2018);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.32236, 0, 1, 0.653674,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.482623,-99) , 
18, 0.986119, 0, 0, 0.597491,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.469397,-99) , 
18, 1.78619, 1, 0, 0.561533,-99) , 
NN_LL(
0, 
0, 
-1, 0.0287032, 0, -1, 0.354616,-99) , 
15, 0.0116156, 1, 0, 0.516839,-99)    );
  // itree = 724
  fBoostWeights.push_back(0.227214);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.602638,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0242712, 0, 1, 0.563181,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.393471,-99) , 
17, 0.015284, 0, 0, 0.488996,-99) , 
NN_LL(
0, 
0, 
-1, -0.484979, 0, -1, 0.344335,-99) , 
17, 0.0338508, 1, 0, 0.42726,-99) , 
0, -0.248523, 0, 0, 0.456619,-99)    );
  // itree = 725
  fBoostWeights.push_back(0.209642);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 4476.58, 0, 1, 0.636692,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.431252,-99) , 
13, -0.845326, 0, 0, 0.59247,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.559156,-99) , 
NN_LL(
0, 
0, 
-1, 0.0064897, 1, -1, 0.384688,-99) , 
10, 1.47621, 1, 0, 0.470563,-99) , 
14, 0.507782, 0, 0, 0.525997,-99)    );
  // itree = 726
  fBoostWeights.push_back(0.206829);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 3.3334, 0, 1, 0.662795,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.456354,-99) , 
12, 3.75773, 1, 0, 0.59268,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.596804,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.538726,-99) , 
NN_LL(
0, 
0, 
-1, -2.24759, 0, -1, 0.390868,-99) , 
19, 0.0331133, 1, 0, 0.432305,-99) , 
17, 0.0578667, 0, 0, 0.468191,-99) , 
18, 1.02043, 1, 0, 0.511721,-99)    );
  // itree = 727
  fBoostWeights.push_back(0.20311);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -1.07453, 1, 1, 0.591879,-99) , 
NN_LL(
0, 
0, 
-1, 0.00784141, 1, -1, 0.435322,-99) , 
16, -2.36396, 1, 0, 0.512597,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.515536,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.348171,-99) , 
10, 1.92276, 1, 0, 0.433224,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.227767,-99) , 
0, -0.808524, 0, 0, 0.365571,-99) , 
4, -2.30878, 0, 0, 0.46409,-99)    );
  // itree = 728
  fBoostWeights.push_back(0.271159);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.45039, 0, 1, 0.678087,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.427725,-99) , 
5, -1.1643, 0, 0, 0.609674,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.52848,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.3562,-99) , 
16, -2.46096, 0, 0, 0.445959,-99) , 
4, -2.30745, 0, 0, 0.552073,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.328332,-99) , 
11, 2551.9, 0, 0, 0.514877,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.372998,-99) , 
10, 1.18791, 0, 0, 0.486114,-99)    );
  // itree = 729
  fBoostWeights.push_back(0.230385);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.46862, 1, 1, 0.63582,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.45048,-99) , 
19, 0.138815, 1, 0, 0.593717,-99) , 
NN_LL(
0, 
0, 
-1, 0.00518958, 1, -1, 0.389658,-99) , 
2, 0.162128, 0, 0, 0.488825,-99)    );
  // itree = 730
  fBoostWeights.push_back(0.239633);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.618516,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.580123,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.561294,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.518357,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.317287,-99) , 
11, 4425.93, 0, 0, 0.425348,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.262714,-99) , 
16, -2.60936, 0, 0, 0.357654,-99) , 
2, 0.505808, 0, 0, 0.403088,-99) , 
16, -2.05069, 0, 0, 0.456386,-99) , 
18, 1.83094, 0, 0, 0.499934,-99)    );
  // itree = 731
  fBoostWeights.push_back(0.233215);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.705416,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.492196,-99) , 
1, -0.771179, 1, 0, 0.592364,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.698891,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.488805,-99) , 
3, -0.433559, 0, 0, 0.577381,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.392177,-99) , 
12, 3.30196, 0, 0, 0.515357,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.328132,-99) , 
18, 1.57215, 1, 0, 0.454493,-99) , 
16, -2.58612, 1, 0, 0.497273,-99)    );
  // itree = 732
  fBoostWeights.push_back(0.270231);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.672592,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.621722,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.406694,-99) , 
5, -0.614721, 1, 0, 0.518125,-99) , 
12, 3.44733, 1, 0, 0.575216,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.38204,-99) , 
5, -1.28564, 0, 0, 0.539399,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.358006,-99) , 
14, 0.822195, 1, 0, 0.502074,-99)    );
  // itree = 733
  fBoostWeights.push_back(0.315279);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.655342,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.639757,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.42613,-99) , 
19, 0.0703227, 1, 0, 0.540344,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.539295,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.327101,-99) , 
8, 2.16229, 1, 0, 0.438868,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.16596,-99) , 
0, -0.525616, 1, 0, 0.325191,-99) , 
10, 2.03166, 1, 0, 0.437375,-99) , 
17, 0.00966871, 1, 0, 0.471831,-99)    );
  // itree = 734
  fBoostWeights.push_back(0.228919);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.59331,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.582913,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.559304,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.471059,-99) , 
12, 3.21459, 1, 0, 0.516404,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.332215,-99) , 
12, 3.70037, 1, 0, 0.448189,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.258186,-99) , 
4, -2.35364, 0, 0, 0.393331,-99) , 
11, 6755.95, 0, 0, 0.446879,-99) , 
3, -0.103732, 0, 0, 0.486196,-99)    );
  // itree = 735
  fBoostWeights.push_back(0.247784);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.675359,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.626566,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.578237,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.437897,-99) , 
0, -0.584291, 0, 0, 0.498503,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.322059,-99) , 
18, 1.0421, 0, 0, 0.446044,-99) , 
17, 0.0621964, 0, 0, 0.480702,-99) , 
NN_LL(
0, 
0, 
-1, 0.0194387, 1, -1, 0.371074,-99) , 
9, 1.1257, 0, 0, 0.445554,-99) , 
1, -0.233958, 0, 0, 0.474873,-99)    );
  // itree = 736
  fBoostWeights.push_back(0.286164);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.68974,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.688199,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.475942,-99) , 
2, -0.27348, 0, 0, 0.604478,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.524904,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.307456,-99) , 
5, -1.04244, 1, 0, 0.390671,-99) , 
10, 1.68516, 1, 0, 0.471072,-99) , 
8, 2.93369, 0, 0, 0.515236,-99)    );
  // itree = 737
  fBoostWeights.push_back(0.204884);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.643536,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.585052,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.396843,-99) , 
17, 0.0161726, 0, 0, 0.495423,-99) , 
2, -0.0432057, 1, 0, 0.549198,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.520007,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.345003,-99) , 
3, -0.415988, 0, 0, 0.439141,-99) , 
17, 0.0385796, 1, 0, 0.508966,-99)    );
  // itree = 738
  fBoostWeights.push_back(0.235359);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.697157,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.570995,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.429528,-99) , 
7, 0.193222, 0, 0, 0.506726,-99) , 
17, 0.0579638, 0, 0, 0.560109,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.41065,-99) , 
12, 3.21515, 0, 0, 0.518128,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.345137,-99) , 
0, -0.34359, 1, 0, 0.472474,-99)    );
  // itree = 739
  fBoostWeights.push_back(0.286006);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.708845, 0, 1, 0.693744,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.605679,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.373725,-99) , 
15, 0.00388688, 0, 0, 0.518258,-99) , 
7, 0.161019, 1, 0, 0.601323,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.416106,-99) , 
11, 2476.95, 0, 0, 0.563971,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.354257,-99) , 
16, -1.85162, 1, 0, 0.526882,-99)    );
  // itree = 740
  fBoostWeights.push_back(0.239707);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.659617,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.453174,-99) , 
4, -1.85473, 1, 0, 0.579431,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.515504,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.346833,-99) , 
8, 2.43329, 1, 0, 0.425986,-99) , 
4, -2.18702, 0, 0, 0.503379,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.313075,-99) , 
13, -0.888331, 0, 0, 0.46896,-99)    );
  // itree = 741
  fBoostWeights.push_back(0.209939);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.718523,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.559524,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.377862,-99) , 
11, 3535.54, 1, 0, 0.475448,-99) , 
11, 6760.09, 0, 0, 0.523061,-99) , 
NN_LL(
0, 
0, 
-1, 0.105151, 0, -1, 0.411708,-99) , 
7, 0.128526, 0, 0, 0.477455,-99)    );
  // itree = 742
  fBoostWeights.push_back(0.229099);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0496906, 1, 1, 0.635281,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.444682,-99) , 
2, 0.248927, 1, 0, 0.5757,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.409418,-99) , 
8, 1.93034, 0, 0, 0.542369,-99) , 
NN_LL(
0, 
0, 
-1, 1.44282, 0, -1, 0.370948,-99) , 
14, 0.752515, 1, 0, 0.495197,-99)    );
  // itree = 743
  fBoostWeights.push_back(0.237145);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 3.84882, 1, 1, 0.644056,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0239586, 0, 1, 0.595872,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.425631,-99) , 
4, -2.31191, 0, 0, 0.540466,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.296409,-99) , 
17, 0.0675162, 1, 0, 0.501466,-99) , 
11, 6757.82, 0, 0, 0.537038,-99)    );
  // itree = 744
  fBoostWeights.push_back(0.330453);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.758018,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.634877,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.343919,-99) , 
9, 1.2289, 0, 0, 0.515059,-99) , 
11, 4966.83, 0, 0, 0.605884,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.553795,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.557755,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.347115,-99) , 
15, 0.00499153, 1, 0, 0.444338,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.195576,-99) , 
7, 0.128768, 0, 0, 0.374694,-99) , 
6, 2.15278, 0, 0, 0.416633,-99) , 
3, -0.350551, 0, 0, 0.500683,-99)    );
  // itree = 745
  fBoostWeights.push_back(0.229831);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.223989, 0, 1, 0.666328,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.491281,-99) , 
18, 1.5801, 1, 0, 0.581336,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.354588,-99) , 
5, -1.30989, 0, 0, 0.54085,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.533157,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.33529,-99) , 
11, 2034.66, 0, 0, 0.452716,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.240713,-99) , 
11, 2883.41, 1, 0, 0.391697,-99) , 
11, 3449.61, 0, 0, 0.487045,-99)    );
  // itree = 746
  fBoostWeights.push_back(0.249342);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.698945,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.55017,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.369359,-99) , 
0, -0.794951, 1, 0, 0.471265,-99) , 
1, -0.611764, 0, 0, 0.552738,-99) , 
NN_LL(
0, 
0, 
-1, 3.50877, 1, -1, 0.402224,-99) , 
11, 3600.83, 0, 0, 0.490821,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.355809,-99) , 
10, 1.38316, 0, 0, 0.45558,-99)    );
  // itree = 747
  fBoostWeights.push_back(0.27625);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.669755,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.561469,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.38014,-99) , 
0, -0.651815, 0, 0, 0.464699,-99) , 
14, 0.42295, 1, 0, 0.566393,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.348685,-99) , 
5, -0.314022, 1, 0, 0.522299,-99) , 
NN_LL(
0, 
0, 
-1, 1.25373, 1, -1, 0.366411,-99) , 
5, -1.16999, 0, 0, 0.48931,-99)    );
  // itree = 748
  fBoostWeights.push_back(0.245924);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.604455,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.610986,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.512608,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.411053,-99) , 
14, 0.560607, 0, 0, 0.462717,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.328485,-99) , 
7, 0.124534, 1, 0, 0.400498,-99) , 
11, 6057.83, 0, 0, 0.46142,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.325449,-99) , 
10, 1.38411, 0, 0, 0.426542,-99) , 
7, 0.483035, 0, 0, 0.464191,-99)    );
  // itree = 749
  fBoostWeights.push_back(0.25674);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.192779, 0, 1, 0.606855,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.637356,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.624276,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.361401,-99) , 
8, 2.21867, 0, 0, 0.534394,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.354167,-99) , 
3, -0.540651, 0, 0, 0.482568,-99) , 
17, 0.0489476, 0, 0, 0.518772,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.363624,-99) , 
17, 0.0723572, 1, 0, 0.491622,-99) , 
11, 5704.25, 0, 0, 0.530128,-99)    );
  // itree = 750
  fBoostWeights.push_back(0.225903);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.323755, 1, 1, 0.625594,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.586319,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.44324,-99) , 
14, 0.465965, 0, 0, 0.520072,-99) , 
7, 0.128264, 0, 0, 0.572686,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.597272,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.440054,-99) , 
4, -2.53281, 0, 0, 0.524162,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.282161,-99) , 
3, -0.432313, 0, 0, 0.436887,-99) , 
4, -2.29391, 0, 0, 0.51933,-99)    );
  // itree = 751
  fBoostWeights.push_back(0.223174);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0186568, 1, 1, 0.590742,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.61521,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.571767,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.380296,-99) , 
11, 4193.69, 1, 0, 0.481166,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.313893,-99) , 
3, -0.143933, 1, 0, 0.432876,-99) , 
8, 1.76353, 1, 0, 0.472346,-99) , 
19, 0.0526601, 1, 0, 0.512878,-99)    );
  // itree = 752
  fBoostWeights.push_back(0.302871);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.656197,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.626413,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.637268,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.443877,-99) , 
18, 1.38568, 1, 0, 0.54836,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.297637,-99) , 
14, 0.659392, 1, 0, 0.461072,-99) , 
5, -0.436444, 0, 0, 0.502263,-99) , 
5, -1.18369, 1, 0, 0.535233,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.280784,-99) , 
1, -1.04393, 0, 0, 0.50775,-99)    );
  // itree = 753
  fBoostWeights.push_back(0.254836);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.7187,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.481014,-99) , 
2, 0.18414, 1, 0, 0.598437,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.70518,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.484647,-99) , 
14, 0.765666, 1, 0, 0.584467,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.38928,-99) , 
7, 0.0966161, 0, 0, 0.525536,-99) , 
NN_LL(
0, 
0, 
-1, 0.0193663, 1, -1, 0.343929,-99) , 
14, 0.500047, 0, 0, 0.442799,-99) , 
18, 1.72289, 0, 0, 0.489789,-99)    );
  // itree = 754
  fBoostWeights.push_back(0.238143);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.578953,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 2494.32, 0, 1, 0.622911,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.452767,-99) , 
11, 3567.65, 1, 0, 0.553131,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.359418,-99) , 
12, 3.64444, 1, 0, 0.481172,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.29313,-99) , 
6, 2.16057, 1, 0, 0.448048,-99) , 
11, 7345.96, 0, 0, 0.475725,-99)    );
  // itree = 755
  fBoostWeights.push_back(0.257894);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 1.58489, 0, 1, 0.573057,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.681781,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.41904,-99) , 
1, -0.762854, 1, 0, 0.561854,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.340976,-99) , 
10, 2.37554, 1, 0, 0.504742,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.239499,-99) , 
2, -0.291919, 0, 0, 0.45548,-99) , 
0, -0.587871, 0, 0, 0.504268,-99)    );
  // itree = 756
  fBoostWeights.push_back(0.249923);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.70486, 0, 1, 0.709307,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.450644,-99) , 
1, -1.04664, 0, 0, 0.619167,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.596083,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.566123,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.401774,-99) , 
15, 0.0012814, 0, 0, 0.50785,-99) , 
NN_LL(
0, 
0, 
-1, 4104.72, 1, -1, 0.352362,-99) , 
15, 0.00388428, 1, 0, 0.441137,-99) , 
12, 3.2047, 1, 0, 0.481874,-99) , 
1, -0.833709, 1, 0, 0.531901,-99)    );
  // itree = 757
  fBoostWeights.push_back(0.254011);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.669606,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.425281,-99) , 
19, 0.0990099, 1, 0, 0.57468,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.564804,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.50727,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.367808,-99) , 
10, 2.27057, 0, 0, 0.442124,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.252466,-99) , 
3, -0.518224, 0, 0, 0.386214,-99) , 
10, 1.71663, 1, 0, 0.436185,-99) , 
17, 0.0241573, 1, 0, 0.490715,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.333069,-99) , 
16, -1.86425, 1, 0, 0.463169,-99)    );
  // itree = 758
  fBoostWeights.push_back(0.218668);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.616102,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.643546,-99) , 
NN_LL(
0, 
0, 
-1, -0.843231, 0, -1, 0.413634,-99) , 
18, 1.71502, 0, 0, 0.500683,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.50053,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.313971,-99) , 
9, 1.6183, 0, 0, 0.396845,-99) , 
9, 1.37703, 1, 0, 0.460021,-99) , 
18, 0.619723, 1, 0, 0.481151,-99)    );
  // itree = 759
  fBoostWeights.push_back(0.262002);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.592838,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.531384,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.31342,-99) , 
16, -2.22868, 1, 0, 0.454194,-99) , 
1, -0.628283, 0, 0, 0.508952,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.602229,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.326267,-99) , 
10, 2.11803, 0, 0, 0.44233,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.26466,-99) , 
1, -0.461583, 1, 0, 0.369554,-99) , 
18, 1.22872, 0, 0, 0.449791,-99)    );
  // itree = 760
  fBoostWeights.push_back(0.293492);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.749636, 1, 1, 0.645898,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.681919,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.636658,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.422333,-99) , 
15, 0.00910545, 1, 0, 0.540686,-99) , 
NN_LL(
0, 
0, 
-1, 1.26587, 1, -1, 0.371184,-99) , 
12, 3.56982, 1, 0, 0.4695,-99) , 
14, 0.252196, 1, 0, 0.509714,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.318314,-99) , 
10, 1.302, 0, 0, 0.466522,-99) , 
17, 0.0627954, 0, 0, 0.505806,-99)    );
  // itree = 761
  fBoostWeights.push_back(0.244802);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.684541,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.489878,-99) , 
0, -0.679955, 1, 0, 0.587526,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.526617,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.340046,-99) , 
16, -2.51114, 0, 0, 0.425854,-99) , 
11, 4099.61, 0, 0, 0.511209,-99) , 
NN_LL(
0, 
0, 
-1, 0.0708557, 0, -1, 0.309403,-99) , 
6, 2.01537, 1, 0, 0.463389,-99)    );
  // itree = 762
  fBoostWeights.push_back(0.270538);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.720902,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.634289,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.62959,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.437061,-99) , 
3, -0.60049, 1, 0, 0.509784,-99) , 
17, 0.0191801, 1, 0, 0.553053,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.356988,-99) , 
8, 1.80492, 0, 0, 0.52028,-99) , 
3, -0.151844, 0, 0, 0.555657,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.35606,-99) , 
3, -0.0127544, 1, 0, 0.527302,-99)    );
  // itree = 763
  fBoostWeights.push_back(0.288648);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.78324,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.664653,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.396815,-99) , 
14, 0.488216, 0, 0, 0.550011,-99) , 
0, -0.541155, 0, 0, 0.64307,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.446009,-99) , 
1, -0.875569, 0, 0, 0.57426,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.559133,-99) , 
NN_LL(
0, 
0, 
-1, 0.323419, 0, -1, 0.332219,-99) , 
11, 2790.55, 0, 0, 0.413531,-99) , 
11, 3605.36, 0, 0, 0.519031,-99)    );
  // itree = 764
  fBoostWeights.push_back(0.260784);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.64494,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.622788,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.404335,-99) , 
15, 0.00520399, 0, 0, 0.497288,-99) , 
17, 0.0192969, 1, 0, 0.550429,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.380827,-99) , 
3, -0.0637019, 1, 0, 0.518151,-99) , 
NN_LL(
0, 
0, 
-1, 3.40003, 0, -1, 0.356648,-99) , 
7, 0.0641562, 0, 0, 0.468479,-99)    );
  // itree = 765
  fBoostWeights.push_back(0.257402);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.661769,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.486768,-99) , 
19, 0.109116, 1, 0, 0.595011,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.613662,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.557039,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.294881,-99) , 
2, 0.460785, 0, 0, 0.406361,-99) , 
12, 3.32537, 1, 0, 0.468442,-99) , 
3, -0.370715, 1, 0, 0.531606,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.336295,-99) , 
7, 0.548009, 1, 0, 0.502772,-99)    );
  // itree = 766
  fBoostWeights.push_back(0.204107);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.289127, 0, 1, 0.615709,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.562261,-99) , 
NN_LL(
0, 
0, 
-1, 3.50395, 0, -1, 0.422043,-99) , 
17, 0.0193675, 1, 0, 0.479404,-99) , 
19, 0.0542866, 1, 0, 0.523421,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.277582,-99) , 
4, -2.70705, 0, 0, 0.496684,-99)    );
  // itree = 767
  fBoostWeights.push_back(0.249181);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.628818,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.567186,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.51022,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.42231,-99) , 
12, 3.64368, 1, 0, 0.46657,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.324682,-99) , 
2, -0.140608, 0, 0, 0.412908,-99) , 
12, 4.00592, 0, 0, 0.464588,-99) , 
2, 0.420595, 0, 0, 0.515319,-99) , 
NN_LL(
0, 
0, 
-1, 0.0290497, 1, -1, 0.300489,-99) , 
12, 3.2047, 0, 0, 0.464879,-99)    );
  // itree = 768
  fBoostWeights.push_back(0.34236);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.766883,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.679021,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.344231,-99) , 
3, -0.594433, 1, 0, 0.517923,-99) , 
3, -0.277053, 0, 0, 0.587809,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.542585,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.329195,-99) , 
17, 0.0336996, 1, 0, 0.440638,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.302996,-99) , 
2, 0.101221, 0, 0, 0.390236,-99) , 
11, 4964.33, 0, 0, 0.482154,-99)    );
  // itree = 769
  fBoostWeights.push_back(0.266767);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.737407,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.486433,-99) , 
11, 4678.28, 1, 0, 0.606322,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.619017,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.412583,-99) , 
4, -2.31143, 0, 0, 0.534023,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.308148,-99) , 
14, 0.479914, 0, 0, 0.467248,-99) , 
2, -0.0217831, 1, 0, 0.517108,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.358794,-99) , 
1, -0.937737, 0, 0, 0.484506,-99)    );
  // itree = 770
  fBoostWeights.push_back(0.246736);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.665961,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.582744,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.529494,-99) , 
NN_LL(
0, 
0, 
-1, 0.00640581, 1, -1, 0.351201,-99) , 
10, 1.67022, 1, 0, 0.402725,-99) , 
15, 0.0116293, 0, 0, 0.450398,-99) , 
13, -0.349627, 0, 0, 0.504161,-99)    );
  // itree = 771
  fBoostWeights.push_back(0.229987);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.668652,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.688274,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.488231,-99) , 
15, 0.00933512, 0, 0, 0.571353,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.378502,-99) , 
12, 3.30122, 0, 0, 0.501636,-99) , 
13, -0.631683, 0, 0, 0.555372,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.503759,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.310458,-99) , 
2, 0.208971, 1, 0, 0.410437,-99) , 
1, -0.468095, 1, 0, 0.513657,-99)    );
  // itree = 772
  fBoostWeights.push_back(0.250642);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0911519, 1, 1, 0.64112,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.440978,-99) , 
11, 3829.74, 0, 0, 0.565557,-99) , 
NN_LL(
0, 
0, 
-1, -0.381968, 0, -1, 0.39919,-99) , 
17, 0.013103, 0, 0, 0.516793,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.31259,-99) , 
17, 0.0676963, 1, 0, 0.477575,-99)    );
  // itree = 773
  fBoostWeights.push_back(0.226691);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.705568,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.479231,-99) , 
17, 0.0675582, 1, 0, 0.594077,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.640129,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.485392,-99) , 
11, 4657, 0, 0, 0.566808,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.53594,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.451536,-99) , 
17, 0.0197026, 0, 0, 0.495122,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.256144,-99) , 
2, 0.0523355, 0, 0, 0.390473,-99) , 
7, 0.290129, 0, 0, 0.463436,-99) , 
17, 0.0435379, 0, 0, 0.508556,-99)    );
  // itree = 774
  fBoostWeights.push_back(0.251618);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.690262,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.632182,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.467784,-99) , 
8, 2.51074, 1, 0, 0.547327,-99) , 
4, -2.03683, 0, 0, 0.610606,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.655348,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.456574,-99) , 
18, 1.29183, 1, 0, 0.547741,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.318675,-99) , 
0, -0.78697, 1, 0, 0.472384,-99) , 
9, 1.15905, 0, 0, 0.553616,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.395166,-99) , 
9, 1.64467, 1, 0, 0.52836,-99)    );
  // itree = 775
  fBoostWeights.push_back(0.18772);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.708788, 0, 1, 0.619781,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.4622,-99) , 
4, -1.92309, 1, 0, 0.571172,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.443603,-99) , 
8, 1.9211, 0, 0, 0.542674,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.359192,-99) , 
5, -1.40574, 0, 0, 0.519948,-99)    );
  // itree = 776
  fBoostWeights.push_back(0.256531);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.85924, 0, 1, 0.636815,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.607765,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.585181,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.436205,-99) , 
1, -0.778743, 1, 0, 0.513118,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.314447,-99) , 
3, -0.339573, 1, 0, 0.443629,-99) , 
15, 0.00391418, 1, 0, 0.504903,-99) , 
7, 0.290128, 0, 0, 0.54698,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.349612,-99) , 
11, 2553.81, 0, 0, 0.508515,-99)    );
  // itree = 777
  fBoostWeights.push_back(0.260476);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0030453, 0, 1, 0.650205,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.419445,-99) , 
19, 0.14255, 1, 0, 0.597024,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.610187,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.45366,-99) , 
9, 1.34966, 1, 0, 0.537167,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.257103,-99) , 
14, 0.396516, 1, 0, 0.467005,-99) , 
2, 0.175637, 0, 0, 0.529405,-99)    );
  // itree = 778
  fBoostWeights.push_back(0.1959);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.742951,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.49417,-99) , 
9, 1.33704, 0, 0, 0.577984,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.585839,-99) , 
NN_LL(
0, 
0, 
-1, -2.30817, 0, -1, 0.379692,-99) , 
17, 0.0629249, 0, 0, 0.447431,-99) , 
6, 1.36507, 1, 0, 0.513605,-99) , 
NN_LL(
0, 
0, 
-1, 6074.44, 0, -1, 0.404284,-99) , 
12, 3.84712, 1, 0, 0.478519,-99)    );
  // itree = 779
  fBoostWeights.push_back(0.256083);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.91592, 1, 1, 0.656962,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.674301,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.545386,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.284587,-99) , 
1, -0.595965, 1, 0, 0.464691,-99) , 
1, -0.380012, 0, 0, 0.539907,-99) , 
13, -0.850226, 1, 0, 0.571999,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.524191,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.283704,-99) , 
2, 0.0721056, 0, 0, 0.429328,-99) , 
6, 1.98175, 1, 0, 0.535474,-99)    );
  // itree = 780
  fBoostWeights.push_back(0.207434);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.632467,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.488202,-99) , 
4, -2.42164, 0, 0, 0.58495,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.391777,-99) , 
19, 0.161836, 1, 0, 0.549076,-99) , 
NN_LL(
0, 
0, 
-1, -0.502007, 0, -1, 0.386044,-99) , 
1, -0.510487, 1, 0, 0.489976,-99)    );
  // itree = 781
  fBoostWeights.push_back(0.312608);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.708157,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.33614, 1, 1, 0.652958,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.526268,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.359407,-99) , 
8, 2.25303, 0, 0, 0.444204,-99) , 
3, -0.547279, 0, 0, 0.570655,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.355097,-99) , 
2, 0.474849, 1, 0, 0.511386,-99) , 
4, -1.86764, 0, 0, 0.564167,-99)    );
  // itree = 782
  fBoostWeights.push_back(0.230279);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.664367,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.675675,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.64894,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.485814,-99) , 
13, -0.530434, 1, 0, 0.548206,-99) , 
NN_LL(
0, 
0, 
-1, 1.24327, 0, -1, 0.412166,-99) , 
9, 1.24822, 0, 0, 0.488222,-99) , 
18, 1.91315, 0, 0, 0.533189,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.359326,-99) , 
6, 1.04312, 0, 0, 0.505509,-99) , 
7, 0.61248, 0, 0, 0.524806,-99)    );
  // itree = 783
  fBoostWeights.push_back(0.197168);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 3.42904, 1, 1, 0.656091,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.482994,-99) , 
19, 0.0976695, 1, 0, 0.587828,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.589984,-99) , 
NN_LL(
0, 
0, 
-1, -2.08188, 0, -1, 0.405544,-99) , 
10, 2.15446, 0, 0, 0.476242,-99) , 
6, 1.5189, 1, 0, 0.536432,-99)    );
  // itree = 784
  fBoostWeights.push_back(0.323461);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.734541,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 3789.13, 1, 1, 0.674664,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.353546,-99) , 
9, 0.97884, 0, 0, 0.572412,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.560738,-99) , 
NN_LL(
0, 
0, 
-1, 0.280647, 0, -1, 0.312458,-99) , 
4, -2.02292, 0, 0, 0.424399,-99) , 
9, 1.15421, 1, 0, 0.48553,-99) , 
15, 0.00133818, 1, 0, 0.517112,-99)    );
  // itree = 785
  fBoostWeights.push_back(0.249101);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 3262.09, 0, 1, 0.617123,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.593746,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.3645,-99) , 
17, 0.0195625, 1, 0, 0.473527,-99) , 
11, 5706.18, 1, 0, 0.560733,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.348344,-99) , 
17, 0.0676351, 1, 0, 0.527493,-99)    );
  // itree = 786
  fBoostWeights.push_back(0.210796);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.765602,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.480633,-99) , 
3, -0.364999, 1, 0, 0.629722,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.535242,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.409116,-99) , 
12, 3.3814, 0, 0, 0.474224,-99) , 
11, 4421.69, 0, 0, 0.543517,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.529949,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.343995,-99) , 
14, 0.671224, 0, 0, 0.409615,-99) , 
5, -1.08809, 0, 0, 0.502634,-99)    );
  // itree = 787
  fBoostWeights.push_back(0.204313);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.636719,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.661357,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.481782,-99) , 
10, 1.99684, 0, 0, 0.535496,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.40737,-99) , 
3, -0.272007, 1, 0, 0.48325,-99) , 
NN_LL(
0, 
0, 
-1, -0.488349, 1, -1, 0.347484,-99) , 
9, 1.0696, 0, 0, 0.447894,-99) , 
9, 1.63507, 0, 0, 0.476315,-99)    );
  // itree = 788
  fBoostWeights.push_back(0.225989);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 1.55347, 1, 1, 0.619705,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.62649,-99) , 
NN_LL(
0, 
0, 
-1, 0.388232, 0, -1, 0.431583,-99) , 
15, 0.00768441, 0, 0, 0.508913,-99) , 
NN_LL(
0, 
0, 
-1, 3.54358, 0, -1, 0.358147,-99) , 
18, 1.02727, 0, 0, 0.461484,-99) , 
14, 0.238805, 1, 0, 0.509969,-99)    );
  // itree = 789
  fBoostWeights.push_back(0.228919);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.794496,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.676157,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.480359,-99) , 
8, 2.255, 0, 0, 0.563945,-99) , 
16, -2.42894, 0, 0, 0.612059,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.505359,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.420435,-99) , 
2, 0.149714, 1, 0, 0.463688,-99) , 
16, -2.26562, 1, 0, 0.564351,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.385507,-99) , 
2, -0.279589, 0, 0, 0.528095,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.328975,-99) , 
18, 0.672738, 0, 0, 0.50328,-99)    );
  // itree = 790
  fBoostWeights.push_back(0.234448);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 1.60575, 1, 1, 0.64011,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.66114,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.480972,-99) , 
19, 0.129137, 1, 0, 0.607872,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.431485,-99) , 
7, 0.0962017, 0, 0, 0.54733,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.378086,-99) , 
4, -2.51966, 0, 0, 0.51655,-99) , 
13, -0.429421, 0, 0, 0.55111,-99)    );
  // itree = 791
  fBoostWeights.push_back(0.258158);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0332073, 1, 1, 0.633395,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.558739,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.368904,-99) , 
16, -2.35741, 1, 0, 0.463989,-99) , 
5, -0.716616, 1, 0, 0.543444,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.337076,-99) , 
19, 0.167324, 1, 0, 0.517731,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.322806,-99) , 
18, 0.63315, 0, 0, 0.493795,-99)    );
  // itree = 792
  fBoostWeights.push_back(0.255517);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, -0.788269, 1, 1, 0.677837,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.666293,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.469904,-99) , 
13, -0.704575, 0, 0, 0.596052,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.520283,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.323593,-99) , 
8, 2.67292, 1, 0, 0.435326,-99) , 
16, -2.33085, 1, 0, 0.52051,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.360541,-99) , 
9, 1.05204, 0, 0, 0.493616,-99) , 
6, 2.29285, 0, 0, 0.535361,-99)    );
  // itree = 793
  fBoostWeights.push_back(0.302532);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.709338,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.578699,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.357534,-99) , 
13, -0.7906, 0, 0, 0.510569,-99) , 
12, 3.55754, 1, 0, 0.554969,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.308908,-99) , 
5, -0.341484, 1, 0, 0.508087,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.558218,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.327093,-99) , 
7, 0.127862, 0, 0, 0.450483,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.210913,-99) , 
18, 1.03274, 0, 0, 0.376938,-99) , 
12, 3.41039, 0, 0, 0.461268,-99)    );
  // itree = 794
  fBoostWeights.push_back(0.272818);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.684231,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -1.11563, 1, 1, 0.625877,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.451801,-99) , 
12, 3.33489, 0, 0, 0.562791,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.530915,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.307976,-99) , 
8, 2.79675, 0, 0, 0.406419,-99) , 
0, -0.596727, 1, 0, 0.493978,-99) , 
17, 0.00965398, 1, 0, 0.53512,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.302247,-99) , 
6, 2.63606, 1, 0, 0.507484,-99)    );
  // itree = 795
  fBoostWeights.push_back(0.261451);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.642496,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.639935,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.434745,-99) , 
5, -0.730679, 1, 0, 0.540833,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.352755,-99) , 
16, -2.18665, 1, 0, 0.498822,-99) , 
NN_LL(
0, 
0, 
-1, -0.413473, 0, -1, 0.349233,-99) , 
18, 1.0086, 0, 0, 0.453042,-99) , 
14, -0.0886394, 1, 0, 0.484148,-99)    );
  // itree = 796
  fBoostWeights.push_back(0.271727);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.44442, 0, 1, 0.616,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.645168,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.41742,-99) , 
18, 1.33354, 1, 0, 0.555822,-99) , 
NN_LL(
0, 
0, 
-1, 3.31663, 0, -1, 0.391689,-99) , 
11, 3804.93, 0, 0, 0.478834,-99) , 
NN_LL(
0, 
0, 
-1, -0.627863, 0, -1, 0.317315,-99) , 
1, -0.755848, 0, 0, 0.424224,-99) , 
8, 1.93499, 1, 0, 0.469703,-99)    );
  // itree = 797
  fBoostWeights.push_back(0.244725);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.653322, 0, 1, 0.666584,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.568384,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.376785,-99) , 
5, -1.05294, 0, 0, 0.5142,-99) , 
16, -2.23668, 1, 0, 0.576808,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.549076,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.307957,-99) , 
4, -2.15488, 1, 0, 0.422897,-99) , 
16, -2.50584, 0, 0, 0.522886,-99)    );
  // itree = 798
  fBoostWeights.push_back(0.273385);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.667525,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.641531,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.449299,-99) , 
10, 1.89493, 1, 0, 0.54537,-99) , 
3, -0.30403, 0, 0, 0.59861,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.432354,-99) , 
15, 0.0025988, 0, 0, 0.554705,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.348225,-99) , 
12, 3.14096, 0, 0, 0.516783,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.301419,-99) , 
10, 1.18791, 0, 0, 0.47761,-99)    );
  // itree = 799
  fBoostWeights.push_back(0.22348);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 2.19314, 0, 1, 0.640742,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.654472,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.474813,-99) , 
7, 0.0945851, 1, 0, 0.554067,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.36945,-99) , 
10, 2.25106, 1, 0, 0.4965,-99) , 
12, 3.44171, 1, 0, 0.557891,-99) , 
NN_LL(
0, 
0, 
-1, -0.746689, 0, -1, 0.420319,-99) , 
4, -2.39504, 0, 0, 0.519499,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.376048,-99) , 
10, 1.36768, 0, 0, 0.486411,-99)    );
  // itree = 800
  fBoostWeights.push_back(0.208583);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.625574,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.584282,-99) , 
NN_LL(
0, 
0, 
-1, 3.68771, 0, -1, 0.428068,-99) , 
9, 1.47993, 1, 0, 0.508804,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.346493,-99) , 
8, 2.05724, 0, 0, 0.46791,-99) , 
15, 0.0141441, 0, 0, 0.498787,-99)    );
  // itree = 801
  fBoostWeights.push_back(0.240862);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.96997, 0, 1, 0.646926,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.50837,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.240312,-99) , 
11, 3401.19, 0, 0, 0.430579,-99) , 
19, 0.0701938, 1, 0, 0.524567,-99) , 
NN_LL(
0, 
0, 
-1, -0.500804, 0, -1, 0.365677,-99) , 
17, 0.0434763, 1, 0, 0.470486,-99)    );
  // itree = 802
  fBoostWeights.push_back(0.195848);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.484629, 0, 1, 0.572121,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.58482,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.394919,-99) , 
14, 0.535963, 1, 0, 0.504519,-99) , 
NN_LL(
0, 
0, 
-1, 0.0290957, 0, -1, 0.371627,-99) , 
1, -0.844465, 1, 0, 0.43357,-99) , 
8, 2.54242, 0, 0, 0.4869,-99)    );
  // itree = 803
  fBoostWeights.push_back(0.268335);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.749723,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.676589,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.394094,-99) , 
8, 2.255, 0, 0, 0.549516,-99) , 
11, 5376.76, 0, 0, 0.61194,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.56852,-99) , 
NN_LL(
0, 
0, 
-1, -0.401555, 0, -1, 0.381496,-99) , 
11, 6689.41, 0, 0, 0.45488,-99) , 
16, -2.50584, 1, 0, 0.519099,-99)    );
  // itree = 804
  fBoostWeights.push_back(0.254403);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.66194,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.433237,-99) , 
18, 1.83653, 1, 0, 0.576511,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.612684,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.553076,-99) , 
NN_LL(
0, 
0, 
-1, -2.24338, 1, -1, 0.368522,-99) , 
4, -2.04061, 0, 0, 0.453744,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.249089,-99) , 
16, -2.70885, 0, 0, 0.41296,-99) , 
11, 2465.89, 1, 0, 0.45256,-99) , 
19, 0.0531357, 1, 0, 0.494004,-99)    );
  // itree = 805
  fBoostWeights.push_back(0.220698);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.809586,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.632658,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.489061,-99) , 
1, -0.681738, 0, 0, 0.558882,-99) , 
19, 0.0355629, 1, 0, 0.622542,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.565161,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.380222,-99) , 
8, 2.30794, 1, 0, 0.481307,-99) , 
3, -0.443371, 0, 0, 0.564833,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.418944,-99) , 
11, 2364.15, 0, 0, 0.540241,-99)    );
  // itree = 806
  fBoostWeights.push_back(0.202693);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.663126,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.49479,-99) , 
14, 0.52105, 1, 0, 0.57028,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.594281,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.513706,-99) , 
NN_LL(
0, 
0, 
-1, 1.16799, 1, -1, 0.335574,-99) , 
5, -0.523645, 0, 0, 0.398332,-99) , 
18, 0.891737, 1, 0, 0.447499,-99) , 
17, 0.0580262, 0, 0, 0.475473,-99)    );
  // itree = 807
  fBoostWeights.push_back(0.243138);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.724331,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 2.12286, 0, 1, 0.603002,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.445259,-99) , 
13, -0.685899, 0, 0, 0.558511,-99) , 
8, 2.01591, 1, 0, 0.606349,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.630925,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.491142,-99) , 
3, -0.643462, 1, 0, 0.56417,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.339006,-99) , 
8, 2.06634, 0, 0, 0.474745,-99) , 
3, -0.443274, 0, 0, 0.54826,-99)    );
  // itree = 808
  fBoostWeights.push_back(0.237651);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.758192, 1, 1, 0.652517,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.451476,-99) , 
17, 0.0240433, 0, 0, 0.58352,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.537901,-99) , 
NN_LL(
0, 
0, 
-1, 2.42109, 0, -1, 0.360843,-99) , 
7, 0.417597, 0, 0, 0.400612,-99) , 
10, 1.96492, 0, 0, 0.499914,-99)    );
  // itree = 809
  fBoostWeights.push_back(0.217779);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.03976, 1, 1, 0.680258,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.479537,-99) , 
17, 0.0242467, 0, 0, 0.601521,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.526017,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.39162,-99) , 
0, -0.326403, 0, 0, 0.44981,-99) , 
19, 0.0533933, 0, 0, 0.546695,-99) , 
NN_LL(
0, 
0, 
-1, 1.26373, 0, -1, 0.374591,-99) , 
16, -2.68724, 0, 0, 0.50493,-99)    );
  // itree = 810
  fBoostWeights.push_back(0.208256);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0241807, 1, 1, 0.647462,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.480956,-99) , 
4, -2.42534, 0, 0, 0.597678,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.522365,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.363905,-99) , 
4, -2.13124, 0, 0, 0.45087,-99) , 
13, -0.470311, 1, 0, 0.543507,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.360836,-99) , 
8, 1.80552, 0, 0, 0.515401,-99)    );
  // itree = 811
  fBoostWeights.push_back(0.24412);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.560091, 0, 1, 0.65982,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.481245,-99) , 
8, 2.35938, 1, 0, 0.599034,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.598621,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.419648,-99) , 
12, 3.5072, 0, 0, 0.505128,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.28702,-99) , 
16, -2.29175, 1, 0, 0.439563,-99) , 
3, -0.391069, 1, 0, 0.512391,-99)    );
  // itree = 812
  fBoostWeights.push_back(0.215638);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.477222, 0, 1, 0.634115,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.471248,-99) , 
19, 0.105677, 1, 0, 0.569327,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.393105,-99) , 
10, 1.29525, 0, 0, 0.526402,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.510737,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.284682,-99) , 
10, 1.95975, 1, 0, 0.377663,-99) , 
18, 1.01391, 0, 0, 0.4827,-99)    );
  // itree = 813
  fBoostWeights.push_back(0.243438);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.839876, 0, 1, 0.643595,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.483469,-99) , 
7, 0.35287, 1, 0, 0.600307,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.37149,-99) , 
13, -0.291915, 1, 0, 0.537709,-99) , 
NN_LL(
0, 
0, 
-1, -0.711283, 1, -1, 0.364784,-99) , 
5, -1.11079, 0, 0, 0.497151,-99)    );
  // itree = 814
  fBoostWeights.push_back(0.177435);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.548609, 0, 1, 0.611106,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.448912,-99) , 
16, -2.29719, 1, 0, 0.53288,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.510102,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.254668,-99) , 
8, 2.12841, 1, 0, 0.411278,-99) , 
19, 0.106289, 1, 0, 0.496698,-99)    );
  // itree = 815
  fBoostWeights.push_back(0.284376);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.6974,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.625174,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.606325,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.355224,-99) , 
15, 0.0115031, 0, 0, 0.429274,-99) , 
8, 2.5456, 0, 0, 0.507353,-99) , 
2, 0.560174, 0, 0, 0.541455,-99) , 
NN_LL(
0, 
0, 
-1, 0.225247, 0, -1, 0.373877,-99) , 
6, 2.01537, 1, 0, 0.502535,-99)    );
  // itree = 816
  fBoostWeights.push_back(0.256291);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.670937,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 1.89873, 1, 1, 0.574855,-99) , 
NN_LL(
0, 
0, 
-1, 1.50284, 0, -1, 0.401515,-99) , 
11, 5461.56, 0, 0, 0.471281,-99) , 
16, -2.84943, 1, 0, 0.509545,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.268276,-99) , 
18, 2.10344, 1, 0, 0.470178,-99)    );
  // itree = 817
  fBoostWeights.push_back(0.312107);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.511432, 0, 1, 0.69976,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.639741,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.420783,-99) , 
17, 0.0140018, 0, 0, 0.526042,-99) , 
13, -0.705023, 0, 0, 0.611851,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.625228,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.542978,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.243641,-99) , 
6, 1.49195, 1, 0, 0.379951,-99) , 
1, -0.798514, 1, 0, 0.452966,-99) , 
17, 0.0289385, 1, 0, 0.528582,-99)    );
  // itree = 818
  fBoostWeights.push_back(0.229259);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 4479.07, 0, 1, 0.638712,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.462598,-99) , 
2, -0.0380604, 0, 0, 0.581994,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.534043,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.295927,-99) , 
3, -0.254865, 1, 0, 0.432214,-99) , 
0, -0.42836, 1, 0, 0.524312,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.356201,-99) , 
9, 1.06324, 0, 0, 0.495947,-99)    );
  // itree = 819
  fBoostWeights.push_back(0.224382);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.392338, 1, 1, 0.599943,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.586398,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.387461,-99) , 
3, -0.21711, 0, 0, 0.459795,-99) , 
1, -0.666, 1, 0, 0.522207,-99) , 
NN_LL(
0, 
0, 
-1, 1.53612, 1, -1, 0.361122,-99) , 
3, -0.631411, 0, 0, 0.484608,-99)    );
  // itree = 820
  fBoostWeights.push_back(0.290778);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.739268,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.647737,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 1.0546, 1, 1, 0.573739,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.309457,-99) , 
8, 2.28086, 1, 0, 0.484368,-99) , 
13, -0.489746, 0, 0, 0.535256,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.545742,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.30777,-99) , 
3, -0.322148, 1, 0, 0.401971,-99) , 
11, 3397.07, 0, 0, 0.484515,-99) , 
11, 8859.37, 0, 0, 0.515474,-99)    );
  // itree = 821
  fBoostWeights.push_back(0.217394);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.468095, 1, 1, 0.644312,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.576428,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.442148,-99) , 
15, 0.00996472, 0, 0, 0.496853,-99) , 
19, 0.0506121, 1, 0, 0.554989,-99) , 
NN_LL(
0, 
0, 
-1, 1.21855, 1, -1, 0.37361,-99) , 
18, 1.12475, 0, 0, 0.491263,-99)    );
  // itree = 822
  fBoostWeights.push_back(0.288564);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.663915,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.669347,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.440943,-99) , 
15, 0.00283559, 0, 0, 0.57554,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.424228,-99) , 
19, 0.107319, 1, 0, 0.524492,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.329803,-99) , 
0, -0.943953, 0, 0, 0.493387,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.278041,-99) , 
1, -1.02532, 0, 0, 0.455676,-99) , 
0, -0.240134, 0, 0, 0.488617,-99)    );
  // itree = 823
  fBoostWeights.push_back(0.282836);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.593341,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.609788,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.640181,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.351993,-99) , 
8, 2.35991, 1, 0, 0.484537,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.321477,-99) , 
13, -0.896644, 0, 0, 0.425899,-99) , 
4, -1.96604, 0, 0, 0.485695,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.341512,-99) , 
5, -0.710175, 1, 0, 0.437322,-99) , 
19, 0.0353741, 1, 0, 0.464542,-99)    );
  // itree = 824
  fBoostWeights.push_back(0.242167);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.601444,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.669854,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.451937,-99) , 
9, 1.22955, 1, 0, 0.530486,-99) , 
NN_LL(
0, 
0, 
-1, 0.0288356, 1, -1, 0.357182,-99) , 
16, -2.18812, 0, 0, 0.425156,-99) , 
7, 0.481948, 0, 0, 0.458895,-99)    );
  // itree = 825
  fBoostWeights.push_back(0.248779);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.743814,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.482442,-99) , 
0, -0.737478, 0, 0, 0.602749,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.565656,-99) , 
NN_LL(
0, 
0, 
-1, -2.13195, 1, -1, 0.35094,-99) , 
3, -0.306711, 0, 0, 0.467604,-99) , 
11, 5032.06, 0, 0, 0.520676,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.331338,-99) , 
12, 4.12268, 1, 0, 0.48439,-99)    );
  // itree = 826
  fBoostWeights.push_back(0.233044);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.650016,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.557804,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.556715,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.514376,-99) , 
NN_LL(
0, 
0, 
-1, 1.29427, 0, -1, 0.292965,-99) , 
18, 0.904225, 1, 0, 0.360603,-99) , 
18, 1.71522, 0, 0, 0.409948,-99) , 
6, 1.07383, 1, 0, 0.447259,-99) , 
14, 0.966427, 0, 0, 0.477735,-99)    );
  // itree = 827
  fBoostWeights.push_back(0.269864);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.723498,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.690323,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.611979,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.420387,-99) , 
8, 2.12789, 0, 0, 0.525398,-99) , 
2, 0.466422, 0, 0, 0.585713,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.403109,-99) , 
16, -2.15623, 1, 0, 0.528872,-99) , 
3, -0.715035, 1, 0, 0.55509,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.382615,-99) , 
18, 0.712454, 0, 0, 0.527504,-99)    );
  // itree = 828
  fBoostWeights.push_back(0.206599);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.72752, 1, 1, 0.602386,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.538957,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.403162,-99) , 
3, -0.511616, 0, 0, 0.471115,-99) , 
18, 1.10678, 0, 0, 0.557119,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.304136,-99) , 
19, 0.176145, 1, 0, 0.529823,-99)    );
  // itree = 829
  fBoostWeights.push_back(0.207269);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.861784, 0, 1, 0.634999,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.370123,-99) , 
0, -0.423419, 1, 0, 0.558194,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.522217,-99) , 
NN_LL(
0, 
0, 
-1, 3.28173, 1, -1, 0.388176,-99) , 
0, -0.565587, 0, 0, 0.438297,-99) , 
12, 3.69872, 0, 0, 0.490121,-99)    );
  // itree = 830
  fBoostWeights.push_back(0.265777);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.590731,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.435152,-99) , 
4, -2.17859, 1, 0, 0.505249,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.561172,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.335208,-99) , 
7, 0.374482, 1, 0, 0.447052,-99) , 
NN_LL(
0, 
0, 
-1, 1.24452, 0, -1, 0.270414,-99) , 
6, 1.51413, 1, 0, 0.378241,-99) , 
17, 0.0193483, 1, 0, 0.422855,-99)    );
  // itree = 831
  fBoostWeights.push_back(0.160544);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0264517, 1, 1, 0.556047,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.519485,-99) , 
NN_LL(
0, 
0, 
-1, -0.583817, 0, -1, 0.34922,-99) , 
8, 1.76136, 1, 0, 0.396165,-99) , 
19, 0.0900972, 1, 0, 0.491741,-99)    );
  // itree = 832
  fBoostWeights.push_back(0.270851);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.665056,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.473102,-99) , 
16, -2.25488, 0, 0, 0.573674,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.606999,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.403945,-99) , 
14, 0.514691, 0, 0, 0.541768,-99) , 
NN_LL(
0, 
0, 
-1, 1.67385, 1, -1, 0.303568,-99) , 
16, -2.51567, 1, 0, 0.422732,-99) , 
19, 0.0541563, 1, 0, 0.475554,-99)    );
  // itree = 833
  fBoostWeights.push_back(0.239179);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0975636, 1, 1, 0.645158,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.60412,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.405301,-99) , 
1, -0.602455, 0, 0, 0.493879,-99) , 
17, 0.0288649, 1, 0, 0.576487,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.528887,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.277618,-99) , 
4, -2.24603, 0, 0, 0.4354,-99) , 
10, 1.51478, 0, 0, 0.535288,-99)    );
  // itree = 834
  fBoostWeights.push_back(0.240038);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.679148,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.652619,-99) , 
NN_LL(
0, 
0, 
-1, 0.0332597, 1, -1, 0.457032,-99) , 
19, 0.151951, 0, 0, 0.520022,-99) , 
19, 0.0358001, 1, 0, 0.55117,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.352246,-99) , 
12, 4.06822, 1, 0, 0.513997,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.345527,-99) , 
2, 0.513947, 1, 0, 0.476672,-99)    );
  // itree = 835
  fBoostWeights.push_back(0.250137);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.612947,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.569711,-99) , 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.573016,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.387655,-99) , 
4, -2.26464, 0, 0, 0.49396,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.265871,-99) , 
16, -2.2949, 1, 0, 0.444045,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.274429,-99) , 
7, 0.0322129, 0, 0, 0.40636,-99) , 
15, 0.00262166, 1, 0, 0.450297,-99) , 
2, -0.317961, 1, 0, 0.476978,-99)    );
  // itree = 836
  fBoostWeights.push_back(0.224388);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.669429,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.595505,-99) , 
NN_LL(
0, 
0, 
-1, -0.376347, 1, -1, 0.444211,-99) , 
19, 0.0807755, 1, 0, 0.504166,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.38628,-99) , 
16, -2.16966, 1, 0, 0.461831,-99) , 
18, 0.780829, 1, 0, 0.496236,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.334123,-99) , 
17, 0.067698, 1, 0, 0.471592,-99)    );
  // itree = 837
  fBoostWeights.push_back(0.245851);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.670183,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.454699,-99) , 
6, 1.5272, 1, 0, 0.561995,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.610626,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.393631,-99) , 
16, -2.38278, 1, 0, 0.505555,-99) , 
NN_LL(
0, 
0, 
-1, 1.27611, 1, -1, 0.340883,-99) , 
6, 1.18474, 0, 0, 0.443778,-99) , 
2, -0.0217831, 1, 0, 0.485189,-99)    );
  // itree = 838
  fBoostWeights.push_back(0.248833);
  fForest.push_back( 
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0640782, 1, 1, 0.595124,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.65469,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.398835,-99) , 
10, 2.14217, 1, 0, 0.528324,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.506665,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.353748,-99) , 
5, -0.760663, 0, 0, 0.424838,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.28115,-99) , 
11, 3052.8, 0, 0, 0.361576,-99) , 
0, -0.799825, 1, 0, 0.415377,-99) , 
16, -2.18996, 0, 0, 0.481483,-99)    );
  // itree = 839
  fBoostWeights.push_back(0.208459);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.624089,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.462191,-99) , 
5, -0.678389, 1, 0, 0.542662,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.574818,-99) , 
NN_LL(
0, 
0, 
-1, 0.00661079, 1, -1, 0.400715,-99) , 
4, -2.40311, 1, 0, 0.468698,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.269505,-99) , 
17, 0.00966797, 0, 0, 0.431921,-99) , 
4, -1.99723, 0, 0, 0.472944,-99)    );
  // itree = 840
  fBoostWeights.push_back(0.238678);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.718505,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.497244,-99) , 
6, 1.38169, 1, 0, 0.611266,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.631586,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.502984,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.272457,-99) , 
3, -0.275235, 1, 0, 0.419806,-99) , 
0, -0.808779, 1, 0, 0.467561,-99) , 
4, -2.12995, 1, 0, 0.526265,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.259981,-99) , 
4, -2.68327, 0, 0, 0.498088,-99)    );
  // itree = 841
  fBoostWeights.push_back(0.259521);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.607651, 1, 1, 0.664484,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.508499,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.361898,-99) , 
2, 0.173886, 0, 0, 0.442799,-99) , 
18, 1.18619, 0, 0, 0.575709,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.39013,-99) , 
9, 1.10179, 0, 0, 0.530456,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.350813,-99) , 
14, -0.0911297, 0, 0, 0.495377,-99)    );
  // itree = 842
  fBoostWeights.push_back(0.168537);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0.0943105, 1, 1, 0.570823,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.529952,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.372305,-99) , 
18, 1.17308, 0, 0, 0.468428,-99) , 
12, 3.3679, 1, 0, 0.509007,-99) , 
NN_LL(
0, 
0, 
-1, 1.53854, 1, -1, 0.381407,-99) , 
13, -0.440259, 1, 0, 0.472076,-99)    );
  // itree = 843
  fBoostWeights.push_back(0.20667);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.616642,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.615117,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.375875,-99) , 
12, 3.39274, 1, 0, 0.469346,-99) , 
19, 0.0725401, 1, 0, 0.540963,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.512366,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.35037,-99) , 
12, 3.48952, 0, 0, 0.431762,-99) , 
10, 2.04987, 1, 0, 0.492732,-99)    );
  // itree = 844
  fBoostWeights.push_back(0.240758);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.725865,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.487085,-99) , 
19, 0.101457, 1, 0, 0.629071,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.45057,-99) , 
19, 0.0306622, 0, 0, 0.586842,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.399963,-99) , 
5, -1.37604, 0, 0, 0.558959,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.500904,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.230311,-99) , 
4, -2.1108, 1, 0, 0.376798,-99) , 
11, 3230.87, 0, 0, 0.50442,-99)    );
  // itree = 845
  fBoostWeights.push_back(0.230359);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -0.478153, 1, 1, 0.641622,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.432543,-99) , 
5, -0.996323, 0, 0, 0.569126,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.550145,-99) , 
NN_LL(
0, 
0, 
-1, 0.00780476, 0, -1, 0.357339,-99) , 
16, -2.1754, 0, 0, 0.423637,-99) , 
17, 0.0290244, 1, 0, 0.490822,-99)    );
  // itree = 846
  fBoostWeights.push_back(0.327441);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.738718,-99) , 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 1.2471, 1, 1, 0.617617,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.473685,-99) , 
3, -0.0762899, 1, 0, 0.567698,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.593241,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.249998,-99) , 
11, 4966.27, 0, 0, 0.418103,-99) , 
14, 0.501061, 0, 0, 0.514501,-99) , 
16, -2.06376, 0, 0, 0.561219,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.271826,-99) , 
10, 1.1387, 0, 0, 0.508081,-99)    );
  // itree = 847
  fBoostWeights.push_back(0.183634);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 5104.74, 0, 1, 0.655199,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.490579,-99) , 
16, -2.21126, 1, 0, 0.589302,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.439748,-99) , 
18, 0.931905, 0, 0, 0.552373,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.39552,-99) , 
19, 0.141948, 1, 0, 0.524245,-99)    );
  // itree = 848
  fBoostWeights.push_back(0.281213);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.682828,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.650776,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.511804,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.243018,-99) , 
8, 2.07207, 0, 0, 0.39596,-99) , 
7, 0.12763, 1, 0, 0.494859,-99) , 
11, 6312.59, 0, 0, 0.549595,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.527384,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.334878,-99) , 
13, -0.224624, 0, 0, 0.401533,-99) , 
8, 2.61817, 1, 0, 0.504224,-99)    );
  // itree = 849
  fBoostWeights.push_back(0.228226);
  fForest.push_back( 
NN_LL(
NN_LL(
NN_LL(
0, 
0, 
-1, -2.13628, 1, 1, 0.646607,-99) , 
NN_LL(
0, 
0, 
-1, 0, 1, -1, 0.39481,-99) , 
10, 2.20591, 1, 0, 0.585596,-99) , 
NN_LL(
NN_LL(
0, 
0, 
-1, 0, 1, 1, 0.52102,-99) , 
NN_LL(
0, 
0, 
-1, -0.729481, 1, -1, 0.331084,-99) , 
13, -0.564707, 0, 0, 0.430301,-99) , 
11, 4964.33, 0, 0, 0.50123,-99)    );
   return;
}
